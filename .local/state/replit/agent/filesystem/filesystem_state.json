{"file_contents":{"drizzle.config.ts":{"content":"import { defineConfig } from \"drizzle-kit\";\n\nif (!process.env.DATABASE_URL) {\n  throw new Error(\"DATABASE_URL, ensure the database is provisioned\");\n}\n\nexport default defineConfig({\n  out: \"./migrations\",\n  schema: \"./shared/schema.ts\",\n  dialect: \"postgresql\",\n  dbCredentials: {\n    url: process.env.DATABASE_URL,\n  },\n});\n","size_bytes":325},"postcss.config.js":{"content":"export default {\n  plugins: {\n    tailwindcss: {},\n    autoprefixer: {},\n  },\n}\n","size_bytes":80},"replit.md":{"content":"# Several Sustain - Electronics Development Platform\n\n## Overview\n\nSeveral Sustain is a professional electronics development and dairy technology company website built as a full-stack web application. The platform showcases the company's services including PCB design, hardware development, firmware programming, and specialized dairy technology solutions (milk analyzers and DPU/AMCU systems). The application features a modern, responsive design with contact forms, newsletter subscriptions, service pages, and case studies to attract and engage potential clients.\n\n## Recent Changes\n\n### Comprehensive Page Enhancements (September 30, 2025)\n\n#### Home Page Enhancements\n- **Stats Section**: Added animated statistics block with 4 key metrics (50+ Projects, 30+ Clients, 98% Success Rate, 5+ Years)\n- **Testimonials Carousel**: Implemented auto-rotating testimonial carousel with 5-star ratings, customer quotes, and profiles\n- **Case Studies Preview**: Added featured case study grid with project cards linking to detailed case studies\n- **CTAs**: Mid-page CTA for services exploration and contact form section serving as conversion-focused end-page CTA\n\n#### Service Pages - Process Timelines & FAQs\nAll service pages enhanced with detailed 5-step development processes, FAQ accordions, and dual CTAs:\n\n1. **PCB Design Page**:\n   - Process: Requirements Analysis → Schematic Design → PCB Layout → Prototyping → Production\n   - 5 FAQs covering layer counts, turnaround time, certifications, formats, and design reviews\n   - Portfolio preview section and dual CTAs (Get Free Consultation + View Portfolio)\n\n2. **Web Design Page**:\n   - Process: Discovery → Design → Development → Testing → Launch  \n   - 5 FAQs covering mobile-first, timelines, CMS, SEO, and ongoing support\n   - Dual CTAs (Get Free Consultation + View Our Work)\n\n3. **Hardware Development Page**:\n   - Process: Requirements & Architecture → PCB Design → Prototyping → Testing → Production\n   - 5 FAQs covering microcontrollers, firmware integration, prototyping, IoT, and power optimization\n   - Dual CTAs (Get Free Consultation + View Our Projects)\n\n4. **Firmware Programming Page**:\n   - Process: Requirements → Core Development → Optimization & Debugging → Testing → Deployment\n   - 5 FAQs covering languages, RTOS, safety-critical apps, OTA updates, and debugging tools\n   - Dual CTAs (Get Free Consultation + View Our Work)\n\n5. **App Development Page**:\n   - Process: Discovery & Planning → UI/UX Design → Development & Integration → Testing → Deployment\n   - 5 FAQs covering platforms, IoT connectivity, offline functionality, security, and maintenance\n   - Dual CTAs (Get Free Consultation + View App Portfolio)\n\n#### Solution Pages - Product Comparison & Testimonials\n\n1. **Milk Analyzer Page**:\n   - **Product Tiers**: Three comparison cards (Basic $8.5K, Professional $15K, Enterprise $25K)\n   - Each tier details capacity, features, warranty, and target market\n   - **Testimonials**: 3 customer success stories with 5-star ratings from collection center manager, quality control head, and laboratory manager\n   - **CTA Section**: Dual CTAs (Request Demo + Download Brochure)\n\n2. **DPU/AMCU Systems Page**:\n   - **System Tiers**: Three comparison cards (DPU Basic $18K, AMCU Standard $35K, AMCU Premium $55K)\n   - Each tier shows capacity, features, integrations, and warranty\n   - **Testimonials**: 3 success stories with 5-star ratings from dairy cooperative manager, operations director, and dairy farmer\n   - **CTA Section**: Dual CTAs (Schedule Site Visit + Download Catalog)\n\n**Enhancement Patterns Applied**:\n- Consistent glassmorphism design using GlassCard components\n- Interactive FAQ accordions with rotating chevron indicators\n- Process timelines with icons, durations, descriptions, and deliverable tags\n- 5-star testimonial ratings with customer avatars and roles\n- Product comparison cards with highlighted recommended tiers\n- Conversion-focused dual CTAs on all pages\n- Proper test IDs for QA and testing\n\n### Navigation Restructuring (September 30, 2025)\n- **Menu Organization**: Reorganized main navigation into hierarchical structure:\n  - \"Design Service\" dropdown: PCB Design, Web Design\n  - \"Development Service\" dropdown: Firmware Development, Hardware Development, App Development\n  - Removed \"Case Studies\" from main navigation per user requirements\n  \n- **Routing Structure**: Implemented hierarchical routes for better organization:\n  - Design services: `/services/design/pcb-design`, `/services/design/web-design`\n  - Development services: `/services/development/firmware`, `/services/development/hardware`, `/services/development/app-development`\n  - Solutions: `/solutions/milk-analyzer`, `/solutions/dpu-amcu-systems`\n  \n- **Backward Compatibility**: Added redirect routes for all old service URLs to prevent 404 errors:\n  - `/services/pcb-design` → PCBDesign component\n  - `/services/hardware-development` → HardwareDevelopment component\n  - `/services/firmware-programming` → FirmwareProgramming component\n  - `/services/app-development` → AppDevelopment component\n\n- **New Pages**: Created WebDesign service page (`client/src/pages/services/WebDesign.tsx`) following established glassmorphism design patterns\n\n- **Updated Components**:\n  - Header: New dropdown menu structure for desktop and mobile navigation\n  - Footer: Updated service links to new hierarchical routes and added Web Design\n  - Home: Updated all service card links to point to new route structure\n\n## User Preferences\n\nPreferred communication style: Simple, everyday language.\n\n## System Architecture\n\n### Frontend Architecture\n\n**Technology Stack:**\n- **Framework:** React 18 with TypeScript\n- **Routing:** Wouter (lightweight client-side routing)\n- **UI Components:** Shadcn/ui (Radix UI primitives with Tailwind CSS)\n- **Styling:** Tailwind CSS with custom design system\n- **State Management:** TanStack Query (React Query) for server state\n- **Form Handling:** React Hook Form with Zod validation\n- **Build Tool:** Vite\n\n**Design System:**\n- Custom glassmorphism design with CSS variables for theming\n- Consistent color palette (primary green #15803d, secondary amber)\n- Responsive breakpoints following mobile-first approach\n- Inter font family for typography\n- Reusable UI components from Shadcn/ui library\n\n**Key Features:**\n- SEO-optimized pages with meta tags and Open Graph support\n- Google Analytics integration for tracking\n- Responsive navigation with mobile menu\n- Animated components with Tailwind animations\n- Accessibility-first component design\n\n### Backend Architecture\n\n**Technology Stack:**\n- **Runtime:** Node.js with Express.js\n- **Language:** TypeScript with ES modules\n- **ORM:** Drizzle ORM\n- **Database:** PostgreSQL (via Neon serverless driver)\n- **Session Management:** Configured for connect-pg-simple\n- **Validation:** Zod schemas shared between client and server\n\n**API Design:**\n- RESTful endpoints under `/api/*` prefix\n- Contact form submission: `POST /api/contact`\n- Newsletter subscription: `POST /api/newsletter`\n- JSON request/response format\n- Centralized error handling with validation feedback\n\n**Development vs Production:**\n- Development: Vite middleware integration for HMR\n- Production: Serves static built files from `dist/public`\n- Environment-based configuration via NODE_ENV\n\n### Data Storage Solutions\n\n**Database Schema (PostgreSQL):**\n\n1. **Users Table:** Authentication foundation\n   - UUID primary key with auto-generation\n   - Username and password fields\n   - Unique constraint on username\n\n2. **Contacts Table:** Lead capture and inquiry tracking\n   - UUID primary key\n   - Contact information (name, email, company)\n   - Service selection and message\n   - Consent tracking for GDPR compliance\n   - Timestamp for creation tracking\n\n3. **Newsletter Subscriptions Table:** Email marketing\n   - UUID primary key\n   - Unique email constraint\n   - Creation timestamp\n\n**Storage Strategy:**\n- In-memory storage (MemStorage) for development/testing\n- Designed for PostgreSQL production deployment via Drizzle ORM\n- Migration support through Drizzle Kit (config in drizzle.config.ts)\n- Shared schema types between client and server for type safety\n\n### External Dependencies\n\n**Third-Party Services:**\n\n1. **Google Analytics:** User behavior tracking and conversion monitoring\n   - Configured via VITE_GA_MEASUREMENT_ID environment variable\n   - Page view tracking for SPA navigation\n   - Custom event tracking capabilities\n\n2. **Neon Database:** Serverless PostgreSQL hosting\n   - Accessed via @neondatabase/serverless package\n   - Connection pooling and edge compatibility\n   - Configured through DATABASE_URL environment variable\n\n**Key Libraries:**\n\n1. **UI/UX:**\n   - Radix UI: Unstyled, accessible component primitives\n   - Lucide React: Icon system\n   - Embla Carousel: Touch-enabled carousels\n   - Vaul: Drawer/sheet components\n\n2. **Forms & Validation:**\n   - React Hook Form: Form state management\n   - Zod: Runtime type validation\n   - @hookform/resolvers: Integration layer\n\n3. **Development Tools:**\n   - Replit-specific plugins for development environment\n   - Runtime error overlay for debugging\n   - Source map support for production debugging\n\n**Build & Deployment:**\n- Vite for frontend bundling and optimization\n- esbuild for backend compilation\n- Path aliases configured for clean imports (@/, @shared/, @assets/)\n- PostCSS with Tailwind and Autoprefixer\n- Static asset serving with proper caching headers\n\n**Environment Configuration:**\n- DATABASE_URL: PostgreSQL connection string (required)\n- VITE_GA_MEASUREMENT_ID: Google Analytics tracking ID (optional)\n- NODE_ENV: Environment mode (development/production)","size_bytes":9712},"tailwind.config.ts":{"content":"import type { Config } from \"tailwindcss\";\n\nexport default {\n  darkMode: [\"class\"],\n  content: [\"./client/index.html\", \"./client/src/**/*.{js,jsx,ts,tsx}\"],\n  theme: {\n    extend: {\n      borderRadius: {\n        lg: \"var(--radius)\",\n        md: \"calc(var(--radius) - 2px)\",\n        sm: \"calc(var(--radius) - 4px)\",\n      },\n      colors: {\n        background: \"var(--background)\",\n        foreground: \"var(--foreground)\",\n        card: {\n          DEFAULT: \"var(--card)\",\n          foreground: \"var(--card-foreground)\",\n        },\n        popover: {\n          DEFAULT: \"var(--popover)\",\n          foreground: \"var(--popover-foreground)\",\n        },\n        primary: {\n          DEFAULT: \"var(--primary)\",\n          foreground: \"var(--primary-foreground)\",\n        },\n        secondary: {\n          DEFAULT: \"var(--secondary)\",\n          foreground: \"var(--secondary-foreground)\",\n        },\n        muted: {\n          DEFAULT: \"var(--muted)\",\n          foreground: \"var(--muted-foreground)\",\n        },\n        accent: {\n          DEFAULT: \"var(--accent)\",\n          foreground: \"var(--accent-foreground)\",\n        },\n        destructive: {\n          DEFAULT: \"var(--destructive)\",\n          foreground: \"var(--destructive-foreground)\",\n        },\n        border: \"var(--border)\",\n        input: \"var(--input)\",\n        ring: \"var(--ring)\",\n        chart: {\n          \"1\": \"var(--chart-1)\",\n          \"2\": \"var(--chart-2)\",\n          \"3\": \"var(--chart-3)\",\n          \"4\": \"var(--chart-4)\",\n          \"5\": \"var(--chart-5)\",\n        },\n        sidebar: {\n          DEFAULT: \"var(--sidebar-background)\",\n          foreground: \"var(--sidebar-foreground)\",\n          primary: \"var(--sidebar-primary)\",\n          \"primary-foreground\": \"var(--sidebar-primary-foreground)\",\n          accent: \"var(--sidebar-accent)\",\n          \"accent-foreground\": \"var(--sidebar-accent-foreground)\",\n          border: \"var(--sidebar-border)\",\n          ring: \"var(--sidebar-ring)\",\n        },\n      },\n      fontFamily: {\n        sans: [\"var(--font-sans)\"],\n        serif: [\"var(--font-serif)\"],\n        mono: [\"var(--font-mono)\"],\n      },\n      keyframes: {\n        \"accordion-down\": {\n          from: {\n            height: \"0\",\n          },\n          to: {\n            height: \"var(--radix-accordion-content-height)\",\n          },\n        },\n        \"accordion-up\": {\n          from: {\n            height: \"var(--radix-accordion-content-height)\",\n          },\n          to: {\n            height: \"0\",\n          },\n        },\n        fadeIn: {\n          from: { opacity: \"0\" },\n          to: { opacity: \"1\" },\n        },\n        slideUp: {\n          from: { \n            opacity: \"0\", \n            transform: \"translateY(30px)\" \n          },\n          to: { \n            opacity: \"1\", \n            transform: \"translateY(0)\" \n          },\n        },\n      },\n      animation: {\n        \"accordion-down\": \"accordion-down 0.2s ease-out\",\n        \"accordion-up\": \"accordion-up 0.2s ease-out\",\n        \"fade-in\": \"fadeIn 0.6s ease-out\",\n        \"slide-up\": \"slideUp 0.8s ease-out\",\n      },\n    },\n  },\n  plugins: [require(\"tailwindcss-animate\"), require(\"@tailwindcss/typography\")],\n} satisfies Config;\n","size_bytes":3178},"vite.config.ts":{"content":"// vite.config.ts\nimport { defineConfig } from \"vite\";\nimport react from \"@vitejs/plugin-react\";\nimport path from \"path\";\nimport { fileURLToPath } from \"url\";\nimport runtimeErrorOverlay from \"@replit/vite-plugin-runtime-error-modal\";\n\nconst __dirname = path.dirname(fileURLToPath(new URL(import.meta.url)));\n\nexport default defineConfig(async () => {\n  const plugins = [\n    react(),\n    runtimeErrorOverlay(),\n  ];\n\n  // Conditionally load replit-only dev plugins\n  if (process.env.NODE_ENV !== \"production\" && process.env.REPL_ID !== undefined) {\n    const cartographer = (await import(\"@replit/vite-plugin-cartographer\")).cartographer;\n    const devBanner = (await import(\"@replit/vite-plugin-dev-banner\")).devBanner;\n    plugins.push(cartographer(), devBanner());\n  }\n\n  return {\n    plugins,\n    resolve: {\n      alias: {\n        \"@\": path.resolve(__dirname, \"client\", \"src\"),\n        \"@shared\": path.resolve(__dirname, \"shared\"),\n        \"@assets\": path.resolve(__dirname, \"attached_assets\"),\n      },\n    },\n    root: path.resolve(__dirname, \"client\"),\n    build: {\n      // move the chunk-size setting here instead of passing a CLI flag\n      chunkSizeWarningLimit: 1000,\n      outDir: path.resolve(__dirname, \"dist\", \"public\"),\n      emptyOutDir: true,\n    },\n    server: {\n      fs: {\n        strict: true,\n        deny: [\"**/.*\"],\n      },\n    },\n  };\n});","size_bytes":1366},"client/env.d.ts":{"content":"/// <reference types=\"vite/client\" />\n\ninterface ImportMetaEnv {\n  readonly VITE_GA_MEASUREMENT_ID: string;\n}\n\ninterface ImportMeta {\n  readonly env: ImportMetaEnv;\n}","size_bytes":166},"server/index.ts":{"content":"import express, { type Request, Response, NextFunction } from \"express\";\nimport { registerRoutes } from \"./routes\";\nimport { setupVite, serveStatic, log } from \"./vite\";\nimport viteConfig from \"../vite.config\";\n\nconst app = express();\n\ndeclare module 'http' {\n  interface IncomingMessage {\n    rawBody: unknown\n  }\n}\napp.use(express.json({\n  verify: (req, _res, buf) => {\n    req.rawBody = buf;\n  }\n}));\napp.use(express.urlencoded({ extended: false }));\n\napp.use((req, res, next) => {\n  const start = Date.now();\n  const path = req.path;\n  let capturedJsonResponse: Record<string, any> | undefined = undefined;\n\n  const originalResJson = res.json;\n  res.json = function (bodyJson, ...args) {\n    capturedJsonResponse = bodyJson;\n    return originalResJson.apply(res, [bodyJson, ...args]);\n  };\n\n  res.on(\"finish\", () => {\n    const duration = Date.now() - start;\n    if (path.startsWith(\"/api\")) {\n      let logLine = `${req.method} ${path} ${res.statusCode} in ${duration}ms`;\n      if (capturedJsonResponse) {\n        logLine += ` :: ${JSON.stringify(capturedJsonResponse)}`;\n      }\n\n      if (logLine.length > 80) {\n        logLine = logLine.slice(0, 79) + \"…\";\n      }\n\n      log(logLine);\n    }\n  });\n\n  next();\n});\n\n(async () => {\n  const server = await registerRoutes(app);\n\n  app.use((err: any, _req: Request, res: Response, _next: NextFunction) => {\n    const status = err.status || err.statusCode || 500;\n    const message = err.message || \"Internal Server Error\";\n\n    res.status(status).json({ message });\n    throw err;\n  });\n\n  // importantly only setup vite in development and after\n  // setting up all the other routes so the catch-all route\n  // doesn't interfere with the other routes\n  if (app.get(\"env\") === \"development\") {\n    // Patch viteConfig to resolve the async function before setupVite uses it\n    if (typeof viteConfig === 'function') {\n      const resolvedConfig = await viteConfig({ \n        command: 'serve', \n        mode: 'development',\n        isSsrBuild: false\n      });\n      Object.assign(viteConfig, resolvedConfig);\n    }\n    await setupVite(app, server);\n  } else {\n    serveStatic(app);\n  }\n\n  // ALWAYS serve the app on the port specified in the environment variable PORT\n  // Other ports are firewalled. Default to 5000 if not specified.\n  // this serves both the API and the client.\n  // It is the only port that is not firewalled.\n  const port = parseInt(process.env.PORT || '5000', 10);\n  server.listen({\n    port,\n    host: \"0.0.0.0\",\n    reusePort: true,\n  }, () => {\n    log(`serving on port ${port}`);\n  });\n})();\n","size_bytes":2570},"server/routes.ts":{"content":"import type { Express } from \"express\";\nimport { createServer, type Server } from \"http\";\nimport { z } from \"zod\";\nimport { storage } from \"./storage\";\n\n// Validation schemas\nconst contactSchema = z.object({\n  name: z.string().min(2, \"Name must be at least 2 characters\"),\n  email: z.string().email(\"Please enter a valid email address\"),\n  company: z.string().optional(),\n  service: z.string().min(1, \"Please select a service\"),\n  message: z.string().min(10, \"Message must be at least 10 characters\"),\n  consent: z.boolean().refine(val => val, \"You must agree to receive communications\"),\n});\n\nconst newsletterSchema = z.object({\n  email: z.string().email(\"Please enter a valid email address\"),\n});\n\nexport async function registerRoutes(app: Express): Promise<Server> {\n  // Contact form endpoint\n  app.post(\"/api/contact\", async (req, res) => {\n    try {\n      const validatedData = contactSchema.parse(req.body);\n      \n      // Store the contact submission\n      const contact = await storage.createContact(validatedData);\n      \n      // TODO: Send email notification to team\n      // TODO: Send confirmation email to user\n      \n      res.json({ \n        success: true, \n        message: \"Contact form submitted successfully\",\n        id: contact.id \n      });\n    } catch (error) {\n      if (error instanceof z.ZodError) {\n        res.status(400).json({ \n          success: false, \n          message: \"Validation error\", \n          errors: error.errors \n        });\n      } else {\n        console.error(\"Contact form error:\", error);\n        res.status(500).json({ \n          success: false, \n          message: \"Internal server error\" \n        });\n      }\n    }\n  });\n\n  // Newsletter subscription endpoint\n  app.post(\"/api/newsletter\", async (req, res) => {\n    try {\n      const validatedData = newsletterSchema.parse(req.body);\n      \n      // Store the newsletter subscription\n      const subscription = await storage.createNewsletterSubscription(validatedData);\n      \n      // TODO: Add to email marketing service (Mailchimp, SendGrid, etc.)\n      \n      res.json({ \n        success: true, \n        message: \"Newsletter subscription successful\",\n        id: subscription.id \n      });\n    } catch (error) {\n      if (error instanceof z.ZodError) {\n        res.status(400).json({ \n          success: false, \n          message: \"Validation error\", \n          errors: error.errors \n        });\n      } else {\n        console.error(\"Newsletter subscription error:\", error);\n        res.status(500).json({ \n          success: false, \n          message: \"Internal server error\" \n        });\n      }\n    }\n  });\n\n  // Health check endpoint\n  app.get(\"/api/health\", (req, res) => {\n    res.json({ \n      status: \"ok\", \n      timestamp: new Date().toISOString(),\n      service: \"Several Sustain API\"\n    });\n  });\n\n  const httpServer = createServer(app);\n  return httpServer;\n}\n","size_bytes":2882},"server/storage.ts":{"content":"import { type User, type InsertUser, type Contact, type InsertContact, type NewsletterSubscription, type InsertNewsletterSubscription } from \"@shared/schema\";\nimport { randomUUID } from \"crypto\";\n\n// modify the interface with any CRUD methods\n// you might need\n\nexport interface IStorage {\n  getUser(id: string): Promise<User | undefined>;\n  getUserByUsername(username: string): Promise<User | undefined>;\n  createUser(user: InsertUser): Promise<User>;\n  createContact(contact: InsertContact): Promise<Contact>;\n  createNewsletterSubscription(subscription: InsertNewsletterSubscription): Promise<NewsletterSubscription>;\n  getContacts(): Promise<Contact[]>;\n  getNewsletterSubscriptions(): Promise<NewsletterSubscription[]>;\n}\n\nexport class MemStorage implements IStorage {\n  private users: Map<string, User>;\n  private contacts: Map<string, Contact>;\n  private newsletterSubscriptions: Map<string, NewsletterSubscription>;\n\n  constructor() {\n    this.users = new Map();\n    this.contacts = new Map();\n    this.newsletterSubscriptions = new Map();\n  }\n\n  async getUser(id: string): Promise<User | undefined> {\n    return this.users.get(id);\n  }\n\n  async getUserByUsername(username: string): Promise<User | undefined> {\n    return Array.from(this.users.values()).find(\n      (user) => user.username === username,\n    );\n  }\n\n  async createUser(insertUser: InsertUser): Promise<User> {\n    const id = randomUUID();\n    const user: User = { ...insertUser, id };\n    this.users.set(id, user);\n    return user;\n  }\n\n  async createContact(insertContact: InsertContact): Promise<Contact> {\n    const id = randomUUID();\n    const contact: Contact = { \n      ...insertContact, \n      id,\n      createdAt: new Date()\n    };\n    this.contacts.set(id, contact);\n    return contact;\n  }\n\n  async createNewsletterSubscription(insertSubscription: InsertNewsletterSubscription): Promise<NewsletterSubscription> {\n    // Check if email already exists\n    const existing = Array.from(this.newsletterSubscriptions.values()).find(\n      (sub) => sub.email === insertSubscription.email\n    );\n    \n    if (existing) {\n      throw new Error(\"Email already subscribed to newsletter\");\n    }\n\n    const id = randomUUID();\n    const subscription: NewsletterSubscription = {\n      ...insertSubscription,\n      id,\n      createdAt: new Date()\n    };\n    this.newsletterSubscriptions.set(id, subscription);\n    return subscription;\n  }\n\n  async getContacts(): Promise<Contact[]> {\n    return Array.from(this.contacts.values()).sort(\n      (a, b) => b.createdAt.getTime() - a.createdAt.getTime()\n    );\n  }\n\n  async getNewsletterSubscriptions(): Promise<NewsletterSubscription[]> {\n    return Array.from(this.newsletterSubscriptions.values()).sort(\n      (a, b) => b.createdAt.getTime() - a.createdAt.getTime()\n    );\n  }\n}\n\nexport const storage = new MemStorage();\n","size_bytes":2837},"server/vite.ts":{"content":"import express, { type Express } from \"express\";\nimport fs from \"fs\";\nimport path from \"path\";\nimport { createServer as createViteServer, createLogger } from \"vite\";\nimport { type Server } from \"http\";\nimport viteConfig from \"../vite.config\";\nimport { nanoid } from \"nanoid\";\n\nconst viteLogger = createLogger();\n\nexport function log(message: string, source = \"express\") {\n  const formattedTime = new Date().toLocaleTimeString(\"en-US\", {\n    hour: \"numeric\",\n    minute: \"2-digit\",\n    second: \"2-digit\",\n    hour12: true,\n  });\n\n  console.log(`${formattedTime} [${source}] ${message}`);\n}\n\nexport async function setupVite(app: Express, server: Server) {\n  const serverOptions = {\n    middlewareMode: true,\n    hmr: { server },\n    allowedHosts: true as const,\n  };\n\n  const vite = await createViteServer({\n    ...viteConfig,\n    configFile: false,\n    customLogger: {\n      ...viteLogger,\n      error: (msg, options) => {\n        viteLogger.error(msg, options);\n        process.exit(1);\n      },\n    },\n    server: serverOptions,\n    appType: \"custom\",\n  });\n\n  app.use(vite.middlewares);\n  app.use(\"*\", async (req, res, next) => {\n    const url = req.originalUrl;\n\n    try {\n      const clientTemplate = path.resolve(\n        import.meta.dirname,\n        \"..\",\n        \"client\",\n        \"index.html\",\n      );\n\n      // always reload the index.html file from disk incase it changes\n      let template = await fs.promises.readFile(clientTemplate, \"utf-8\");\n      template = template.replace(\n        `src=\"/src/main.tsx\"`,\n        `src=\"/src/main.tsx?v=${nanoid()}\"`,\n      );\n      const page = await vite.transformIndexHtml(url, template);\n      res.status(200).set({ \"Content-Type\": \"text/html\" }).end(page);\n    } catch (e) {\n      vite.ssrFixStacktrace(e as Error);\n      next(e);\n    }\n  });\n}\n\nexport function serveStatic(app: Express) {\n  const distPath = path.resolve(import.meta.dirname, \"public\");\n\n  if (!fs.existsSync(distPath)) {\n    throw new Error(\n      `Could not find the build directory: ${distPath}, make sure to build the client first`,\n    );\n  }\n\n  app.use(express.static(distPath));\n\n  // fall through to index.html if the file doesn't exist\n  app.use(\"*\", (_req, res) => {\n    res.sendFile(path.resolve(distPath, \"index.html\"));\n  });\n}\n","size_bytes":2263},"shared/schema.ts":{"content":"import { sql } from \"drizzle-orm\";\nimport { pgTable, text, varchar, timestamp, boolean } from \"drizzle-orm/pg-core\";\nimport { createInsertSchema } from \"drizzle-zod\";\nimport { z } from \"zod\";\n\nexport const users = pgTable(\"users\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  username: text(\"username\").notNull().unique(),\n  password: text(\"password\").notNull(),\n});\n\nexport const contacts = pgTable(\"contacts\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  name: text(\"name\").notNull(),\n  email: text(\"email\").notNull(),\n  company: text(\"company\"),\n  service: text(\"service\").notNull(),\n  message: text(\"message\").notNull(),\n  consent: boolean(\"consent\").notNull(),\n  createdAt: timestamp(\"created_at\").defaultNow().notNull(),\n});\n\nexport const newsletterSubscriptions = pgTable(\"newsletter_subscriptions\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  email: text(\"email\").notNull().unique(),\n  createdAt: timestamp(\"created_at\").defaultNow().notNull(),\n});\n\nexport const insertUserSchema = createInsertSchema(users).pick({\n  username: true,\n  password: true,\n});\n\nexport const insertContactSchema = createInsertSchema(contacts).omit({\n  id: true,\n  createdAt: true,\n});\n\nexport const insertNewsletterSubscriptionSchema = createInsertSchema(newsletterSubscriptions).omit({\n  id: true,\n  createdAt: true,\n});\n\nexport type InsertUser = z.infer<typeof insertUserSchema>;\nexport type User = typeof users.$inferSelect;\nexport type InsertContact = z.infer<typeof insertContactSchema>;\nexport type Contact = typeof contacts.$inferSelect;\nexport type InsertNewsletterSubscription = z.infer<typeof insertNewsletterSubscriptionSchema>;\nexport type NewsletterSubscription = typeof newsletterSubscriptions.$inferSelect;\n","size_bytes":1783},"client/src/App.tsx":{"content":"import { Switch, Route } from \"wouter\";\nimport { queryClient } from \"./lib/queryClient\";\nimport { QueryClientProvider } from \"@tanstack/react-query\";\nimport { Toaster } from \"@/components/ui/toaster\";\nimport { TooltipProvider } from \"@/components/ui/tooltip\";\nimport { useEffect } from \"react\";\nimport { initGA } from \"./lib/analytics\";\nimport { useAnalytics } from \"./hooks/use-analytics\";\n\nimport Home from \"@/pages/Home\";\nimport About from \"@/pages/About\";\nimport Contact from \"@/pages/Contact\";\nimport PCBDesign from \"@/pages/services/PCBDesign\";\nimport WebDesign from \"@/pages/services/WebDesign\";\nimport HardwareDevelopment from \"@/pages/services/HardwareDevelopment\";\nimport FirmwareProgramming from \"@/pages/services/FirmwareProgramming\";\nimport AppDevelopment from \"@/pages/services/AppDevelopment\";\nimport MilkAnalyzer from \"@/pages/solutions/MilkAnalyzer\";\nimport DPUAMCUSystems from \"@/pages/solutions/DPUAMCUSystems\";\nimport CaseStudies from \"@/pages/CaseStudies\";\nimport PrivacyPolicy from \"@/pages/PrivacyPolicy\";\nimport TermsOfService from \"@/pages/TermsOfService\";\nimport NotFound from \"@/pages/not-found\";\n\nfunction Router() {\n  useAnalytics();\n  \n  return (\n    <Switch>\n      <Route path=\"/\" component={Home} />\n      <Route path=\"/about\" component={About} />\n      <Route path=\"/contact\" component={Contact} />\n      \n      {/* Design Services */}\n      <Route path=\"/services/design/pcb-design\" component={PCBDesign} />\n      <Route path=\"/services/design/web-design\" component={WebDesign} />\n      \n      {/* Development Services */}\n      <Route path=\"/services/development/firmware\" component={FirmwareProgramming} />\n      <Route path=\"/services/development/hardware\" component={HardwareDevelopment} />\n      <Route path=\"/services/development/app-development\" component={AppDevelopment} />\n      \n      {/* Backward compatibility redirects for old service routes */}\n      <Route path=\"/services/pcb-design\" component={PCBDesign} />\n      <Route path=\"/services/hardware-development\" component={HardwareDevelopment} />\n      <Route path=\"/services/firmware-programming\" component={FirmwareProgramming} />\n      <Route path=\"/services/app-development\" component={AppDevelopment} />\n      \n      {/* Solutions */}\n      <Route path=\"/solutions/milk-analyzer\" component={MilkAnalyzer} />\n      <Route path=\"/solutions/dpu-amcu-systems\" component={DPUAMCUSystems} />\n      \n      {/* Legal & Other */}\n      <Route path=\"/case-studies\" component={CaseStudies} />\n      <Route path=\"/privacy-policy\" component={PrivacyPolicy} />\n      <Route path=\"/terms-of-service\" component={TermsOfService} />\n      <Route component={NotFound} />\n    </Switch>\n  );\n}\n\nfunction App() {\n  useEffect(() => {\n    if (!import.meta.env.VITE_GA_MEASUREMENT_ID) {\n      console.warn('Missing required Google Analytics key: VITE_GA_MEASUREMENT_ID');\n    } else {\n      initGA();\n    }\n  }, []);\n\n  return (\n    <QueryClientProvider client={queryClient}>\n      <TooltipProvider>\n        <Toaster />\n        <Router />\n      </TooltipProvider>\n    </QueryClientProvider>\n  );\n}\n\nexport default App;\n","size_bytes":3098},"client/src/index.css":{"content":"@import url('https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700;800;900&display=swap');\n@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\n:root {\n  --background: hsl(0 0% 100%);\n  --foreground: hsl(222.2 84% 4.9%);\n  --card: hsl(0 0% 100%);\n  --card-foreground: hsl(222.2 84% 4.9%);\n  --popover: hsl(0 0% 100%);\n  --popover-foreground: hsl(222.2 84% 4.9%);\n  --primary: hsl(142 76% 36%);\n  --primary-foreground: hsl(355.7 100% 97.3%);\n  --secondary: hsl(37 91% 55%);\n  --secondary-foreground: hsl(222.2 84% 4.9%);\n  --muted: hsl(210 40% 96%);\n  --muted-foreground: hsl(215.4 16.3% 46.9%);\n  --accent: hsl(210 40% 96%);\n  --accent-foreground: hsl(222.2 84% 4.9%);\n  --destructive: hsl(0 84.2% 60.2%);\n  --destructive-foreground: hsl(210 40% 98%);\n  --border: hsl(214.3 31.8% 91.4%);\n  --input: hsl(214.3 31.8% 91.4%);\n  --ring: hsl(142 76% 36%);\n  --radius: 0.75rem;\n  --font-sans: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', sans-serif;\n  \n  /* Glassmorphism variables */\n  --glass-bg: hsla(0 0% 100% / 0.1);\n  --glass-border: hsla(0 0% 100% / 0.2);\n  --glass-card-bg: hsla(0 0% 100% / 0.05);\n  --glass-card-border: hsla(0 0% 100% / 0.1);\n}\n\n.dark {\n  --background: hsl(222.2 84% 4.9%);\n  --foreground: hsl(210 40% 98%);\n  --card: hsl(222.2 84% 4.9%);\n  --card-foreground: hsl(210 40% 98%);\n  --popover: hsl(222.2 84% 4.9%);\n  --popover-foreground: hsl(210 40% 98%);\n  --primary: hsl(142 76% 36%);\n  --primary-foreground: hsl(355.7 100% 97.3%);\n  --secondary: hsl(217.2 32.6% 17.5%);\n  --secondary-foreground: hsl(210 40% 98%);\n  --muted: hsl(217.2 32.6% 17.5%);\n  --muted-foreground: hsl(215 20.2% 65.1%);\n  --accent: hsl(217.2 32.6% 17.5%);\n  --accent-foreground: hsl(210 40% 98%);\n  --destructive: hsl(0 62.8% 30.6%);\n  --destructive-foreground: hsl(210 40% 98%);\n  --border: hsl(217.2 32.6% 17.5%);\n  --input: hsl(217.2 32.6% 17.5%);\n  --ring: hsl(142 76% 36%);\n}\n\n@layer base {\n  * {\n    @apply border-border;\n  }\n\n  body {\n    @apply font-sans antialiased bg-background text-foreground;\n  }\n}\n\n@layer components {\n  .glass {\n    background: var(--glass-bg);\n    backdrop-filter: blur(10px);\n    -webkit-backdrop-filter: blur(10px);\n    border: 1px solid var(--glass-border);\n  }\n\n  .glass-card {\n    background: var(--glass-card-bg);\n    backdrop-filter: blur(8px);\n    -webkit-backdrop-filter: blur(8px);\n    border: 1px solid var(--glass-card-border);\n  }\n\n  .animate-fade-in {\n    animation: fadeIn 0.6s ease-out;\n  }\n\n  .animate-slide-up {\n    animation: slideUp 0.8s ease-out;\n  }\n\n  @keyframes fadeIn {\n    from { opacity: 0; }\n    to { opacity: 1; }\n  }\n\n  @keyframes slideUp {\n    from { \n      opacity: 0; \n      transform: translateY(30px); \n    }\n    to { \n      opacity: 1; \n      transform: translateY(0); \n    }\n  }\n}\n\n@layer utilities {\n  .text-balance {\n    text-wrap: balance;\n  }\n}\n\n/* Custom scrollbar */\n::-webkit-scrollbar {\n  width: 8px;\n}\n\n::-webkit-scrollbar-track {\n  background: hsl(210 40% 96%);\n}\n\n::-webkit-scrollbar-thumb {\n  background: hsl(142 76% 36%);\n  border-radius: 4px;\n}\n\n::-webkit-scrollbar-thumb:hover {\n  background: hsl(142 76% 30%);\n}\n","size_bytes":3128},"client/src/main.tsx":{"content":"import { createRoot } from \"react-dom/client\";\nimport App from \"./App\";\nimport \"./index.css\";\n\ncreateRoot(document.getElementById(\"root\")!).render(<App />);\n","size_bytes":157},"client/src/hooks/use-analytics.tsx":{"content":"import { useEffect, useRef } from 'react';\nimport { useLocation } from 'wouter';\nimport { trackPageView } from '../lib/analytics';\n\nexport const useAnalytics = () => {\n  const [location] = useLocation();\n  const prevLocationRef = useRef<string>(location);\n  \n  useEffect(() => {\n    if (location !== prevLocationRef.current) {\n      trackPageView(location);\n      prevLocationRef.current = location;\n    }\n  }, [location]);\n};\n","size_bytes":427},"client/src/hooks/use-mobile.tsx":{"content":"import * as React from \"react\"\n\nconst MOBILE_BREAKPOINT = 768\n\nexport function useIsMobile() {\n  const [isMobile, setIsMobile] = React.useState<boolean | undefined>(undefined)\n\n  React.useEffect(() => {\n    const mql = window.matchMedia(`(max-width: ${MOBILE_BREAKPOINT - 1}px)`)\n    const onChange = () => {\n      setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    }\n    mql.addEventListener(\"change\", onChange)\n    setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    return () => mql.removeEventListener(\"change\", onChange)\n  }, [])\n\n  return !!isMobile\n}\n","size_bytes":565},"client/src/hooks/use-toast.ts":{"content":"import * as React from \"react\"\n\nimport type {\n  ToastActionElement,\n  ToastProps,\n} from \"@/components/ui/toast\"\n\nconst TOAST_LIMIT = 1\nconst TOAST_REMOVE_DELAY = 1000000\n\ntype ToasterToast = ToastProps & {\n  id: string\n  title?: React.ReactNode\n  description?: React.ReactNode\n  action?: ToastActionElement\n}\n\nconst actionTypes = {\n  ADD_TOAST: \"ADD_TOAST\",\n  UPDATE_TOAST: \"UPDATE_TOAST\",\n  DISMISS_TOAST: \"DISMISS_TOAST\",\n  REMOVE_TOAST: \"REMOVE_TOAST\",\n} as const\n\nlet count = 0\n\nfunction genId() {\n  count = (count + 1) % Number.MAX_SAFE_INTEGER\n  return count.toString()\n}\n\ntype ActionType = typeof actionTypes\n\ntype Action =\n  | {\n      type: ActionType[\"ADD_TOAST\"]\n      toast: ToasterToast\n    }\n  | {\n      type: ActionType[\"UPDATE_TOAST\"]\n      toast: Partial<ToasterToast>\n    }\n  | {\n      type: ActionType[\"DISMISS_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n  | {\n      type: ActionType[\"REMOVE_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n\ninterface State {\n  toasts: ToasterToast[]\n}\n\nconst toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>()\n\nconst addToRemoveQueue = (toastId: string) => {\n  if (toastTimeouts.has(toastId)) {\n    return\n  }\n\n  const timeout = setTimeout(() => {\n    toastTimeouts.delete(toastId)\n    dispatch({\n      type: \"REMOVE_TOAST\",\n      toastId: toastId,\n    })\n  }, TOAST_REMOVE_DELAY)\n\n  toastTimeouts.set(toastId, timeout)\n}\n\nexport const reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case \"ADD_TOAST\":\n      return {\n        ...state,\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\n      }\n\n    case \"UPDATE_TOAST\":\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === action.toast.id ? { ...t, ...action.toast } : t\n        ),\n      }\n\n    case \"DISMISS_TOAST\": {\n      const { toastId } = action\n\n      // ! Side effects ! - This could be extracted into a dismissToast() action,\n      // but I'll keep it here for simplicity\n      if (toastId) {\n        addToRemoveQueue(toastId)\n      } else {\n        state.toasts.forEach((toast) => {\n          addToRemoveQueue(toast.id)\n        })\n      }\n\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === toastId || toastId === undefined\n            ? {\n                ...t,\n                open: false,\n              }\n            : t\n        ),\n      }\n    }\n    case \"REMOVE_TOAST\":\n      if (action.toastId === undefined) {\n        return {\n          ...state,\n          toasts: [],\n        }\n      }\n      return {\n        ...state,\n        toasts: state.toasts.filter((t) => t.id !== action.toastId),\n      }\n  }\n}\n\nconst listeners: Array<(state: State) => void> = []\n\nlet memoryState: State = { toasts: [] }\n\nfunction dispatch(action: Action) {\n  memoryState = reducer(memoryState, action)\n  listeners.forEach((listener) => {\n    listener(memoryState)\n  })\n}\n\ntype Toast = Omit<ToasterToast, \"id\">\n\nfunction toast({ ...props }: Toast) {\n  const id = genId()\n\n  const update = (props: ToasterToast) =>\n    dispatch({\n      type: \"UPDATE_TOAST\",\n      toast: { ...props, id },\n    })\n  const dismiss = () => dispatch({ type: \"DISMISS_TOAST\", toastId: id })\n\n  dispatch({\n    type: \"ADD_TOAST\",\n    toast: {\n      ...props,\n      id,\n      open: true,\n      onOpenChange: (open) => {\n        if (!open) dismiss()\n      },\n    },\n  })\n\n  return {\n    id: id,\n    dismiss,\n    update,\n  }\n}\n\nfunction useToast() {\n  const [state, setState] = React.useState<State>(memoryState)\n\n  React.useEffect(() => {\n    listeners.push(setState)\n    return () => {\n      const index = listeners.indexOf(setState)\n      if (index > -1) {\n        listeners.splice(index, 1)\n      }\n    }\n  }, [state])\n\n  return {\n    ...state,\n    toast,\n    dismiss: (toastId?: string) => dispatch({ type: \"DISMISS_TOAST\", toastId }),\n  }\n}\n\nexport { useToast, toast }\n","size_bytes":3895},"client/src/lib/analytics.ts":{"content":"// Define the gtag function globally\ndeclare global {\n  interface Window {\n    dataLayer: any[];\n    gtag: (...args: any[]) => void;\n  }\n}\n\n// Initialize Google Analytics\nexport const initGA = () => {\n  const measurementId = import.meta.env.VITE_GA_MEASUREMENT_ID;\n\n  if (!measurementId) {\n    console.warn('Missing required Google Analytics key: VITE_GA_MEASUREMENT_ID');\n    return;\n  }\n\n  // Add Google Analytics script to the head\n  const script1 = document.createElement('script');\n  script1.async = true;\n  script1.src = `https://www.googletagmanager.com/gtag/js?id=${measurementId}`;\n  document.head.appendChild(script1);\n\n  // Initialize gtag\n  const script2 = document.createElement('script');\n  script2.textContent = `\n    window.dataLayer = window.dataLayer || [];\n    function gtag(){dataLayer.push(arguments);}\n    gtag('js', new Date());\n    gtag('config', '${measurementId}');\n  `;\n  document.head.appendChild(script2);\n};\n\n// Track page views - useful for single-page applications\nexport const trackPageView = (url: string) => {\n  if (typeof window === 'undefined' || !window.gtag) return;\n  \n  const measurementId = import.meta.env.VITE_GA_MEASUREMENT_ID;\n  if (!measurementId) return;\n  \n  window.gtag('config', measurementId, {\n    page_path: url\n  });\n};\n\n// Track events\nexport const trackEvent = (\n  action: string, \n  category?: string, \n  label?: string, \n  value?: number\n) => {\n  if (typeof window === 'undefined' || !window.gtag) return;\n  \n  window.gtag('event', action, {\n    event_category: category,\n    event_label: label,\n    value: value,\n  });\n};\n","size_bytes":1582},"client/src/lib/queryClient.ts":{"content":"import { QueryClient, QueryFunction } from \"@tanstack/react-query\";\n\nasync function throwIfResNotOk(res: Response) {\n  if (!res.ok) {\n    const text = (await res.text()) || res.statusText;\n    throw new Error(`${res.status}: ${text}`);\n  }\n}\n\nexport async function apiRequest(\n  method: string,\n  url: string,\n  data?: unknown | undefined,\n): Promise<Response> {\n  const res = await fetch(url, {\n    method,\n    headers: data ? { \"Content-Type\": \"application/json\" } : {},\n    body: data ? JSON.stringify(data) : undefined,\n    credentials: \"include\",\n  });\n\n  await throwIfResNotOk(res);\n  return res;\n}\n\ntype UnauthorizedBehavior = \"returnNull\" | \"throw\";\nexport const getQueryFn: <T>(options: {\n  on401: UnauthorizedBehavior;\n}) => QueryFunction<T> =\n  ({ on401: unauthorizedBehavior }) =>\n  async ({ queryKey }) => {\n    const res = await fetch(queryKey.join(\"/\") as string, {\n      credentials: \"include\",\n    });\n\n    if (unauthorizedBehavior === \"returnNull\" && res.status === 401) {\n      return null;\n    }\n\n    await throwIfResNotOk(res);\n    return await res.json();\n  };\n\nexport const queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      queryFn: getQueryFn({ on401: \"throw\" }),\n      refetchInterval: false,\n      refetchOnWindowFocus: false,\n      staleTime: Infinity,\n      retry: false,\n    },\n    mutations: {\n      retry: false,\n    },\n  },\n});\n","size_bytes":1383},"client/src/lib/utils.ts":{"content":"import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n","size_bytes":166},"client/src/pages/About.tsx":{"content":"import Header from \"@/components/layout/Header\";\nimport Footer from \"@/components/layout/Footer\";\nimport { GlassCard } from \"@/components/ui/glass-card\";\nimport { Award, Users, Target, Globe } from \"lucide-react\";\n\nconst About = () => {\n  return (\n    <div className=\"min-h-screen\">\n      <Header />\n      \n      <section className=\"pt-32 pb-20 bg-gradient-to-br from-muted/30 via-background to-accent/20\">\n        <div className=\"container mx-auto px-4 lg:px-8\">\n          <div className=\"text-center mb-16\">\n            <h1 className=\"text-4xl lg:text-5xl font-bold text-foreground mb-6\" data-testid=\"about-title\">\n              About Several Sustain\n            </h1>\n            <p className=\"text-xl text-muted-foreground max-w-3xl mx-auto\">\n              14+ years of engineering excellence in electronics development and specialized dairy technology solutions.\n            </p>\n          </div>\n\n          <div className=\"grid lg:grid-cols-3 gap-8 mb-20\">\n            <GlassCard className=\"p-8 text-center\">\n              <div className=\"w-16 h-16 bg-primary/10 rounded-xl flex items-center justify-center mx-auto mb-6\">\n                <Target className=\"w-8 h-8 text-primary\" />\n              </div>\n              <h3 className=\"text-2xl font-bold text-foreground mb-4\">Our Mission</h3>\n              <p className=\"text-muted-foreground\">\n                To transform innovative electronic concepts into market-ready products that drive technological advancement \n                and improve lives through reliable, sustainable solutions.\n              </p>\n            </GlassCard>\n\n            <GlassCard className=\"p-8 text-center\">\n              <div className=\"w-16 h-16 bg-primary/10 rounded-xl flex items-center justify-center mx-auto mb-6\">\n                <Globe className=\"w-8 h-8 text-primary\" />\n              </div>\n              <h3 className=\"text-2xl font-bold text-foreground mb-4\">Our Vision</h3>\n              <p className=\"text-muted-foreground\">\n                To be the global leader in electronics development, recognized for our innovation, quality, \n                and commitment to sustainable technology solutions.\n              </p>\n            </GlassCard>\n\n            <GlassCard className=\"p-8 text-center\">\n              <div className=\"w-16 h-16 bg-primary/10 rounded-xl flex items-center justify-center mx-auto mb-6\">\n                <Award className=\"w-8 h-8 text-primary\" />\n              </div>\n              <h3 className=\"text-2xl font-bold text-foreground mb-4\">Our Values</h3>\n              <p className=\"text-muted-foreground\">\n                Excellence in engineering, integrity in business, innovation in solutions, and sustainability \n                in everything we create and deliver.\n              </p>\n            </GlassCard>\n          </div>\n\n          <div className=\"text-center\">\n            <h2 className=\"text-3xl font-bold text-foreground mb-8\">Our Story</h2>\n            <div className=\"max-w-4xl mx-auto text-lg text-muted-foreground space-y-6\">\n              <p>\n                Founded in 2010, Several Sustain began as a vision to bridge the gap between innovative electronic \n                concepts and practical, market-ready solutions. Our founders, experienced engineers with backgrounds \n                in PCB design and embedded systems, recognized the need for comprehensive development services that \n                could take projects from initial concept through to production.\n              </p>\n              <p>\n                Over the years, we've expanded our expertise to include specialized dairy technology solutions, \n                developing industry-leading milk analyzers and collection systems that have revolutionized dairy \n                operations worldwide. Our commitment to quality and innovation has earned us certifications in \n                IPC standards and ISO 9001, ensuring our clients receive the highest level of service and reliability.\n              </p>\n              <p>\n                Today, Several Sustain continues to grow, serving clients across multiple industries while maintaining \n                our core values of excellence, integrity, and sustainability. We're proud to have delivered over 500 \n                successful projects and look forward to helping shape the future of electronic innovation.\n              </p>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      <Footer />\n    </div>\n  );\n};\n\nexport default About;\n","size_bytes":4491},"client/src/pages/CaseStudies.tsx":{"content":"import Header from \"@/components/layout/Header\";\nimport Footer from \"@/components/layout/Footer\";\nimport { GlassCard } from \"@/components/ui/glass-card\";\nimport { ArrowRight, Clock, Users, Target } from \"lucide-react\";\nimport { Link } from \"wouter\";\n\nconst CaseStudies = () => {\n  const caseStudies = [\n    {\n      id: 1,\n      category: \"IoT Agriculture\",\n      title: \"Smart Farm Monitoring System\",\n      description: \"Complete IoT solution for precision agriculture with soil sensors, weather monitoring, and mobile app integration.\",\n      duration: \"6 months development\",\n      client: \"Agricultural Cooperative\",\n      image: \"https://images.unsplash.com/photo-1574323347407-f5e1ad6d020b?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=600\",\n      tags: [\"IoT\", \"Agriculture\", \"Mobile App\", \"Sensors\"],\n      challenge: \"Farmers needed real-time monitoring of soil conditions, weather, and crop health across large agricultural areas.\",\n      solution: \"Deployed wireless sensor network with LoRaWAN connectivity, cloud-based data analytics, and mobile app for farmers.\",\n      results: [\"30% increase in crop yield\", \"40% reduction in water usage\", \"Real-time alerts prevented crop damage\"]\n    },\n    {\n      id: 2,\n      category: \"Medical Device\",\n      title: \"Patient Monitoring System\",\n      description: \"FDA-compliant medical device with real-time vital signs monitoring and cloud connectivity for healthcare providers.\",\n      duration: \"12 months development\",\n      client: \"Healthcare Technology Company\",\n      image: \"https://images.unsplash.com/photo-1559757148-5c350d0d3c56?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=600\",\n      tags: [\"Medical\", \"FDA\", \"Real-time\", \"Cloud\"],\n      challenge: \"Develop FDA-compliant device for continuous patient monitoring with secure data transmission.\",\n      solution: \"Created medical-grade device with multiple sensors, encrypted data transmission, and clinical dashboard.\",\n      results: [\"FDA 510(k) clearance obtained\", \"24/7 patient monitoring\", \"50% reduction in emergency incidents\"]\n    },\n    {\n      id: 3,\n      category: \"Industrial IoT\",\n      title: \"Factory Automation Controller\",\n      description: \"High-performance industrial controller with predictive maintenance capabilities and Industry 4.0 integration.\",\n      duration: \"8 months development\",\n      client: \"Manufacturing Consortium\",\n      image: \"https://images.unsplash.com/photo-1581094794329-c8112a89af12?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=600\",\n      tags: [\"Industrial\", \"Automation\", \"Predictive Maintenance\", \"Industry 4.0\"],\n      challenge: \"Modernize legacy manufacturing equipment with predictive maintenance and real-time monitoring.\",\n      solution: \"Developed industrial IoT controller with machine learning algorithms for predictive analytics.\",\n      results: [\"60% reduction in unplanned downtime\", \"25% increase in productivity\", \"Predictive maintenance alerts\"]\n    },\n    {\n      id: 4,\n      category: \"Dairy Technology\",\n      title: \"Automated Milk Collection Network\",\n      description: \"Deployment of 50+ DPU/AMCU systems across rural dairy cooperative with centralized monitoring.\",\n      duration: \"10 months deployment\",\n      client: \"Regional Dairy Cooperative\",\n      image: \"https://images.unsplash.com/photo-1606880700051-d70bdf7cb265?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=600\",\n      tags: [\"Dairy\", \"Automation\", \"Payment Systems\", \"Rural Technology\"],\n      challenge: \"Modernize milk collection across 200+ villages with transparent payment and quality assurance.\",\n      solution: \"Deployed network of automated collection units with real-time quality testing and payment systems.\",\n      results: [\"98% farmer satisfaction\", \"Zero payment disputes\", \"15% increase in milk quality scores\"]\n    },\n    {\n      id: 5,\n      category: \"Energy Management\",\n      title: \"Smart Grid Monitoring System\",\n      description: \"Real-time power grid monitoring with fault detection and automatic load balancing for utility company.\",\n      duration: \"14 months development\",\n      client: \"Regional Power Utility\",\n      image: \"https://images.unsplash.com/photo-1473341304170-971dccb5ac1e?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=600\",\n      tags: [\"Smart Grid\", \"Power Systems\", \"Fault Detection\", \"Load Balancing\"],\n      challenge: \"Implement real-time grid monitoring with automatic fault detection and load management.\",\n      solution: \"Created distributed monitoring system with AI-powered fault detection and automated response.\",\n      results: [\"40% reduction in power outages\", \"Real-time grid visualization\", \"Automated fault isolation\"]\n    },\n    {\n      id: 6,\n      category: \"Environmental Monitoring\",\n      title: \"Water Quality Monitoring Network\",\n      description: \"Wireless sensor network for real-time water quality monitoring in municipal water treatment facilities.\",\n      duration: \"7 months development\",\n      client: \"Municipal Water Authority\",\n      image: \"https://images.unsplash.com/photo-1581093588401-fbb62a02f120?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=600\",\n      tags: [\"Environmental\", \"Water Quality\", \"Wireless\", \"Municipal\"],\n      challenge: \"Monitor water quality parameters across multiple treatment facilities with real-time alerts.\",\n      solution: \"Deployed wireless sensor network with cloud-based analytics and automated alert system.\",\n      results: [\"100% regulatory compliance\", \"Early contamination detection\", \"Remote monitoring capability\"]\n    }\n  ];\n\n  return (\n    <div className=\"min-h-screen\">\n      <Header />\n      \n      <section className=\"pt-32 pb-20 bg-gradient-to-br from-muted/30 via-background to-accent/20\">\n        <div className=\"container mx-auto px-4 lg:px-8\">\n          <div className=\"text-center mb-16\">\n            <h1 className=\"text-4xl lg:text-5xl font-bold text-foreground mb-6\" data-testid=\"case-studies-title\">\n              Success Stories\n            </h1>\n            <p className=\"text-xl text-muted-foreground max-w-3xl mx-auto\">\n              Discover how we've helped businesses transform their ideas into successful electronic products \n              that drive innovation and deliver measurable results.\n            </p>\n          </div>\n\n          {/* Featured Case Study */}\n          <GlassCard className=\"p-8 mb-16\">\n            <div className=\"grid lg:grid-cols-2 gap-8 items-center\">\n              <div>\n                <div className=\"text-sm text-primary font-semibold mb-2\">Featured Case Study</div>\n                <h2 className=\"text-3xl font-bold text-foreground mb-4\">{caseStudies[0].title}</h2>\n                <p className=\"text-lg text-muted-foreground mb-6\">{caseStudies[0].description}</p>\n                \n                <div className=\"grid grid-cols-3 gap-4 mb-6\">\n                  <div className=\"text-center\">\n                    <div className=\"w-12 h-12 bg-primary/10 rounded-lg flex items-center justify-center mx-auto mb-2\">\n                      <Clock className=\"w-6 h-6 text-primary\" />\n                    </div>\n                    <div className=\"text-sm font-semibold text-foreground\">Duration</div>\n                    <div className=\"text-xs text-muted-foreground\">{caseStudies[0].duration}</div>\n                  </div>\n                  <div className=\"text-center\">\n                    <div className=\"w-12 h-12 bg-primary/10 rounded-lg flex items-center justify-center mx-auto mb-2\">\n                      <Users className=\"w-6 h-6 text-primary\" />\n                    </div>\n                    <div className=\"text-sm font-semibold text-foreground\">Client</div>\n                    <div className=\"text-xs text-muted-foreground\">{caseStudies[0].client}</div>\n                  </div>\n                  <div className=\"text-center\">\n                    <div className=\"w-12 h-12 bg-primary/10 rounded-lg flex items-center justify-center mx-auto mb-2\">\n                      <Target className=\"w-6 h-6 text-primary\" />\n                    </div>\n                    <div className=\"text-sm font-semibold text-foreground\">Category</div>\n                    <div className=\"text-xs text-muted-foreground\">{caseStudies[0].category}</div>\n                  </div>\n                </div>\n\n                <div className=\"flex flex-wrap gap-2 mb-6\">\n                  {caseStudies[0].tags.map((tag) => (\n                    <span key={tag} className=\"px-3 py-1 bg-primary/10 text-primary rounded-full text-sm\">\n                      {tag}\n                    </span>\n                  ))}\n                </div>\n\n                <Link href=\"/contact\">\n                  <div className=\"inline-flex items-center gap-2 text-primary font-medium hover:gap-3 transition-all cursor-pointer\" data-testid=\"link-discuss-project\">\n                    Discuss Your Project <ArrowRight className=\"w-4 h-4\" />\n                  </div>\n                </Link>\n              </div>\n              <div>\n                <img \n                  src={caseStudies[0].image} \n                  alt={caseStudies[0].title} \n                  className=\"w-full h-80 object-cover rounded-xl\" \n                />\n              </div>\n            </div>\n          </GlassCard>\n\n          {/* Case Studies Grid */}\n          <div className=\"grid lg:grid-cols-2 gap-8\">\n            {caseStudies.slice(1).map((study) => (\n              <GlassCard key={study.id} className=\"group overflow-hidden\">\n                <img \n                  src={study.image} \n                  alt={study.title} \n                  className=\"w-full h-48 object-cover group-hover:scale-105 transition-transform duration-300\" \n                />\n                <div className=\"p-6\">\n                  <div className=\"text-sm text-primary font-semibold mb-2\">{study.category}</div>\n                  <h3 className=\"text-xl font-bold text-foreground mb-3\">{study.title}</h3>\n                  <p className=\"text-muted-foreground mb-4\">{study.description}</p>\n                  \n                  <div className=\"flex flex-wrap gap-2 mb-4\">\n                    {study.tags.slice(0, 3).map((tag) => (\n                      <span key={tag} className=\"px-2 py-1 bg-primary/10 text-primary rounded text-xs\">\n                        {tag}\n                      </span>\n                    ))}\n                  </div>\n\n                  <div className=\"flex items-center justify-between\">\n                    <span className=\"text-sm text-muted-foreground\">{study.duration}</span>\n                    <Link href=\"/contact\">\n                      <div className=\"inline-flex items-center gap-2 text-primary font-medium hover:gap-3 transition-all cursor-pointer\" data-testid={`link-case-study-${study.id}`}>\n                        Learn More <ArrowRight className=\"w-4 h-4\" />\n                      </div>\n                    </Link>\n                  </div>\n                </div>\n              </GlassCard>\n            ))}\n          </div>\n\n          {/* CTA Section */}\n          <div className=\"text-center mt-16\">\n            <GlassCard className=\"p-8 max-w-2xl mx-auto\">\n              <h2 className=\"text-2xl font-bold text-foreground mb-4\">Ready to Create Your Success Story?</h2>\n              <p className=\"text-muted-foreground mb-6\">\n                Let's discuss how we can help transform your innovative ideas into market-ready products \n                that deliver exceptional results.\n              </p>\n              <Link href=\"/contact\">\n                <div className=\"inline-flex items-center gap-2 bg-primary text-primary-foreground px-6 py-3 rounded-lg font-semibold hover:bg-primary/90 transition-colors cursor-pointer\" data-testid=\"button-start-project\">\n                  Start Your Project <ArrowRight className=\"w-4 h-4\" />\n                </div>\n              </Link>\n            </GlassCard>\n          </div>\n        </div>\n      </section>\n\n      <Footer />\n\n      {/* Schema.org Structured Data */}\n      <script\n        type=\"application/ld+json\"\n        dangerouslySetInnerHTML={{\n          __html: JSON.stringify({\n            \"@context\": \"https://schema.org\",\n            \"@type\": \"CollectionPage\",\n            \"name\": \"Case Studies - Several Sustain\",\n            \"description\": \"Success stories and case studies showcasing Several Sustain's electronics development projects across various industries.\",\n            \"mainEntity\": {\n              \"@type\": \"ItemList\",\n              \"itemListElement\": caseStudies.map((study, index) => ({\n                \"@type\": \"Article\",\n                \"position\": index + 1,\n                \"headline\": study.title,\n                \"description\": study.description,\n                \"articleSection\": study.category,\n                \"author\": {\n                  \"@type\": \"Organization\",\n                  \"name\": \"Several Sustain\"\n                }\n              }))\n            }\n          })\n        }}\n      />\n    </div>\n  );\n};\n\nexport default CaseStudies;\n","size_bytes":12906},"client/src/pages/Contact.tsx":{"content":"import Header from \"@/components/layout/Header\";\nimport Footer from \"@/components/layout/Footer\";\nimport { GlassCard } from \"@/components/ui/glass-card\";\nimport ContactForm from \"@/components/forms/ContactForm\";\nimport { Mail, Phone, Clock, MapPin } from \"lucide-react\";\n\nconst Contact = () => {\n  return (\n    <div className=\"min-h-screen\">\n      <Header />\n      \n      <section className=\"pt-32 pb-20 bg-gradient-to-br from-muted/30 via-background to-accent/20\">\n        <div className=\"container mx-auto px-4 lg:px-8\">\n          <div className=\"text-center mb-16\">\n            <h1 className=\"text-4xl lg:text-5xl font-bold text-foreground mb-6\" data-testid=\"contact-title\">\n              Get In Touch\n            </h1>\n            <p className=\"text-xl text-muted-foreground max-w-3xl mx-auto\">\n              Ready to start your project? Our engineering team is here to help bring your ideas to life.\n            </p>\n          </div>\n\n          <div className=\"grid lg:grid-cols-2 gap-12 max-w-6xl mx-auto\">\n            {/* Contact Information */}\n            <div>\n              <h2 className=\"text-2xl font-semibold text-foreground mb-8\">Contact Information</h2>\n              <div className=\"space-y-6\">\n                <div className=\"flex items-start gap-4\">\n                  <div className=\"w-12 h-12 bg-primary/10 rounded-lg flex items-center justify-center flex-shrink-0\">\n                    <Mail className=\"w-6 h-6 text-primary\" />\n                  </div>\n                  <div>\n                    <h3 className=\"font-semibold text-foreground mb-1\">Email</h3>\n                    <p className=\"text-muted-foreground\">contact@severalsustain.com</p>\n                    <p className=\"text-muted-foreground\">quotes@severalsustain.com</p>\n                  </div>\n                </div>\n                \n                <div className=\"flex items-start gap-4\">\n                  <div className=\"w-12 h-12 bg-primary/10 rounded-lg flex items-center justify-center flex-shrink-0\">\n                    <Phone className=\"w-6 h-6 text-primary\" />\n                  </div>\n                  <div>\n                    <h3 className=\"font-semibold text-foreground mb-1\">Phone</h3>\n                    <p className=\"text-muted-foreground\">+1 (555) SUSTAIN</p>\n                    <p className=\"text-muted-foreground\">Mon-Fri 9AM-6PM EST</p>\n                  </div>\n                </div>\n                \n                <div className=\"flex items-start gap-4\">\n                  <div className=\"w-12 h-12 bg-primary/10 rounded-lg flex items-center justify-center flex-shrink-0\">\n                    <Clock className=\"w-6 h-6 text-primary\" />\n                  </div>\n                  <div>\n                    <h3 className=\"font-semibold text-foreground mb-1\">Response Time</h3>\n                    <p className=\"text-muted-foreground\">24 hours for quotes</p>\n                    <p className=\"text-muted-foreground\">Same day for urgent inquiries</p>\n                  </div>\n                </div>\n                \n                <div className=\"flex items-start gap-4\">\n                  <div className=\"w-12 h-12 bg-primary/10 rounded-lg flex items-center justify-center flex-shrink-0\">\n                    <MapPin className=\"w-6 h-6 text-primary\" />\n                  </div>\n                  <div>\n                    <h3 className=\"font-semibold text-foreground mb-1\">Location</h3>\n                    <p className=\"text-muted-foreground\">Serving clients worldwide</p>\n                    <p className=\"text-muted-foreground\">Remote consultation available</p>\n                  </div>\n                </div>\n              </div>\n\n              {/* Quick Contact Info */}\n              <GlassCard className=\"p-6 mt-8\">\n                <h3 className=\"text-lg font-semibold text-foreground mb-4\">Why Choose Several Sustain?</h3>\n                <ul className=\"space-y-2 text-muted-foreground\">\n                  <li>• 14+ years of industry experience</li>\n                  <li>• IPC certified and ISO 9001 compliant</li>\n                  <li>• 500+ successful projects delivered</li>\n                  <li>• End-to-end development services</li>\n                  <li>• Specialized dairy technology expertise</li>\n                </ul>\n              </GlassCard>\n            </div>\n\n            {/* Contact Form */}\n            <GlassCard className=\"p-8\">\n              <h2 className=\"text-2xl font-semibold text-foreground mb-6\">Send Us a Message</h2>\n              <ContactForm />\n            </GlassCard>\n          </div>\n        </div>\n      </section>\n\n      <Footer />\n    </div>\n  );\n};\n\nexport default Contact;\n","size_bytes":4645},"client/src/pages/Home.tsx":{"content":"import { Link } from \"wouter\";\nimport { Award, ShieldCheck, Clock, Users, CircuitBoard, Cpu, Code, Smartphone, CheckCircle, ArrowRight, Zap, Calendar, Mail, Phone, TrendingUp, Target, Rocket, Star, Quote } from \"lucide-react\";\nimport Header from \"@/components/layout/Header\";\nimport Footer from \"@/components/layout/Footer\";\nimport { GlassCard } from \"@/components/ui/glass-card\";\nimport ContactForm from \"@/components/forms/ContactForm\";\nimport { Button } from \"@/components/ui/button\";\nimport { useEffect, useState } from \"react\";\n\nconst Home = () => {\n  const [counts, setCounts] = useState({ years: 0, projects: 0, clients: 0, accuracy: 0 });\n  \n  useEffect(() => {\n    const duration = 2000;\n    const targets = { years: 14, projects: 500, clients: 200, accuracy: 99 };\n    const steps = 60;\n    const interval = duration / steps;\n    \n    let current = { years: 0, projects: 0, clients: 0, accuracy: 0 };\n    let step = 0;\n    \n    const timer = setInterval(() => {\n      step++;\n      current = {\n        years: Math.min(Math.floor((targets.years * step) / steps), targets.years),\n        projects: Math.min(Math.floor((targets.projects * step) / steps), targets.projects),\n        clients: Math.min(Math.floor((targets.clients * step) / steps), targets.clients),\n        accuracy: Math.min(Math.floor((targets.accuracy * step) / steps), targets.accuracy),\n      };\n      setCounts(current);\n      \n      if (step >= steps) clearInterval(timer);\n    }, interval);\n    \n    return () => clearInterval(timer);\n  }, []);\n  \n  return (\n    <div className=\"min-h-screen\">\n      <Header />\n      \n      {/* Hero Section */}\n      <section className=\"relative min-h-screen flex items-center justify-center bg-gradient-to-br from-muted/30 via-background to-accent/20 pt-16 lg:pt-20\">\n        {/* Background Pattern */}\n        <div className=\"absolute inset-0 opacity-5\">\n          <div \n            className=\"w-full h-full\" \n            style={{\n              backgroundImage: `url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 100 100\"><defs><pattern id=\"circuit\" x=\"0\" y=\"0\" width=\"20\" height=\"20\" patternUnits=\"userSpaceOnUse\"><circle cx=\"10\" cy=\"10\" r=\"1\" fill=\"%23059669\"/><path d=\"M10 5v10M5 10h10\" stroke=\"%23059669\" stroke-width=\"0.5\"/></pattern></defs><rect width=\"100\" height=\"100\" fill=\"url(%23circuit)\"/></svg>')`,\n              backgroundSize: '40px 40px'\n            }}\n          />\n        </div>\n\n        <div className=\"container mx-auto px-4 lg:px-8 relative z-10\">\n          <div className=\"text-center max-w-5xl mx-auto animate-fade-in\">\n            <h1 className=\"text-4xl md:text-5xl lg:text-6xl xl:text-7xl font-bold text-foreground mb-6 leading-tight\" data-testid=\"hero-title\">\n              Transform Your Electronic\n              <span className=\"text-primary block\">Concepts Into Reality</span>\n            </h1>\n            <p className=\"text-lg md:text-xl lg:text-2xl text-muted-foreground mb-8 max-w-3xl mx-auto leading-relaxed\" data-testid=\"hero-subtitle\">\n              Expert PCB design, hardware development, and specialized dairy technology solutions. \n              14+ years of engineering excellence delivering market-ready products.\n            </p>\n\n            {/* Hero CTA Cards */}\n            <div className=\"grid md:grid-cols-2 gap-6 max-w-2xl mx-auto mb-12 animate-slide-up\">\n              <GlassCard className=\"p-6 group\">\n                <div className=\"w-12 h-12 bg-primary/10 rounded-lg flex items-center justify-center mb-4 mx-auto group-hover:bg-primary/20 transition-colors\">\n                  <Zap className=\"w-6 h-6 text-primary\" />\n                </div>\n                <h3 className=\"text-lg font-semibold text-foreground mb-2\">Quick Quote</h3>\n                <p className=\"text-muted-foreground text-sm mb-4\">Get a detailed quote for your project in 24 hours</p>\n                <Link href=\"/contact\">\n                  <Button className=\"w-full bg-primary text-primary-foreground hover:bg-primary/90\" data-testid=\"button-start-project\">\n                    Start Project\n                  </Button>\n                </Link>\n              </GlassCard>\n              <GlassCard className=\"p-6 group\">\n                <div className=\"w-12 h-12 bg-secondary/10 rounded-lg flex items-center justify-center mb-4 mx-auto group-hover:bg-secondary/20 transition-colors\">\n                  <Calendar className=\"w-6 h-6 text-secondary\" />\n                </div>\n                <h3 className=\"text-lg font-semibold text-foreground mb-2\">Free Consultation</h3>\n                <p className=\"text-muted-foreground text-sm mb-4\">Discuss your requirements with our experts</p>\n                <Link href=\"/contact\">\n                  <Button className=\"w-full bg-secondary text-secondary-foreground hover:bg-secondary/90\" data-testid=\"button-book-call\">\n                    Book Call\n                  </Button>\n                </Link>\n              </GlassCard>\n            </div>\n\n            {/* Trust Indicators */}\n            <div className=\"flex flex-wrap justify-center items-center gap-8 opacity-70\" data-testid=\"trust-indicators\">\n              <div className=\"flex items-center gap-2\">\n                <Award className=\"w-5 h-5 text-primary\" />\n                <span className=\"text-sm text-muted-foreground\">IPC Certified</span>\n              </div>\n              <div className=\"flex items-center gap-2\">\n                <ShieldCheck className=\"w-5 h-5 text-primary\" />\n                <span className=\"text-sm text-muted-foreground\">ISO 9001</span>\n              </div>\n              <div className=\"flex items-center gap-2\">\n                <Clock className=\"w-5 h-5 text-primary\" />\n                <span className=\"text-sm text-muted-foreground\">14+ Years</span>\n              </div>\n              <div className=\"flex items-center gap-2\">\n                <Users className=\"w-5 h-5 text-primary\" />\n                <span className=\"text-sm text-muted-foreground\">500+ Projects</span>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Services Overview Section */}\n      <section className=\"py-20 lg:py-32 bg-background\" data-testid=\"services-section\">\n        <div className=\"container mx-auto px-4 lg:px-8\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"text-3xl lg:text-4xl font-bold text-foreground mb-4\">\n              Comprehensive Electronics Development\n            </h2>\n            <p className=\"text-lg text-muted-foreground max-w-2xl mx-auto\">\n              From concept to production, we provide end-to-end solutions for your electronic product development needs.\n            </p>\n          </div>\n\n          <div className=\"grid md:grid-cols-2 lg:grid-cols-4 gap-8\">\n            <GlassCard className=\"p-6 group\">\n              <div className=\"w-16 h-16 bg-primary/10 rounded-xl flex items-center justify-center mb-6 group-hover:bg-primary/20 transition-colors\">\n                <CircuitBoard className=\"w-8 h-8 text-primary\" />\n              </div>\n              <h3 className=\"text-xl font-semibold text-foreground mb-3\">PCB Design</h3>\n              <p className=\"text-muted-foreground mb-6\">Expert circuit board layout with HDI, RF, and high-speed design capabilities for complex applications.</p>\n              <Link href=\"/services/design/pcb-design\" className=\"inline-flex items-center gap-2 text-primary font-medium hover:gap-3 transition-all\" data-testid=\"link-pcb-design\">\n                Learn More <ArrowRight className=\"w-4 h-4\" />\n              </Link>\n            </GlassCard>\n\n            <GlassCard className=\"p-6 group\">\n              <div className=\"w-16 h-16 bg-primary/10 rounded-xl flex items-center justify-center mb-6 group-hover:bg-primary/20 transition-colors\">\n                <Cpu className=\"w-8 h-8 text-primary\" />\n              </div>\n              <h3 className=\"text-xl font-semibold text-foreground mb-3\">Hardware Development</h3>\n              <p className=\"text-muted-foreground mb-6\">Complete embedded systems design including microcontroller programming and FPGA development.</p>\n              <Link href=\"/services/development/hardware\" className=\"inline-flex items-center gap-2 text-primary font-medium hover:gap-3 transition-all\" data-testid=\"link-hardware-development\">\n                Learn More <ArrowRight className=\"w-4 h-4\" />\n              </Link>\n            </GlassCard>\n\n            <GlassCard className=\"p-6 group\">\n              <div className=\"w-16 h-16 bg-primary/10 rounded-xl flex items-center justify-center mb-6 group-hover:bg-primary/20 transition-colors\">\n                <Code className=\"w-8 h-8 text-primary\" />\n              </div>\n              <h3 className=\"text-xl font-semibold text-foreground mb-3\">Firmware Programming</h3>\n              <p className=\"text-muted-foreground mb-6\">Low-level firmware development for optimal performance and reliability in embedded systems.</p>\n              <Link href=\"/services/development/firmware\" className=\"inline-flex items-center gap-2 text-primary font-medium hover:gap-3 transition-all\" data-testid=\"link-firmware-programming\">\n                Learn More <ArrowRight className=\"w-4 h-4\" />\n              </Link>\n            </GlassCard>\n\n            <GlassCard className=\"p-6 group\">\n              <div className=\"w-16 h-16 bg-primary/10 rounded-xl flex items-center justify-center mb-6 group-hover:bg-primary/20 transition-colors\">\n                <Smartphone className=\"w-8 h-8 text-primary\" />\n              </div>\n              <h3 className=\"text-xl font-semibold text-foreground mb-3\">App Development</h3>\n              <p className=\"text-muted-foreground mb-6\">Mobile and web applications for IoT device control and data visualization platforms.</p>\n              <Link href=\"/services/development/app-development\" className=\"inline-flex items-center gap-2 text-primary font-medium hover:gap-3 transition-all\" data-testid=\"link-app-development\">\n                Learn More <ArrowRight className=\"w-4 h-4\" />\n              </Link>\n            </GlassCard>\n          </div>\n        </div>\n      </section>\n\n      {/* Stats Section */}\n      <section className=\"py-20 lg:py-32 bg-gradient-to-br from-primary/5 via-background to-secondary/5\">\n        <div className=\"container mx-auto px-4 lg:px-8\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"text-3xl lg:text-4xl font-bold text-foreground mb-4\">\n              Delivering Excellence at Scale\n            </h2>\n            <p className=\"text-lg text-muted-foreground max-w-2xl mx-auto\">\n              Trusted by leading companies across industries for innovative electronics and dairy technology solutions\n            </p>\n          </div>\n          \n          <div className=\"grid md:grid-cols-2 lg:grid-cols-4 gap-8\">\n            <GlassCard className=\"p-8 text-center group hover:scale-105 transition-transform\">\n              <div className=\"w-16 h-16 bg-primary/10 rounded-xl flex items-center justify-center mx-auto mb-4 group-hover:bg-primary/20 transition-colors\">\n                <TrendingUp className=\"w-8 h-8 text-primary\" />\n              </div>\n              <div className=\"text-4xl lg:text-5xl font-bold text-foreground mb-2\" data-testid=\"stat-years\">\n                {counts.years}+\n              </div>\n              <div className=\"text-muted-foreground\">Years of Excellence</div>\n            </GlassCard>\n            \n            <GlassCard className=\"p-8 text-center group hover:scale-105 transition-transform\">\n              <div className=\"w-16 h-16 bg-primary/10 rounded-xl flex items-center justify-center mx-auto mb-4 group-hover:bg-primary/20 transition-colors\">\n                <Rocket className=\"w-8 h-8 text-primary\" />\n              </div>\n              <div className=\"text-4xl lg:text-5xl font-bold text-foreground mb-2\" data-testid=\"stat-projects\">\n                {counts.projects}+\n              </div>\n              <div className=\"text-muted-foreground\">Projects Delivered</div>\n            </GlassCard>\n            \n            <GlassCard className=\"p-8 text-center group hover:scale-105 transition-transform\">\n              <div className=\"w-16 h-16 bg-primary/10 rounded-xl flex items-center justify-center mx-auto mb-4 group-hover:bg-primary/20 transition-colors\">\n                <Users className=\"w-8 h-8 text-primary\" />\n              </div>\n              <div className=\"text-4xl lg:text-5xl font-bold text-foreground mb-2\" data-testid=\"stat-clients\">\n                {counts.clients}+\n              </div>\n              <div className=\"text-muted-foreground\">Happy Clients</div>\n            </GlassCard>\n            \n            <GlassCard className=\"p-8 text-center group hover:scale-105 transition-transform\">\n              <div className=\"w-16 h-16 bg-primary/10 rounded-xl flex items-center justify-center mx-auto mb-4 group-hover:bg-primary/20 transition-colors\">\n                <Target className=\"w-8 h-8 text-primary\" />\n              </div>\n              <div className=\"text-4xl lg:text-5xl font-bold text-foreground mb-2\" data-testid=\"stat-accuracy\">\n                {counts.accuracy}%\n              </div>\n              <div className=\"text-muted-foreground\">Success Rate</div>\n            </GlassCard>\n          </div>\n        </div>\n      </section>\n\n      {/* Specialized Solutions Section */}\n      <section className=\"py-20 lg:py-32 bg-muted/30\" data-testid=\"solutions-section\">\n        <div className=\"container mx-auto px-4 lg:px-8\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"text-3xl lg:text-4xl font-bold text-foreground mb-4\">\n              Specialized Dairy Technology Solutions\n            </h2>\n            <p className=\"text-lg text-muted-foreground max-w-2xl mx-auto\">\n              Industry-leading milk analysis and collection systems trusted by dairy professionals worldwide.\n            </p>\n          </div>\n\n          <div className=\"grid lg:grid-cols-2 gap-12 items-center\">\n            {/* Milk Analyzer */}\n            <GlassCard className=\"p-8\">\n              <img \n                src=\"https://images.unsplash.com/photo-1582719188393-bb71ca45dbb9?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=600\" \n                alt=\"Advanced milk analyzer equipment\" \n                className=\"w-full h-64 object-cover rounded-xl mb-6\" \n              />\n              <h3 className=\"text-2xl font-bold text-foreground mb-4\">Milk Analyzer Systems</h3>\n              <p className=\"text-muted-foreground mb-6\">\n                Precision milk composition analysis with real-time fat, protein, lactose, and solids measurement. \n                Advanced spectroscopy technology for accurate quality control.\n              </p>\n              <div className=\"space-y-3 mb-6\">\n                <div className=\"flex items-center gap-3\">\n                  <CheckCircle className=\"w-5 h-5 text-primary\" />\n                  <span className=\"text-foreground\">Real-time composition analysis</span>\n                </div>\n                <div className=\"flex items-center gap-3\">\n                  <CheckCircle className=\"w-5 h-5 text-primary\" />\n                  <span className=\"text-foreground\">Advanced spectroscopy technology</span>\n                </div>\n                <div className=\"flex items-center gap-3\">\n                  <CheckCircle className=\"w-5 h-5 text-primary\" />\n                  <span className=\"text-foreground\">Quality control automation</span>\n                </div>\n              </div>\n              <Link href=\"/solutions/milk-analyzer\">\n                <Button className=\"bg-primary text-primary-foreground hover:bg-primary/90\" data-testid=\"button-milk-analyzer-specs\">\n                  View Specifications\n                </Button>\n              </Link>\n            </GlassCard>\n\n            {/* DPU/AMCU System */}\n            <GlassCard className=\"p-8\">\n              <img \n                src=\"https://images.unsplash.com/photo-1606880700051-d70bdf7cb265?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=600\" \n                alt=\"Modern dairy processing facility\" \n                className=\"w-full h-64 object-cover rounded-xl mb-6\" \n              />\n              <h3 className=\"text-2xl font-bold text-foreground mb-4\">DPU/AMCU Collection Systems</h3>\n              <p className=\"text-muted-foreground mb-6\">\n                Automated milk collection units with integrated payment systems, quality testing, \n                and real-time data transmission for efficient dairy operations.\n              </p>\n              <div className=\"space-y-3 mb-6\">\n                <div className=\"flex items-center gap-3\">\n                  <CheckCircle className=\"w-5 h-5 text-primary\" />\n                  <span className=\"text-foreground\">Automated collection & payment</span>\n                </div>\n                <div className=\"flex items-center gap-3\">\n                  <CheckCircle className=\"w-5 h-5 text-primary\" />\n                  <span className=\"text-foreground\">Integrated quality testing</span>\n                </div>\n                <div className=\"flex items-center gap-3\">\n                  <CheckCircle className=\"w-5 h-5 text-primary\" />\n                  <span className=\"text-foreground\">Real-time data transmission</span>\n                </div>\n              </div>\n              <Link href=\"/solutions/dpu-amcu-systems\">\n                <Button className=\"bg-primary text-primary-foreground hover:bg-primary/90\" data-testid=\"button-dpu-amcu-datasheet\">\n                  Download Datasheet\n                </Button>\n              </Link>\n            </GlassCard>\n          </div>\n        </div>\n      </section>\n\n      {/* Case Studies Preview Section */}\n      <section className=\"py-20 lg:py-32 bg-background\">\n        <div className=\"container mx-auto px-4 lg:px-8\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"text-3xl lg:text-4xl font-bold text-foreground mb-4\">\n              Success Stories\n            </h2>\n            <p className=\"text-lg text-muted-foreground max-w-2xl mx-auto\">\n              Real-world examples of how we've helped clients transform their ideas into successful products\n            </p>\n          </div>\n          \n          <div className=\"grid md:grid-cols-3 gap-8\">\n            <GlassCard className=\"p-6 group hover:shadow-2xl transition-all\">\n              <div className=\"w-12 h-12 bg-primary/10 rounded-lg flex items-center justify-center mb-4\">\n                <CircuitBoard className=\"w-6 h-6 text-primary\" />\n              </div>\n              <h3 className=\"text-xl font-bold text-foreground mb-3\">IoT Gateway Development</h3>\n              <p className=\"text-muted-foreground mb-4\">\n                Designed and developed a multi-protocol IoT gateway supporting 5+ communication standards with 99.9% uptime.\n              </p>\n              <div className=\"flex items-center gap-4 text-sm text-muted-foreground mb-4\">\n                <span className=\"flex items-center gap-1\">\n                  <Clock className=\"w-4 h-4\" />\n                  6 months\n                </span>\n                <span className=\"flex items-center gap-1\">\n                  <Target className=\"w-4 h-4\" />\n                  Industrial\n                </span>\n              </div>\n              <Link href=\"/case-studies\" className=\"inline-flex items-center gap-2 text-primary font-medium hover:gap-3 transition-all\" data-testid=\"link-case-study-1\">\n                Read Case Study <ArrowRight className=\"w-4 h-4\" />\n              </Link>\n            </GlassCard>\n            \n            <GlassCard className=\"p-6 group hover:shadow-2xl transition-all\">\n              <div className=\"w-12 h-12 bg-primary/10 rounded-lg flex items-center justify-center mb-4\">\n                <Zap className=\"w-6 h-6 text-primary\" />\n              </div>\n              <h3 className=\"text-xl font-bold text-foreground mb-3\">Smart Dairy Management</h3>\n              <p className=\"text-muted-foreground mb-4\">\n                Implemented automated milk collection system serving 1000+ dairy farmers with real-time quality monitoring.\n              </p>\n              <div className=\"flex items-center gap-4 text-sm text-muted-foreground mb-4\">\n                <span className=\"flex items-center gap-1\">\n                  <Clock className=\"w-4 h-4\" />\n                  4 months\n                </span>\n                <span className=\"flex items-center gap-1\">\n                  <Target className=\"w-4 h-4\" />\n                  Agriculture\n                </span>\n              </div>\n              <Link href=\"/case-studies\" className=\"inline-flex items-center gap-2 text-primary font-medium hover:gap-3 transition-all\" data-testid=\"link-case-study-2\">\n                Read Case Study <ArrowRight className=\"w-4 h-4\" />\n              </Link>\n            </GlassCard>\n            \n            <GlassCard className=\"p-6 group hover:shadow-2xl transition-all\">\n              <div className=\"w-12 h-12 bg-primary/10 rounded-lg flex items-center justify-center mb-4\">\n                <Cpu className=\"w-6 h-6 text-primary\" />\n              </div>\n              <h3 className=\"text-xl font-bold text-foreground mb-3\">Medical Device PCB</h3>\n              <p className=\"text-muted-foreground mb-4\">\n                Delivered IPC Class 3 medical device PCB with advanced signal integrity and FDA compliance certification.\n              </p>\n              <div className=\"flex items-center gap-4 text-sm text-muted-foreground mb-4\">\n                <span className=\"flex items-center gap-1\">\n                  <Clock className=\"w-4 h-4\" />\n                  8 months\n                </span>\n                <span className=\"flex items-center gap-1\">\n                  <Target className=\"w-4 h-4\" />\n                  Healthcare\n                </span>\n              </div>\n              <Link href=\"/case-studies\" className=\"inline-flex items-center gap-2 text-primary font-medium hover:gap-3 transition-all\" data-testid=\"link-case-study-3\">\n                Read Case Study <ArrowRight className=\"w-4 h-4\" />\n              </Link>\n            </GlassCard>\n          </div>\n        </div>\n      </section>\n\n      {/* Testimonials Section */}\n      <section className=\"py-20 lg:py-32 bg-gradient-to-br from-muted/30 via-background to-primary/5\">\n        <div className=\"container mx-auto px-4 lg:px-8\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"text-3xl lg:text-4xl font-bold text-foreground mb-4\">\n              What Our Clients Say\n            </h2>\n            <p className=\"text-lg text-muted-foreground max-w-2xl mx-auto\">\n              Trusted by industry leaders and innovative startups worldwide\n            </p>\n          </div>\n          \n          <div className=\"grid md:grid-cols-3 gap-8\">\n            <GlassCard className=\"p-8 relative\">\n              <Quote className=\"w-10 h-10 text-primary/20 absolute top-6 right-6\" />\n              <div className=\"flex items-center gap-1 mb-4\">\n                {[...Array(5)].map((_, i) => (\n                  <Star key={i} className=\"w-5 h-5 fill-primary text-primary\" />\n                ))}\n              </div>\n              <p className=\"text-foreground mb-6 leading-relaxed\">\n                \"Several Sustain delivered our complex PCB design ahead of schedule. Their expertise in high-speed digital design was instrumental in our product's success.\"\n              </p>\n              <div className=\"flex items-center gap-4\">\n                <div className=\"w-12 h-12 bg-primary/10 rounded-full flex items-center justify-center\">\n                  <Users className=\"w-6 h-6 text-primary\" />\n                </div>\n                <div>\n                  <div className=\"font-semibold text-foreground\">Michael Chen</div>\n                  <div className=\"text-sm text-muted-foreground\">CTO, TechVision Systems</div>\n                </div>\n              </div>\n            </GlassCard>\n            \n            <GlassCard className=\"p-8 relative\">\n              <Quote className=\"w-10 h-10 text-primary/20 absolute top-6 right-6\" />\n              <div className=\"flex items-center gap-1 mb-4\">\n                {[...Array(5)].map((_, i) => (\n                  <Star key={i} className=\"w-5 h-5 fill-primary text-primary\" />\n                ))}\n              </div>\n              <p className=\"text-foreground mb-6 leading-relaxed\">\n                \"The milk analyzer system has transformed our quality control process. We now have real-time insights that have improved our product consistency by 40%.\"\n              </p>\n              <div className=\"flex items-center gap-4\">\n                <div className=\"w-12 h-12 bg-primary/10 rounded-full flex items-center justify-center\">\n                  <Users className=\"w-6 h-6 text-primary\" />\n                </div>\n                <div>\n                  <div className=\"font-semibold text-foreground\">Priya Sharma</div>\n                  <div className=\"text-sm text-muted-foreground\">Operations Manager, DairyFresh</div>\n                </div>\n              </div>\n            </GlassCard>\n            \n            <GlassCard className=\"p-8 relative\">\n              <Quote className=\"w-10 h-10 text-primary/20 absolute top-6 right-6\" />\n              <div className=\"flex items-center gap-1 mb-4\">\n                {[...Array(5)].map((_, i) => (\n                  <Star key={i} className=\"w-5 h-5 fill-primary text-primary\" />\n                ))}\n              </div>\n              <p className=\"text-foreground mb-6 leading-relaxed\">\n                \"Professional, responsive, and technically excellent. They understood our unique requirements and delivered a solution that exceeded expectations.\"\n              </p>\n              <div className=\"flex items-center gap-4\">\n                <div className=\"w-12 h-12 bg-primary/10 rounded-full flex items-center justify-center\">\n                  <Users className=\"w-6 h-6 text-primary\" />\n                </div>\n                <div>\n                  <div className=\"font-semibold text-foreground\">David Rodriguez</div>\n                  <div className=\"text-sm text-muted-foreground\">Founder, SmartAgri Solutions</div>\n                </div>\n              </div>\n            </GlassCard>\n          </div>\n        </div>\n      </section>\n\n      {/* Mid-page CTA */}\n      <section className=\"py-20 bg-primary/10\">\n        <div className=\"container mx-auto px-4 lg:px-8\">\n          <GlassCard className=\"p-12 text-center max-w-4xl mx-auto\">\n            <h2 className=\"text-3xl lg:text-4xl font-bold text-foreground mb-4\">\n              Ready to Transform Your Ideas into Reality?\n            </h2>\n            <p className=\"text-lg text-muted-foreground mb-8 max-w-2xl mx-auto\">\n              Join 200+ satisfied clients who have successfully launched their products with our expert engineering team.\n            </p>\n            <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n              <Link href=\"/contact\">\n                <Button size=\"lg\" className=\"bg-primary text-primary-foreground hover:bg-primary/90\" data-testid=\"button-cta-get-quote\">\n                  Get Free Quote\n                </Button>\n              </Link>\n              <Link href=\"/services/design/pcb-design\">\n                <Button size=\"lg\" variant=\"outline\" data-testid=\"button-cta-explore\">\n                  Explore Services\n                </Button>\n              </Link>\n            </div>\n          </GlassCard>\n        </div>\n      </section>\n\n      {/* Contact Form Section */}\n      <section className=\"py-20 lg:py-32 bg-background\" data-testid=\"contact-section\">\n        <div className=\"container mx-auto px-4 lg:px-8\">\n          <div className=\"max-w-4xl mx-auto\">\n            <div className=\"text-center mb-16\">\n              <h2 className=\"text-3xl lg:text-4xl font-bold text-foreground mb-4\">\n                Ready to Start Your Project?\n              </h2>\n              <p className=\"text-lg text-muted-foreground max-w-2xl mx-auto\">\n                Get in touch with our engineering team to discuss your requirements and receive a detailed quote.\n              </p>\n            </div>\n\n            <div className=\"grid lg:grid-cols-2 gap-12\">\n              {/* Contact Information */}\n              <div>\n                <h3 className=\"text-2xl font-semibold text-foreground mb-6\">Get In Touch</h3>\n                <div className=\"space-y-6\">\n                  <div className=\"flex items-start gap-4\">\n                    <div className=\"w-12 h-12 bg-primary/10 rounded-lg flex items-center justify-center flex-shrink-0\">\n                      <Mail className=\"w-6 h-6 text-primary\" />\n                    </div>\n                    <div>\n                      <h4 className=\"font-semibold text-foreground mb-1\">Email</h4>\n                      <p className=\"text-muted-foreground\">contact@severalsustain.com</p>\n                      <p className=\"text-muted-foreground\">quotes@severalsustain.com</p>\n                    </div>\n                  </div>\n                  <div className=\"flex items-start gap-4\">\n                    <div className=\"w-12 h-12 bg-primary/10 rounded-lg flex items-center justify-center flex-shrink-0\">\n                      <Phone className=\"w-6 h-6 text-primary\" />\n                    </div>\n                    <div>\n                      <h4 className=\"font-semibold text-foreground mb-1\">Phone</h4>\n                      <p className=\"text-muted-foreground\">+1 (555) SUSTAIN</p>\n                      <p className=\"text-muted-foreground\">Mon-Fri 9AM-6PM EST</p>\n                    </div>\n                  </div>\n                  <div className=\"flex items-start gap-4\">\n                    <div className=\"w-12 h-12 bg-primary/10 rounded-lg flex items-center justify-center flex-shrink-0\">\n                      <Clock className=\"w-6 h-6 text-primary\" />\n                    </div>\n                    <div>\n                      <h4 className=\"font-semibold text-foreground mb-1\">Response Time</h4>\n                      <p className=\"text-muted-foreground\">24 hours for quotes</p>\n                      <p className=\"text-muted-foreground\">Same day for urgent inquiries</p>\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              {/* Contact Form */}\n              <GlassCard className=\"p-8\">\n                <ContactForm />\n              </GlassCard>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      <Footer />\n\n      {/* Schema.org Structured Data */}\n      <script\n        type=\"application/ld+json\"\n        dangerouslySetInnerHTML={{\n          __html: JSON.stringify({\n            \"@context\": \"https://schema.org\",\n            \"@type\": \"Organization\",\n            \"name\": \"Several Sustain\",\n            \"url\": \"https://severalsustain.com\",\n            \"logo\": \"https://severalsustain.com/logo.png\",\n            \"description\": \"Expert PCB design, hardware development, firmware programming, and specialized dairy technology solutions.\",\n            \"address\": {\n              \"@type\": \"PostalAddress\",\n              \"addressCountry\": \"US\"\n            },\n            \"contactPoint\": {\n              \"@type\": \"ContactPoint\",\n              \"telephone\": \"+1-555-SUSTAIN\",\n              \"contactType\": \"customer service\",\n              \"email\": \"contact@severalsustain.com\"\n            },\n            \"sameAs\": [\n              \"https://linkedin.com/company/severalsustain\",\n              \"https://twitter.com/severalsustain\",\n              \"https://youtube.com/severalsustain\"\n            ],\n            \"hasOfferCatalog\": {\n              \"@type\": \"OfferCatalog\",\n              \"name\": \"Electronics Development Services\",\n              \"itemListElement\": [\n                {\n                  \"@type\": \"Offer\",\n                  \"itemOffered\": {\n                    \"@type\": \"Service\",\n                    \"name\": \"PCB Design Services\",\n                    \"description\": \"Expert circuit board layout with HDI, RF, and high-speed design capabilities\"\n                  }\n                },\n                {\n                  \"@type\": \"Offer\",\n                  \"itemOffered\": {\n                    \"@type\": \"Service\",\n                    \"name\": \"Hardware Development\",\n                    \"description\": \"Complete embedded systems design including microcontroller programming and FPGA development\"\n                  }\n                },\n                {\n                  \"@type\": \"Offer\",\n                  \"itemOffered\": {\n                    \"@type\": \"Product\",\n                    \"name\": \"Milk Analyzer Systems\",\n                    \"description\": \"Precision milk composition analysis with real-time measurement capabilities\"\n                  }\n                }\n              ]\n            }\n          })\n        }}\n      />\n    </div>\n  );\n};\n\nexport default Home;\n","size_bytes":32828},"client/src/pages/PrivacyPolicy.tsx":{"content":"import Header from \"@/components/layout/Header\";\nimport Footer from \"@/components/layout/Footer\";\nimport { GlassCard } from \"@/components/ui/glass-card\";\n\nconst PrivacyPolicy = () => {\n  return (\n    <div className=\"min-h-screen\">\n      <Header />\n      \n      <section className=\"pt-32 pb-20 bg-gradient-to-br from-muted/30 via-background to-accent/20\">\n        <div className=\"container mx-auto px-4 lg:px-8 max-w-4xl\">\n          <div className=\"text-center mb-16\">\n            <h1 className=\"text-4xl lg:text-5xl font-bold text-foreground mb-6\" data-testid=\"privacy-policy-title\">\n              Privacy Policy\n            </h1>\n            <p className=\"text-lg text-muted-foreground\">\n              Last updated: January 1, 2024\n            </p>\n          </div>\n\n          <GlassCard className=\"p-8\">\n            <div className=\"prose prose-lg max-w-none\">\n              <div className=\"space-y-8 text-foreground\">\n                <section>\n                  <h2 className=\"text-2xl font-bold mb-4\">1. Information We Collect</h2>\n                  <p className=\"text-muted-foreground mb-4\">\n                    We collect information you provide directly to us, such as when you:\n                  </p>\n                  <ul className=\"list-disc list-inside text-muted-foreground space-y-2 ml-4\">\n                    <li>Fill out contact forms or request quotes</li>\n                    <li>Subscribe to our newsletter</li>\n                    <li>Communicate with us via email or phone</li>\n                    <li>Use our website and services</li>\n                  </ul>\n                  <p className=\"text-muted-foreground mt-4\">\n                    This information may include your name, email address, phone number, company name, \n                    project details, and any other information you choose to provide.\n                  </p>\n                </section>\n\n                <section>\n                  <h2 className=\"text-2xl font-bold mb-4\">2. How We Use Your Information</h2>\n                  <p className=\"text-muted-foreground mb-4\">\n                    We use the information we collect to:\n                  </p>\n                  <ul className=\"list-disc list-inside text-muted-foreground space-y-2 ml-4\">\n                    <li>Respond to your inquiries and provide customer support</li>\n                    <li>Process and fulfill your service requests</li>\n                    <li>Send you technical updates, security alerts, and administrative messages</li>\n                    <li>Provide you with news and information about our services (with your consent)</li>\n                    <li>Improve our website and services</li>\n                    <li>Comply with legal obligations</li>\n                  </ul>\n                </section>\n\n                <section>\n                  <h2 className=\"text-2xl font-bold mb-4\">3. Information Sharing and Disclosure</h2>\n                  <p className=\"text-muted-foreground mb-4\">\n                    We do not sell, trade, or otherwise transfer your personal information to third parties, \n                    except in the following circumstances:\n                  </p>\n                  <ul className=\"list-disc list-inside text-muted-foreground space-y-2 ml-4\">\n                    <li>With your explicit consent</li>\n                    <li>To service providers who assist us in operating our website and conducting business</li>\n                    <li>When required by law or to protect our rights and safety</li>\n                    <li>In connection with a merger, acquisition, or sale of assets</li>\n                  </ul>\n                </section>\n\n                <section>\n                  <h2 className=\"text-2xl font-bold mb-4\">4. Data Security</h2>\n                  <p className=\"text-muted-foreground\">\n                    We implement appropriate technical and organizational security measures to protect your \n                    personal information against unauthorized access, alteration, disclosure, or destruction. \n                    However, no method of transmission over the internet is 100% secure, and we cannot \n                    guarantee absolute security.\n                  </p>\n                </section>\n\n                <section>\n                  <h2 className=\"text-2xl font-bold mb-4\">5. Data Retention</h2>\n                  <p className=\"text-muted-foreground\">\n                    We retain your personal information for as long as necessary to fulfill the purposes \n                    outlined in this privacy policy, unless a longer retention period is required or \n                    permitted by law. We will delete or anonymize your personal information when it is \n                    no longer needed.\n                  </p>\n                </section>\n\n                <section>\n                  <h2 className=\"text-2xl font-bold mb-4\">6. Your Rights</h2>\n                  <p className=\"text-muted-foreground mb-4\">\n                    Depending on your location, you may have the following rights regarding your personal information:\n                  </p>\n                  <ul className=\"list-disc list-inside text-muted-foreground space-y-2 ml-4\">\n                    <li>Access to your personal information</li>\n                    <li>Correction of inaccurate or incomplete information</li>\n                    <li>Deletion of your personal information</li>\n                    <li>Restriction of processing</li>\n                    <li>Data portability</li>\n                    <li>Objection to processing</li>\n                  </ul>\n                </section>\n\n                <section>\n                  <h2 className=\"text-2xl font-bold mb-4\">7. Cookies and Tracking Technologies</h2>\n                  <p className=\"text-muted-foreground\">\n                    We use cookies and similar tracking technologies to enhance your experience on our website, \n                    analyze usage patterns, and provide personalized content. You can control cookie settings \n                    through your browser preferences, but disabling cookies may affect website functionality.\n                  </p>\n                </section>\n\n                <section>\n                  <h2 className=\"text-2xl font-bold mb-4\">8. Third-Party Links</h2>\n                  <p className=\"text-muted-foreground\">\n                    Our website may contain links to third-party websites. We are not responsible for the \n                    privacy practices or content of these external sites. We encourage you to review the \n                    privacy policies of any third-party websites you visit.\n                  </p>\n                </section>\n\n                <section>\n                  <h2 className=\"text-2xl font-bold mb-4\">9. Children's Privacy</h2>\n                  <p className=\"text-muted-foreground\">\n                    Our services are not intended for individuals under the age of 16. We do not knowingly \n                    collect personal information from children under 16. If we become aware that we have \n                    collected personal information from a child under 16, we will take steps to delete \n                    such information.\n                  </p>\n                </section>\n\n                <section>\n                  <h2 className=\"text-2xl font-bold mb-4\">10. Changes to This Privacy Policy</h2>\n                  <p className=\"text-muted-foreground\">\n                    We may update this privacy policy from time to time. We will notify you of any changes \n                    by posting the new privacy policy on this page and updating the \"Last updated\" date. \n                    We encourage you to review this privacy policy periodically.\n                  </p>\n                </section>\n\n                <section>\n                  <h2 className=\"text-2xl font-bold mb-4\">11. Contact Us</h2>\n                  <p className=\"text-muted-foreground mb-4\">\n                    If you have any questions about this privacy policy or our privacy practices, please contact us at:\n                  </p>\n                  <div className=\"text-muted-foreground\">\n                    <p>Several Sustain</p>\n                    <p>Email: privacy@severalsustain.com</p>\n                    <p>Phone: +1 (555) SUSTAIN</p>\n                  </div>\n                </section>\n              </div>\n            </div>\n          </GlassCard>\n        </div>\n      </section>\n\n      <Footer />\n    </div>\n  );\n};\n\nexport default PrivacyPolicy;\n","size_bytes":8521},"client/src/pages/TermsOfService.tsx":{"content":"import Header from \"@/components/layout/Header\";\nimport Footer from \"@/components/layout/Footer\";\nimport { GlassCard } from \"@/components/ui/glass-card\";\n\nconst TermsOfService = () => {\n  return (\n    <div className=\"min-h-screen\">\n      <Header />\n      \n      <section className=\"pt-32 pb-20 bg-gradient-to-br from-muted/30 via-background to-accent/20\">\n        <div className=\"container mx-auto px-4 lg:px-8 max-w-4xl\">\n          <div className=\"text-center mb-16\">\n            <h1 className=\"text-4xl lg:text-5xl font-bold text-foreground mb-6\" data-testid=\"terms-of-service-title\">\n              Terms of Service\n            </h1>\n            <p className=\"text-lg text-muted-foreground\">\n              Last updated: January 1, 2024\n            </p>\n          </div>\n\n          <GlassCard className=\"p-8\">\n            <div className=\"prose prose-lg max-w-none\">\n              <div className=\"space-y-8 text-foreground\">\n                <section>\n                  <h2 className=\"text-2xl font-bold mb-4\">1. Acceptance of Terms</h2>\n                  <p className=\"text-muted-foreground\">\n                    By accessing and using the Several Sustain website and services, you accept and agree \n                    to be bound by the terms and provision of this agreement. If you do not agree to abide \n                    by the above, please do not use this service.\n                  </p>\n                </section>\n\n                <section>\n                  <h2 className=\"text-2xl font-bold mb-4\">2. Services Description</h2>\n                  <p className=\"text-muted-foreground mb-4\">\n                    Several Sustain provides electronics development services including:\n                  </p>\n                  <ul className=\"list-disc list-inside text-muted-foreground space-y-2 ml-4\">\n                    <li>PCB design and layout services</li>\n                    <li>Hardware development and embedded systems design</li>\n                    <li>Firmware programming and software development</li>\n                    <li>Mobile and web application development</li>\n                    <li>Specialized dairy technology solutions</li>\n                    <li>Consulting and technical support services</li>\n                  </ul>\n                </section>\n\n                <section>\n                  <h2 className=\"text-2xl font-bold mb-4\">3. Service Agreements</h2>\n                  <p className=\"text-muted-foreground\">\n                    Specific project terms, timelines, deliverables, and pricing will be outlined in \n                    separate service agreements or statements of work. These documents will take \n                    precedence over these general terms for specific project requirements.\n                  </p>\n                </section>\n\n                <section>\n                  <h2 className=\"text-2xl font-bold mb-4\">4. Intellectual Property Rights</h2>\n                  <p className=\"text-muted-foreground mb-4\">\n                    Unless otherwise specified in a project agreement:\n                  </p>\n                  <ul className=\"list-disc list-inside text-muted-foreground space-y-2 ml-4\">\n                    <li>Several Sustain retains rights to general methodologies, techniques, and know-how</li>\n                    <li>Clients receive rights to project-specific deliverables and custom designs</li>\n                    <li>Third-party intellectual property remains with respective owners</li>\n                    <li>Open-source components are subject to their respective licenses</li>\n                  </ul>\n                </section>\n\n                <section>\n                  <h2 className=\"text-2xl font-bold mb-4\">5. Confidentiality</h2>\n                  <p className=\"text-muted-foreground\">\n                    We respect the confidentiality of client information and maintain strict \n                    confidentiality standards. Both parties agree to protect confidential information \n                    shared during the course of business and not disclose such information to third \n                    parties without prior written consent.\n                  </p>\n                </section>\n\n                <section>\n                  <h2 className=\"text-2xl font-bold mb-4\">6. Payment Terms</h2>\n                  <p className=\"text-muted-foreground mb-4\">\n                    Payment terms will be specified in individual project agreements. Generally:\n                  </p>\n                  <ul className=\"list-disc list-inside text-muted-foreground space-y-2 ml-4\">\n                    <li>Invoices are payable within 30 days of receipt</li>\n                    <li>Projects may require upfront deposits or milestone payments</li>\n                    <li>Late payments may incur interest charges</li>\n                    <li>All prices are exclusive of applicable taxes</li>\n                  </ul>\n                </section>\n\n                <section>\n                  <h2 className=\"text-2xl font-bold mb-4\">7. Warranties and Disclaimers</h2>\n                  <p className=\"text-muted-foreground mb-4\">\n                    We warrant that our services will be performed in a professional manner consistent \n                    with industry standards. However:\n                  </p>\n                  <ul className=\"list-disc list-inside text-muted-foreground space-y-2 ml-4\">\n                    <li>Services are provided \"as is\" without additional warranties</li>\n                    <li>We disclaim all implied warranties of merchantability and fitness</li>\n                    <li>Technology solutions may have inherent limitations</li>\n                    <li>Client is responsible for testing and validation of deliverables</li>\n                  </ul>\n                </section>\n\n                <section>\n                  <h2 className=\"text-2xl font-bold mb-4\">8. Limitation of Liability</h2>\n                  <p className=\"text-muted-foreground\">\n                    Several Sustain's liability for any claims related to our services shall not exceed \n                    the total amount paid by the client for the specific services giving rise to the claim. \n                    We shall not be liable for indirect, incidental, special, or consequential damages.\n                  </p>\n                </section>\n\n                <section>\n                  <h2 className=\"text-2xl font-bold mb-4\">9. Force Majeure</h2>\n                  <p className=\"text-muted-foreground\">\n                    Neither party shall be liable for any failure or delay in performance due to \n                    circumstances beyond their reasonable control, including but not limited to acts \n                    of God, natural disasters, pandemics, government actions, or supply chain disruptions.\n                  </p>\n                </section>\n\n                <section>\n                  <h2 className=\"text-2xl font-bold mb-4\">10. Termination</h2>\n                  <p className=\"text-muted-foreground\">\n                    Either party may terminate a service agreement with written notice as specified \n                    in the project agreement. Upon termination, client shall pay for all services \n                    performed up to the termination date, and each party shall return confidential \n                    information of the other party.\n                  </p>\n                </section>\n\n                <section>\n                  <h2 className=\"text-2xl font-bold mb-4\">11. Governing Law</h2>\n                  <p className=\"text-muted-foreground\">\n                    These terms shall be governed by and construed in accordance with the laws of \n                    the jurisdiction where Several Sustain is incorporated. Any disputes shall be \n                    resolved through binding arbitration or in the courts of competent jurisdiction.\n                  </p>\n                </section>\n\n                <section>\n                  <h2 className=\"text-2xl font-bold mb-4\">12. Modifications</h2>\n                  <p className=\"text-muted-foreground\">\n                    Several Sustain reserves the right to modify these terms at any time. Changes \n                    will be effective immediately upon posting on our website. Continued use of \n                    our services constitutes acceptance of modified terms.\n                  </p>\n                </section>\n\n                <section>\n                  <h2 className=\"text-2xl font-bold mb-4\">13. Contact Information</h2>\n                  <p className=\"text-muted-foreground mb-4\">\n                    For questions regarding these terms of service, please contact:\n                  </p>\n                  <div className=\"text-muted-foreground\">\n                    <p>Several Sustain</p>\n                    <p>Email: legal@severalsustain.com</p>\n                    <p>Phone: +1 (555) SUSTAIN</p>\n                  </div>\n                </section>\n              </div>\n            </div>\n          </GlassCard>\n        </div>\n      </section>\n\n      <Footer />\n    </div>\n  );\n};\n\nexport default TermsOfService;\n","size_bytes":9120},"client/src/pages/not-found.tsx":{"content":"import { Card, CardContent } from \"@/components/ui/card\";\nimport { AlertCircle } from \"lucide-react\";\n\nexport default function NotFound() {\n  return (\n    <div className=\"min-h-screen w-full flex items-center justify-center bg-gray-50\">\n      <Card className=\"w-full max-w-md mx-4\">\n        <CardContent className=\"pt-6\">\n          <div className=\"flex mb-4 gap-2\">\n            <AlertCircle className=\"h-8 w-8 text-red-500\" />\n            <h1 className=\"text-2xl font-bold text-gray-900\">404 Page Not Found</h1>\n          </div>\n\n          <p className=\"mt-4 text-sm text-gray-600\">\n            Did you forget to add the page to the router?\n          </p>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n","size_bytes":711},"client/src/components/forms/ContactForm.tsx":{"content":"import { useForm } from \"react-hook-form\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { z } from \"zod\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { Checkbox } from \"@/components/ui/checkbox\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { Form, FormControl, FormField, FormItem, FormLabel, FormMessage } from \"@/components/ui/form\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { useMutation } from \"@tanstack/react-query\";\nimport { apiRequest } from \"@/lib/queryClient\";\n\nconst contactFormSchema = z.object({\n  name: z.string().min(2, \"Name must be at least 2 characters\"),\n  email: z.string().email(\"Please enter a valid email address\"),\n  company: z.string().optional(),\n  service: z.string().min(1, \"Please select a service\"),\n  message: z.string().min(10, \"Message must be at least 10 characters\"),\n  consent: z.boolean().refine(val => val, \"You must agree to receive communications\"),\n});\n\ntype ContactFormData = z.infer<typeof contactFormSchema>;\n\nconst ContactForm = () => {\n  const { toast } = useToast();\n  \n  const form = useForm<ContactFormData>({\n    resolver: zodResolver(contactFormSchema),\n    defaultValues: {\n      name: \"\",\n      email: \"\",\n      company: \"\",\n      service: \"\",\n      message: \"\",\n      consent: false,\n    },\n  });\n\n  const submitMutation = useMutation({\n    mutationFn: async (data: ContactFormData) => {\n      return apiRequest(\"POST\", \"/api/contact\", data);\n    },\n    onSuccess: () => {\n      toast({\n        title: \"Message sent successfully!\",\n        description: \"We will get back to you within 24 hours.\",\n      });\n      form.reset();\n    },\n    onError: (error) => {\n      toast({\n        title: \"Failed to send message\",\n        description: error.message || \"Please try again later.\",\n        variant: \"destructive\",\n      });\n    },\n  });\n\n  const onSubmit = (data: ContactFormData) => {\n    submitMutation.mutate(data);\n  };\n\n  return (\n    <Form {...form}>\n      <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6\" data-testid=\"contact-form\">\n        <FormField\n          control={form.control}\n          name=\"name\"\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel>Full Name *</FormLabel>\n              <FormControl>\n                <Input\n                  placeholder=\"Enter your full name\"\n                  {...field}\n                  data-testid=\"input-name\"\n                />\n              </FormControl>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n\n        <FormField\n          control={form.control}\n          name=\"email\"\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel>Email Address *</FormLabel>\n              <FormControl>\n                <Input\n                  type=\"email\"\n                  placeholder=\"your.email@company.com\"\n                  {...field}\n                  data-testid=\"input-email\"\n                />\n              </FormControl>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n\n        <FormField\n          control={form.control}\n          name=\"company\"\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel>Company</FormLabel>\n              <FormControl>\n                <Input\n                  placeholder=\"Your company name\"\n                  {...field}\n                  data-testid=\"input-company\"\n                />\n              </FormControl>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n\n        <FormField\n          control={form.control}\n          name=\"service\"\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel>Service Interest *</FormLabel>\n              <Select onValueChange={field.onChange} defaultValue={field.value}>\n                <FormControl>\n                  <SelectTrigger data-testid=\"select-service\">\n                    <SelectValue placeholder=\"Select a service\" />\n                  </SelectTrigger>\n                </FormControl>\n                <SelectContent>\n                  <SelectItem value=\"pcb-design\">PCB Design</SelectItem>\n                  <SelectItem value=\"hardware-development\">Hardware Development</SelectItem>\n                  <SelectItem value=\"firmware-programming\">Firmware Programming</SelectItem>\n                  <SelectItem value=\"app-development\">App Development</SelectItem>\n                  <SelectItem value=\"milk-analyzer\">Milk Analyzer Systems</SelectItem>\n                  <SelectItem value=\"dpu-amcu\">DPU/AMCU Systems</SelectItem>\n                  <SelectItem value=\"consultation\">General Consultation</SelectItem>\n                </SelectContent>\n              </Select>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n\n        <FormField\n          control={form.control}\n          name=\"message\"\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel>Project Details *</FormLabel>\n              <FormControl>\n                <Textarea\n                  rows={4}\n                  placeholder=\"Describe your project requirements, timeline, and any specific technical needs...\"\n                  {...field}\n                  data-testid=\"textarea-message\"\n                />\n              </FormControl>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n\n        <FormField\n          control={form.control}\n          name=\"consent\"\n          render={({ field }) => (\n            <FormItem className=\"flex flex-row items-start space-x-3 space-y-0\">\n              <FormControl>\n                <Checkbox\n                  checked={field.value}\n                  onCheckedChange={field.onChange}\n                  data-testid=\"checkbox-consent\"\n                />\n              </FormControl>\n              <div className=\"space-y-1 leading-none\">\n                <FormLabel className=\"text-sm\">\n                  I agree to receive communications from Several Sustain regarding my inquiry.{\" \"}\n                  <a href=\"/privacy-policy\" className=\"text-primary hover:underline\">\n                    Privacy Policy\n                  </a>\n                </FormLabel>\n                <FormMessage />\n              </div>\n            </FormItem>\n          )}\n        />\n\n        <Button\n          type=\"submit\"\n          className=\"w-full bg-primary text-primary-foreground hover:bg-primary/90\"\n          disabled={submitMutation.isPending}\n          data-testid=\"button-submit\"\n        >\n          {submitMutation.isPending ? \"Sending...\" : \"Send Message\"}\n        </Button>\n      </form>\n    </Form>\n  );\n};\n\nexport default ContactForm;\n","size_bytes":6836},"client/src/components/forms/NewsletterForm.tsx":{"content":"import { useForm } from \"react-hook-form\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { z } from \"zod\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Form, FormControl, FormField, FormItem, FormMessage } from \"@/components/ui/form\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { useMutation } from \"@tanstack/react-query\";\nimport { apiRequest } from \"@/lib/queryClient\";\n\nconst newsletterSchema = z.object({\n  email: z.string().email(\"Please enter a valid email address\"),\n});\n\ntype NewsletterData = z.infer<typeof newsletterSchema>;\n\nconst NewsletterForm = () => {\n  const { toast } = useToast();\n  \n  const form = useForm<NewsletterData>({\n    resolver: zodResolver(newsletterSchema),\n    defaultValues: {\n      email: \"\",\n    },\n  });\n\n  const submitMutation = useMutation({\n    mutationFn: async (data: NewsletterData) => {\n      return apiRequest(\"POST\", \"/api/newsletter\", data);\n    },\n    onSuccess: () => {\n      toast({\n        title: \"Subscribed successfully!\",\n        description: \"Thank you for subscribing to our newsletter.\",\n      });\n      form.reset();\n    },\n    onError: (error) => {\n      toast({\n        title: \"Subscription failed\",\n        description: error.message || \"Please try again later.\",\n        variant: \"destructive\",\n      });\n    },\n  });\n\n  const onSubmit = (data: NewsletterData) => {\n    submitMutation.mutate(data);\n  };\n\n  return (\n    <Form {...form}>\n      <form onSubmit={form.handleSubmit(onSubmit)} className=\"flex gap-3 w-full md:w-auto\" data-testid=\"newsletter-form\">\n        <FormField\n          control={form.control}\n          name=\"email\"\n          render={({ field }) => (\n            <FormItem className=\"flex-1 md:w-64\">\n              <FormControl>\n                <Input\n                  type=\"email\"\n                  placeholder=\"Enter your email\"\n                  {...field}\n                  data-testid=\"input-newsletter-email\"\n                />\n              </FormControl>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n        <Button\n          type=\"submit\"\n          className=\"bg-primary text-primary-foreground hover:bg-primary/90\"\n          disabled={submitMutation.isPending}\n          data-testid=\"button-newsletter-subscribe\"\n        >\n          {submitMutation.isPending ? \"...\" : \"Subscribe\"}\n        </Button>\n      </form>\n    </Form>\n  );\n};\n\nexport default NewsletterForm;\n","size_bytes":2474},"client/src/components/layout/Footer.tsx":{"content":"import { Link } from \"wouter\";\nimport { Linkedin, Twitter, Youtube } from \"lucide-react\";\nimport NewsletterForm from \"@/components/forms/NewsletterForm\";\nimport logoImage from \"@assets/cropped-1000113581-removebg-preview_1759222236071.png\";\n\nconst Footer = () => {\n  return (\n    <footer className=\"glass border-t border-border/50 mt-20\" data-testid=\"footer\">\n      <div className=\"container mx-auto px-4 lg:px-8 py-16\">\n        <div className=\"grid md:grid-cols-2 lg:grid-cols-5 gap-8\">\n          {/* Company Info */}\n          <div className=\"lg:col-span-2\">\n            <div className=\"flex items-center gap-3 mb-6\">\n              <img \n                src={logoImage} \n                alt=\"Several Sustain Logo\" \n                className=\"w-12 h-12 object-contain\"\n              />\n              <div>\n                <h3 className=\"text-2xl font-bold text-foreground\">\n                  Several <span className=\"text-primary\">Sustain</span>\n                </h3>\n              </div>\n            </div>\n            <p className=\"text-muted-foreground mb-6 max-w-md\">\n              Transforming electronic concepts into market-ready products with expert PCB design, \n              hardware development, and specialized dairy technology solutions.\n            </p>\n            <div className=\"flex items-center gap-4\">\n              <a href=\"#\" className=\"w-10 h-10 bg-primary/10 rounded-lg flex items-center justify-center hover:bg-primary/20 transition-colors\" data-testid=\"social-linkedin\">\n                <Linkedin className=\"w-5 h-5 text-primary\" />\n              </a>\n              <a href=\"#\" className=\"w-10 h-10 bg-primary/10 rounded-lg flex items-center justify-center hover:bg-primary/20 transition-colors\" data-testid=\"social-twitter\">\n                <Twitter className=\"w-5 h-5 text-primary\" />\n              </a>\n              <a href=\"#\" className=\"w-10 h-10 bg-primary/10 rounded-lg flex items-center justify-center hover:bg-primary/20 transition-colors\" data-testid=\"social-youtube\">\n                <Youtube className=\"w-5 h-5 text-primary\" />\n              </a>\n            </div>\n          </div>\n\n          {/* Services */}\n          <div>\n            <h4 className=\"text-lg font-semibold text-foreground mb-4\">Services</h4>\n            <ul className=\"space-y-3\">\n              <li><Link href=\"/services/design/pcb-design\" className=\"text-muted-foreground hover:text-primary transition-colors\" data-testid=\"footer-link-pcb-design\">PCB Design</Link></li>\n              <li><Link href=\"/services/design/web-design\" className=\"text-muted-foreground hover:text-primary transition-colors\" data-testid=\"footer-link-web-design\">Web Design</Link></li>\n              <li><Link href=\"/services/development/hardware\" className=\"text-muted-foreground hover:text-primary transition-colors\" data-testid=\"footer-link-hardware-development\">Hardware Development</Link></li>\n              <li><Link href=\"/services/development/firmware\" className=\"text-muted-foreground hover:text-primary transition-colors\" data-testid=\"footer-link-firmware\">Firmware Development</Link></li>\n              <li><Link href=\"/services/development/app-development\" className=\"text-muted-foreground hover:text-primary transition-colors\" data-testid=\"footer-link-app-development\">App Development</Link></li>\n            </ul>\n          </div>\n\n          {/* Solutions */}\n          <div>\n            <h4 className=\"text-lg font-semibold text-foreground mb-4\">Solutions</h4>\n            <ul className=\"space-y-3\">\n              <li><Link href=\"/solutions/milk-analyzer\" className=\"text-muted-foreground hover:text-primary transition-colors\" data-testid=\"footer-link-milk-analyzers\">Milk Analyzers</Link></li>\n              <li><Link href=\"/solutions/dpu-amcu-systems\" className=\"text-muted-foreground hover:text-primary transition-colors\" data-testid=\"footer-link-dpu-amcu-systems\">DPU/AMCU Systems</Link></li>\n              <li><Link href=\"/case-studies\" className=\"text-muted-foreground hover:text-primary transition-colors\" data-testid=\"footer-link-case-studies\">Case Studies</Link></li>\n              <li><a href=\"#\" className=\"text-muted-foreground hover:text-primary transition-colors\" data-testid=\"footer-link-downloads\">Downloads</a></li>\n            </ul>\n          </div>\n\n          {/* Company */}\n          <div>\n            <h4 className=\"text-lg font-semibold text-foreground mb-4\">Company</h4>\n            <ul className=\"space-y-3\">\n              <li><Link href=\"/about\" className=\"text-muted-foreground hover:text-primary transition-colors\" data-testid=\"footer-link-about\">About Us</Link></li>\n              <li><Link href=\"/contact\" className=\"text-muted-foreground hover:text-primary transition-colors\" data-testid=\"footer-link-contact\">Contact</Link></li>\n              <li><a href=\"#\" className=\"text-muted-foreground hover:text-primary transition-colors\" data-testid=\"footer-link-careers\">Careers</a></li>\n              <li><a href=\"#\" className=\"text-muted-foreground hover:text-primary transition-colors\" data-testid=\"footer-link-support\">Support</a></li>\n            </ul>\n          </div>\n        </div>\n\n        {/* Newsletter Signup */}\n        <div className=\"border-t border-border/50 pt-8 mt-12\">\n          <div className=\"flex flex-col md:flex-row items-center justify-between gap-6\">\n            <div>\n              <h4 className=\"text-lg font-semibold text-foreground mb-2\">Stay Updated</h4>\n              <p className=\"text-muted-foreground\">Get the latest news and insights from our engineering team.</p>\n            </div>\n            <NewsletterForm />\n          </div>\n        </div>\n\n        {/* Copyright */}\n        <div className=\"border-t border-border/50 pt-8 mt-8\">\n          <div className=\"flex flex-col md:flex-row items-center justify-between gap-4\">\n            <p className=\"text-muted-foreground text-sm\">\n              © 2024 Several Sustain. All rights reserved.\n            </p>\n            <div className=\"flex items-center gap-6 text-sm\">\n              <Link href=\"/privacy-policy\" className=\"text-muted-foreground hover:text-primary transition-colors\" data-testid=\"footer-link-privacy\">Privacy Policy</Link>\n              <Link href=\"/terms-of-service\" className=\"text-muted-foreground hover:text-primary transition-colors\" data-testid=\"footer-link-terms\">Terms of Service</Link>\n              <a href=\"#\" className=\"text-muted-foreground hover:text-primary transition-colors\" data-testid=\"footer-link-cookies\">Cookie Policy</a>\n            </div>\n          </div>\n        </div>\n      </div>\n    </footer>\n  );\n};\n\nexport default Footer;\n","size_bytes":6584},"client/src/components/layout/Header.tsx":{"content":"import { useState } from \"react\";\nimport { Link, useLocation } from \"wouter\";\nimport { Menu, ChevronDown, X } from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Sheet, SheetContent, SheetTrigger } from \"@/components/ui/sheet\";\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuTrigger,\n} from \"@/components/ui/dropdown-menu\";\nconst logoImage = \"/severalsustain-logo.png\";\n\nconst Header = () => {\n  const [location] = useLocation();\n  const [isOpen, setIsOpen] = useState(false);\n\n  const designServices = [\n    { name: \"PCB Design\", href: \"/services/design/pcb-design\" },\n    { name: \"Web Design\", href: \"/services/design/web-design\" },\n  ];\n\n  const developmentServices = [\n    { name: \"Firmware Development\", href: \"/services/development/firmware\" },\n    { name: \"Hardware Development\", href: \"/services/development/hardware\" },\n    { name: \"App Development\", href: \"/services/development/app-development\" },\n  ];\n\n  const solutions = [\n    { name: \"Milk Analyzer\", href: \"/solutions/milk-analyzer\" },\n    { name: \"DPU & AMCU\", href: \"/solutions/dpu-amcu-systems\" },\n  ];\n\n  return (\n    <header className=\"fixed top-0 left-0 right-0 z-50 glass border-b border-border/50\" data-testid=\"header\">\n      <div className=\"container mx-auto px-4 lg:px-8\">\n        <div className=\"flex items-center justify-between h-16 lg:h-20\">\n          {/* Logo */}\n          <Link href=\"/\" className=\"flex items-center gap-3\" data-testid=\"logo\">\n            <img \n              src={logoImage} \n              alt=\"Several Sustain Logo\" \n              className=\"w-10 h-10 lg:w-12 lg:h-12 object-contain\"\n            />\n            <div>\n              <h1 className=\"text-lg sm:text-xl lg:text-2xl font-bold text-foreground\">\n                Several <span className=\"text-primary\">Sustain</span>\n              </h1>\n            </div>\n          </Link>\n\n          {/* Desktop Navigation */}\n          <nav className=\"hidden lg:flex items-center gap-8\" data-testid=\"desktop-nav\">\n            <DropdownMenu>\n              <DropdownMenuTrigger asChild>\n                <Button variant=\"ghost\" className=\"flex items-center gap-1\" data-testid=\"design-service-dropdown\">\n                  <span>Design Service</span>\n                  <ChevronDown className=\"w-4 h-4\" />\n                </Button>\n              </DropdownMenuTrigger>\n              <DropdownMenuContent className=\"glass-card rounded-lg shadow-xl\">\n                {designServices.map((service) => (\n                  <DropdownMenuItem key={service.href} asChild>\n                    <Link href={service.href} className=\"cursor-pointer\" data-testid={`link-${service.name.toLowerCase().replace(/\\s+/g, '-')}`}>\n                      {service.name}\n                    </Link>\n                  </DropdownMenuItem>\n                ))}\n              </DropdownMenuContent>\n            </DropdownMenu>\n\n            <DropdownMenu>\n              <DropdownMenuTrigger asChild>\n                <Button variant=\"ghost\" className=\"flex items-center gap-1\" data-testid=\"development-service-dropdown\">\n                  <span>Development Service</span>\n                  <ChevronDown className=\"w-4 h-4\" />\n                </Button>\n              </DropdownMenuTrigger>\n              <DropdownMenuContent className=\"glass-card rounded-lg shadow-xl\">\n                {developmentServices.map((service) => (\n                  <DropdownMenuItem key={service.href} asChild>\n                    <Link href={service.href} className=\"cursor-pointer\" data-testid={`link-${service.name.toLowerCase().replace(/\\s+/g, '-')}`}>\n                      {service.name}\n                    </Link>\n                  </DropdownMenuItem>\n                ))}\n              </DropdownMenuContent>\n            </DropdownMenu>\n\n            <DropdownMenu>\n              <DropdownMenuTrigger asChild>\n                <Button variant=\"ghost\" className=\"flex items-center gap-1\" data-testid=\"solutions-dropdown\">\n                  <span>Solutions</span>\n                  <ChevronDown className=\"w-4 h-4\" />\n                </Button>\n              </DropdownMenuTrigger>\n              <DropdownMenuContent className=\"glass-card rounded-lg shadow-xl\">\n                {solutions.map((solution) => (\n                  <DropdownMenuItem key={solution.href} asChild>\n                    <Link href={solution.href} className=\"cursor-pointer\" data-testid={`link-${solution.name.toLowerCase().replace(/\\s+/g, '-')}`}>\n                      {solution.name}\n                    </Link>\n                  </DropdownMenuItem>\n                ))}\n              </DropdownMenuContent>\n            </DropdownMenu>\n\n            <Link href=\"/about\" className=\"px-4 py-2 text-muted-foreground hover:text-foreground transition-colors\" data-testid=\"link-about\">\n              About\n            </Link>\n            <Link href=\"/contact\" className=\"px-4 py-2 text-muted-foreground hover:text-foreground transition-colors\" data-testid=\"link-contact\">\n              Contact\n            </Link>\n          </nav>\n\n          {/* CTA Button */}\n          <div className=\"hidden lg:block\">\n            <Link href=\"/contact\">\n              <Button className=\"bg-primary text-primary-foreground hover:bg-primary/90\" data-testid=\"button-get-quote\">\n                Get Quote\n              </Button>\n            </Link>\n          </div>\n\n          {/* Mobile Menu Button */}\n          <Sheet open={isOpen} onOpenChange={setIsOpen}>\n            <SheetTrigger asChild>\n              <Button variant=\"ghost\" size=\"icon\" className=\"lg:hidden\" data-testid=\"button-mobile-menu\">\n                <Menu className=\"w-6 h-6\" />\n              </Button>\n            </SheetTrigger>\n            <SheetContent side=\"right\" className=\"glass-card\">\n              <nav className=\"space-y-4 mt-8\" data-testid=\"mobile-nav\">\n                <div className=\"space-y-2\">\n                  <p className=\"font-semibold text-foreground\">Design Service</p>\n                  {designServices.map((service) => (\n                    <Link\n                      key={service.href}\n                      href={service.href}\n                      className=\"block py-2 pl-4 text-muted-foreground hover:text-foreground transition-colors\"\n                      onClick={() => setIsOpen(false)}\n                      data-testid={`mobile-link-${service.name.toLowerCase().replace(/\\s+/g, '-')}`}\n                    >\n                      {service.name}\n                    </Link>\n                  ))}\n                </div>\n                <div className=\"space-y-2\">\n                  <p className=\"font-semibold text-foreground\">Development Service</p>\n                  {developmentServices.map((service) => (\n                    <Link\n                      key={service.href}\n                      href={service.href}\n                      className=\"block py-2 pl-4 text-muted-foreground hover:text-foreground transition-colors\"\n                      onClick={() => setIsOpen(false)}\n                      data-testid={`mobile-link-${service.name.toLowerCase().replace(/\\s+/g, '-')}`}\n                    >\n                      {service.name}\n                    </Link>\n                  ))}\n                </div>\n                <div className=\"space-y-2\">\n                  <p className=\"font-semibold text-foreground\">Solutions</p>\n                  {solutions.map((solution) => (\n                    <Link\n                      key={solution.href}\n                      href={solution.href}\n                      className=\"block py-2 pl-4 text-muted-foreground hover:text-foreground transition-colors\"\n                      onClick={() => setIsOpen(false)}\n                      data-testid={`mobile-link-${solution.name.toLowerCase().replace(/\\s+/g, '-')}`}\n                    >\n                      {solution.name}\n                    </Link>\n                  ))}\n                </div>\n                <Link href=\"/about\" className=\"block py-3 text-muted-foreground hover:text-foreground transition-colors\" onClick={() => setIsOpen(false)} data-testid=\"mobile-link-about\">\n                  About\n                </Link>\n                <Link href=\"/contact\" className=\"block py-3 text-muted-foreground hover:text-foreground transition-colors\" onClick={() => setIsOpen(false)} data-testid=\"mobile-link-contact\">\n                  Contact\n                </Link>\n                <Link href=\"/contact\" onClick={() => setIsOpen(false)}>\n                  <Button className=\"w-full bg-primary text-primary-foreground mt-4\" data-testid=\"mobile-button-get-quote\">\n                    Get Quote\n                  </Button>\n                </Link>\n              </nav>\n            </SheetContent>\n          </Sheet>\n        </div>\n      </div>\n    </header>\n  );\n};\n\nexport default Header;\n","size_bytes":8799},"client/src/components/ui/accordion.tsx":{"content":"import * as React from \"react\"\nimport * as AccordionPrimitive from \"@radix-ui/react-accordion\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Accordion = AccordionPrimitive.Root\n\nconst AccordionItem = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <AccordionPrimitive.Item\n    ref={ref}\n    className={cn(\"border-b\", className)}\n    {...props}\n  />\n))\nAccordionItem.displayName = \"AccordionItem\"\n\nconst AccordionTrigger = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Header className=\"flex\">\n    <AccordionPrimitive.Trigger\n      ref={ref}\n      className={cn(\n        \"flex flex-1 items-center justify-between py-4 font-medium transition-all hover:underline [&[data-state=open]>svg]:rotate-180\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <ChevronDown className=\"h-4 w-4 shrink-0 transition-transform duration-200\" />\n    </AccordionPrimitive.Trigger>\n  </AccordionPrimitive.Header>\n))\nAccordionTrigger.displayName = AccordionPrimitive.Trigger.displayName\n\nconst AccordionContent = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Content\n    ref={ref}\n    className=\"overflow-hidden text-sm transition-all data-[state=closed]:animate-accordion-up data-[state=open]:animate-accordion-down\"\n    {...props}\n  >\n    <div className={cn(\"pb-4 pt-0\", className)}>{children}</div>\n  </AccordionPrimitive.Content>\n))\n\nAccordionContent.displayName = AccordionPrimitive.Content.displayName\n\nexport { Accordion, AccordionItem, AccordionTrigger, AccordionContent }\n","size_bytes":1977},"client/src/components/ui/alert-dialog.tsx":{"content":"import * as React from \"react\"\nimport * as AlertDialogPrimitive from \"@radix-ui/react-alert-dialog\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nconst AlertDialog = AlertDialogPrimitive.Root\n\nconst AlertDialogTrigger = AlertDialogPrimitive.Trigger\n\nconst AlertDialogPortal = AlertDialogPrimitive.Portal\n\nconst AlertDialogOverlay = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nAlertDialogOverlay.displayName = AlertDialogPrimitive.Overlay.displayName\n\nconst AlertDialogContent = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPortal>\n    <AlertDialogOverlay />\n    <AlertDialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    />\n  </AlertDialogPortal>\n))\nAlertDialogContent.displayName = AlertDialogPrimitive.Content.displayName\n\nconst AlertDialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogHeader.displayName = \"AlertDialogHeader\"\n\nconst AlertDialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogFooter.displayName = \"AlertDialogFooter\"\n\nconst AlertDialogTitle = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold\", className)}\n    {...props}\n  />\n))\nAlertDialogTitle.displayName = AlertDialogPrimitive.Title.displayName\n\nconst AlertDialogDescription = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nAlertDialogDescription.displayName =\n  AlertDialogPrimitive.Description.displayName\n\nconst AlertDialogAction = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Action>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Action>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Action\n    ref={ref}\n    className={cn(buttonVariants(), className)}\n    {...props}\n  />\n))\nAlertDialogAction.displayName = AlertDialogPrimitive.Action.displayName\n\nconst AlertDialogCancel = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Cancel>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Cancel>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Cancel\n    ref={ref}\n    className={cn(\n      buttonVariants({ variant: \"outline\" }),\n      \"mt-2 sm:mt-0\",\n      className\n    )}\n    {...props}\n  />\n))\nAlertDialogCancel.displayName = AlertDialogPrimitive.Cancel.displayName\n\nexport {\n  AlertDialog,\n  AlertDialogPortal,\n  AlertDialogOverlay,\n  AlertDialogTrigger,\n  AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogFooter,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  AlertDialogAction,\n  AlertDialogCancel,\n}\n","size_bytes":4420},"client/src/components/ui/alert.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-background text-foreground\",\n        destructive:\n          \"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Alert = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>\n>(({ className, variant, ...props }, ref) => (\n  <div\n    ref={ref}\n    role=\"alert\"\n    className={cn(alertVariants({ variant }), className)}\n    {...props}\n  />\n))\nAlert.displayName = \"Alert\"\n\nconst AlertTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h5\n    ref={ref}\n    className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nAlertTitle.displayName = \"AlertTitle\"\n\nconst AlertDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm [&_p]:leading-relaxed\", className)}\n    {...props}\n  />\n))\nAlertDescription.displayName = \"AlertDescription\"\n\nexport { Alert, AlertTitle, AlertDescription }\n","size_bytes":1584},"client/src/components/ui/aspect-ratio.tsx":{"content":"import * as AspectRatioPrimitive from \"@radix-ui/react-aspect-ratio\"\n\nconst AspectRatio = AspectRatioPrimitive.Root\n\nexport { AspectRatio }\n","size_bytes":140},"client/src/components/ui/avatar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as AvatarPrimitive from \"@radix-ui/react-avatar\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Avatar = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex h-10 w-10 shrink-0 overflow-hidden rounded-full\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatar.displayName = AvatarPrimitive.Root.displayName\n\nconst AvatarImage = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Image>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Image>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Image\n    ref={ref}\n    className={cn(\"aspect-square h-full w-full\", className)}\n    {...props}\n  />\n))\nAvatarImage.displayName = AvatarPrimitive.Image.displayName\n\nconst AvatarFallback = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Fallback>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Fallback>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Fallback\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full items-center justify-center rounded-full bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatarFallback.displayName = AvatarPrimitive.Fallback.displayName\n\nexport { Avatar, AvatarImage, AvatarFallback }\n","size_bytes":1419},"client/src/components/ui/badge.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n","size_bytes":1128},"client/src/components/ui/breadcrumb.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Breadcrumb = React.forwardRef<\n  HTMLElement,\n  React.ComponentPropsWithoutRef<\"nav\"> & {\n    separator?: React.ReactNode\n  }\n>(({ ...props }, ref) => <nav ref={ref} aria-label=\"breadcrumb\" {...props} />)\nBreadcrumb.displayName = \"Breadcrumb\"\n\nconst BreadcrumbList = React.forwardRef<\n  HTMLOListElement,\n  React.ComponentPropsWithoutRef<\"ol\">\n>(({ className, ...props }, ref) => (\n  <ol\n    ref={ref}\n    className={cn(\n      \"flex flex-wrap items-center gap-1.5 break-words text-sm text-muted-foreground sm:gap-2.5\",\n      className\n    )}\n    {...props}\n  />\n))\nBreadcrumbList.displayName = \"BreadcrumbList\"\n\nconst BreadcrumbItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentPropsWithoutRef<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    className={cn(\"inline-flex items-center gap-1.5\", className)}\n    {...props}\n  />\n))\nBreadcrumbItem.displayName = \"BreadcrumbItem\"\n\nconst BreadcrumbLink = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentPropsWithoutRef<\"a\"> & {\n    asChild?: boolean\n  }\n>(({ asChild, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      className={cn(\"transition-colors hover:text-foreground\", className)}\n      {...props}\n    />\n  )\n})\nBreadcrumbLink.displayName = \"BreadcrumbLink\"\n\nconst BreadcrumbPage = React.forwardRef<\n  HTMLSpanElement,\n  React.ComponentPropsWithoutRef<\"span\">\n>(({ className, ...props }, ref) => (\n  <span\n    ref={ref}\n    role=\"link\"\n    aria-disabled=\"true\"\n    aria-current=\"page\"\n    className={cn(\"font-normal text-foreground\", className)}\n    {...props}\n  />\n))\nBreadcrumbPage.displayName = \"BreadcrumbPage\"\n\nconst BreadcrumbSeparator = ({\n  children,\n  className,\n  ...props\n}: React.ComponentProps<\"li\">) => (\n  <li\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"[&>svg]:w-3.5 [&>svg]:h-3.5\", className)}\n    {...props}\n  >\n    {children ?? <ChevronRight />}\n  </li>\n)\nBreadcrumbSeparator.displayName = \"BreadcrumbSeparator\"\n\nconst BreadcrumbEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More</span>\n  </span>\n)\nBreadcrumbEllipsis.displayName = \"BreadcrumbElipssis\"\n\nexport {\n  Breadcrumb,\n  BreadcrumbList,\n  BreadcrumbItem,\n  BreadcrumbLink,\n  BreadcrumbPage,\n  BreadcrumbSeparator,\n  BreadcrumbEllipsis,\n}\n","size_bytes":2712},"client/src/components/ui/button.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n","size_bytes":1901},"client/src/components/ui/calendar.tsx":{"content":"import * as React from \"react\"\nimport { ChevronLeft, ChevronRight } from \"lucide-react\"\nimport { DayPicker } from \"react-day-picker\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nexport type CalendarProps = React.ComponentProps<typeof DayPicker>\n\nfunction Calendar({\n  className,\n  classNames,\n  showOutsideDays = true,\n  ...props\n}: CalendarProps) {\n  return (\n    <DayPicker\n      showOutsideDays={showOutsideDays}\n      className={cn(\"p-3\", className)}\n      classNames={{\n        months: \"flex flex-col sm:flex-row space-y-4 sm:space-x-4 sm:space-y-0\",\n        month: \"space-y-4\",\n        caption: \"flex justify-center pt-1 relative items-center\",\n        caption_label: \"text-sm font-medium\",\n        nav: \"space-x-1 flex items-center\",\n        nav_button: cn(\n          buttonVariants({ variant: \"outline\" }),\n          \"h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100\"\n        ),\n        nav_button_previous: \"absolute left-1\",\n        nav_button_next: \"absolute right-1\",\n        table: \"w-full border-collapse space-y-1\",\n        head_row: \"flex\",\n        head_cell:\n          \"text-muted-foreground rounded-md w-9 font-normal text-[0.8rem]\",\n        row: \"flex w-full mt-2\",\n        cell: \"h-9 w-9 text-center text-sm p-0 relative [&:has([aria-selected].day-range-end)]:rounded-r-md [&:has([aria-selected].day-outside)]:bg-accent/50 [&:has([aria-selected])]:bg-accent first:[&:has([aria-selected])]:rounded-l-md last:[&:has([aria-selected])]:rounded-r-md focus-within:relative focus-within:z-20\",\n        day: cn(\n          buttonVariants({ variant: \"ghost\" }),\n          \"h-9 w-9 p-0 font-normal aria-selected:opacity-100\"\n        ),\n        day_range_end: \"day-range-end\",\n        day_selected:\n          \"bg-primary text-primary-foreground hover:bg-primary hover:text-primary-foreground focus:bg-primary focus:text-primary-foreground\",\n        day_today: \"bg-accent text-accent-foreground\",\n        day_outside:\n          \"day-outside text-muted-foreground aria-selected:bg-accent/50 aria-selected:text-muted-foreground\",\n        day_disabled: \"text-muted-foreground opacity-50\",\n        day_range_middle:\n          \"aria-selected:bg-accent aria-selected:text-accent-foreground\",\n        day_hidden: \"invisible\",\n        ...classNames,\n      }}\n      components={{\n        IconLeft: ({ className, ...props }) => (\n          <ChevronLeft className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n        IconRight: ({ className, ...props }) => (\n          <ChevronRight className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n      }}\n      {...props}\n    />\n  )\n}\nCalendar.displayName = \"Calendar\"\n\nexport { Calendar }\n","size_bytes":2695},"client/src/components/ui/card.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n","size_bytes":1858},"client/src/components/ui/carousel.tsx":{"content":"import * as React from \"react\"\nimport useEmblaCarousel, {\n  type UseEmblaCarouselType,\n} from \"embla-carousel-react\"\nimport { ArrowLeft, ArrowRight } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\n\ntype CarouselApi = UseEmblaCarouselType[1]\ntype UseCarouselParameters = Parameters<typeof useEmblaCarousel>\ntype CarouselOptions = UseCarouselParameters[0]\ntype CarouselPlugin = UseCarouselParameters[1]\n\ntype CarouselProps = {\n  opts?: CarouselOptions\n  plugins?: CarouselPlugin\n  orientation?: \"horizontal\" | \"vertical\"\n  setApi?: (api: CarouselApi) => void\n}\n\ntype CarouselContextProps = {\n  carouselRef: ReturnType<typeof useEmblaCarousel>[0]\n  api: ReturnType<typeof useEmblaCarousel>[1]\n  scrollPrev: () => void\n  scrollNext: () => void\n  canScrollPrev: boolean\n  canScrollNext: boolean\n} & CarouselProps\n\nconst CarouselContext = React.createContext<CarouselContextProps | null>(null)\n\nfunction useCarousel() {\n  const context = React.useContext(CarouselContext)\n\n  if (!context) {\n    throw new Error(\"useCarousel must be used within a <Carousel />\")\n  }\n\n  return context\n}\n\nconst Carousel = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & CarouselProps\n>(\n  (\n    {\n      orientation = \"horizontal\",\n      opts,\n      setApi,\n      plugins,\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const [carouselRef, api] = useEmblaCarousel(\n      {\n        ...opts,\n        axis: orientation === \"horizontal\" ? \"x\" : \"y\",\n      },\n      plugins\n    )\n    const [canScrollPrev, setCanScrollPrev] = React.useState(false)\n    const [canScrollNext, setCanScrollNext] = React.useState(false)\n\n    const onSelect = React.useCallback((api: CarouselApi) => {\n      if (!api) {\n        return\n      }\n\n      setCanScrollPrev(api.canScrollPrev())\n      setCanScrollNext(api.canScrollNext())\n    }, [])\n\n    const scrollPrev = React.useCallback(() => {\n      api?.scrollPrev()\n    }, [api])\n\n    const scrollNext = React.useCallback(() => {\n      api?.scrollNext()\n    }, [api])\n\n    const handleKeyDown = React.useCallback(\n      (event: React.KeyboardEvent<HTMLDivElement>) => {\n        if (event.key === \"ArrowLeft\") {\n          event.preventDefault()\n          scrollPrev()\n        } else if (event.key === \"ArrowRight\") {\n          event.preventDefault()\n          scrollNext()\n        }\n      },\n      [scrollPrev, scrollNext]\n    )\n\n    React.useEffect(() => {\n      if (!api || !setApi) {\n        return\n      }\n\n      setApi(api)\n    }, [api, setApi])\n\n    React.useEffect(() => {\n      if (!api) {\n        return\n      }\n\n      onSelect(api)\n      api.on(\"reInit\", onSelect)\n      api.on(\"select\", onSelect)\n\n      return () => {\n        api?.off(\"select\", onSelect)\n      }\n    }, [api, onSelect])\n\n    return (\n      <CarouselContext.Provider\n        value={{\n          carouselRef,\n          api: api,\n          opts,\n          orientation:\n            orientation || (opts?.axis === \"y\" ? \"vertical\" : \"horizontal\"),\n          scrollPrev,\n          scrollNext,\n          canScrollPrev,\n          canScrollNext,\n        }}\n      >\n        <div\n          ref={ref}\n          onKeyDownCapture={handleKeyDown}\n          className={cn(\"relative\", className)}\n          role=\"region\"\n          aria-roledescription=\"carousel\"\n          {...props}\n        >\n          {children}\n        </div>\n      </CarouselContext.Provider>\n    )\n  }\n)\nCarousel.displayName = \"Carousel\"\n\nconst CarouselContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { carouselRef, orientation } = useCarousel()\n\n  return (\n    <div ref={carouselRef} className=\"overflow-hidden\">\n      <div\n        ref={ref}\n        className={cn(\n          \"flex\",\n          orientation === \"horizontal\" ? \"-ml-4\" : \"-mt-4 flex-col\",\n          className\n        )}\n        {...props}\n      />\n    </div>\n  )\n})\nCarouselContent.displayName = \"CarouselContent\"\n\nconst CarouselItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { orientation } = useCarousel()\n\n  return (\n    <div\n      ref={ref}\n      role=\"group\"\n      aria-roledescription=\"slide\"\n      className={cn(\n        \"min-w-0 shrink-0 grow-0 basis-full\",\n        orientation === \"horizontal\" ? \"pl-4\" : \"pt-4\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nCarouselItem.displayName = \"CarouselItem\"\n\nconst CarouselPrevious = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollPrev, canScrollPrev } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute  h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-left-12 top-1/2 -translate-y-1/2\"\n          : \"-top-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollPrev}\n      onClick={scrollPrev}\n      {...props}\n    >\n      <ArrowLeft className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Previous slide</span>\n    </Button>\n  )\n})\nCarouselPrevious.displayName = \"CarouselPrevious\"\n\nconst CarouselNext = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollNext, canScrollNext } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-right-12 top-1/2 -translate-y-1/2\"\n          : \"-bottom-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollNext}\n      onClick={scrollNext}\n      {...props}\n    >\n      <ArrowRight className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Next slide</span>\n    </Button>\n  )\n})\nCarouselNext.displayName = \"CarouselNext\"\n\nexport {\n  type CarouselApi,\n  Carousel,\n  CarouselContent,\n  CarouselItem,\n  CarouselPrevious,\n  CarouselNext,\n}\n","size_bytes":6210},"client/src/components/ui/chart.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as RechartsPrimitive from \"recharts\"\n\nimport { cn } from \"@/lib/utils\"\n\n// Format: { THEME_NAME: CSS_SELECTOR }\nconst THEMES = { light: \"\", dark: \".dark\" } as const\n\nexport type ChartConfig = {\n  [k in string]: {\n    label?: React.ReactNode\n    icon?: React.ComponentType\n  } & (\n    | { color?: string; theme?: never }\n    | { color?: never; theme: Record<keyof typeof THEMES, string> }\n  )\n}\n\ntype ChartContextProps = {\n  config: ChartConfig\n}\n\nconst ChartContext = React.createContext<ChartContextProps | null>(null)\n\nfunction useChart() {\n  const context = React.useContext(ChartContext)\n\n  if (!context) {\n    throw new Error(\"useChart must be used within a <ChartContainer />\")\n  }\n\n  return context\n}\n\nconst ChartContainer = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    config: ChartConfig\n    children: React.ComponentProps<\n      typeof RechartsPrimitive.ResponsiveContainer\n    >[\"children\"]\n  }\n>(({ id, className, children, config, ...props }, ref) => {\n  const uniqueId = React.useId()\n  const chartId = `chart-${id || uniqueId.replace(/:/g, \"\")}`\n\n  return (\n    <ChartContext.Provider value={{ config }}>\n      <div\n        data-chart={chartId}\n        ref={ref}\n        className={cn(\n          \"flex aspect-video justify-center text-xs [&_.recharts-cartesian-axis-tick_text]:fill-muted-foreground [&_.recharts-cartesian-grid_line[stroke='#ccc']]:stroke-border/50 [&_.recharts-curve.recharts-tooltip-cursor]:stroke-border [&_.recharts-dot[stroke='#fff']]:stroke-transparent [&_.recharts-layer]:outline-none [&_.recharts-polar-grid_[stroke='#ccc']]:stroke-border [&_.recharts-radial-bar-background-sector]:fill-muted [&_.recharts-rectangle.recharts-tooltip-cursor]:fill-muted [&_.recharts-reference-line_[stroke='#ccc']]:stroke-border [&_.recharts-sector[stroke='#fff']]:stroke-transparent [&_.recharts-sector]:outline-none [&_.recharts-surface]:outline-none\",\n          className\n        )}\n        {...props}\n      >\n        <ChartStyle id={chartId} config={config} />\n        <RechartsPrimitive.ResponsiveContainer>\n          {children}\n        </RechartsPrimitive.ResponsiveContainer>\n      </div>\n    </ChartContext.Provider>\n  )\n})\nChartContainer.displayName = \"Chart\"\n\nconst ChartStyle = ({ id, config }: { id: string; config: ChartConfig }) => {\n  const colorConfig = Object.entries(config).filter(\n    ([, config]) => config.theme || config.color\n  )\n\n  if (!colorConfig.length) {\n    return null\n  }\n\n  return (\n    <style\n      dangerouslySetInnerHTML={{\n        __html: Object.entries(THEMES)\n          .map(\n            ([theme, prefix]) => `\n${prefix} [data-chart=${id}] {\n${colorConfig\n  .map(([key, itemConfig]) => {\n    const color =\n      itemConfig.theme?.[theme as keyof typeof itemConfig.theme] ||\n      itemConfig.color\n    return color ? `  --color-${key}: ${color};` : null\n  })\n  .join(\"\\n\")}\n}\n`\n          )\n          .join(\"\\n\"),\n      }}\n    />\n  )\n}\n\nconst ChartTooltip = RechartsPrimitive.Tooltip\n\nconst ChartTooltipContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<typeof RechartsPrimitive.Tooltip> &\n    React.ComponentProps<\"div\"> & {\n      hideLabel?: boolean\n      hideIndicator?: boolean\n      indicator?: \"line\" | \"dot\" | \"dashed\"\n      nameKey?: string\n      labelKey?: string\n    }\n>(\n  (\n    {\n      active,\n      payload,\n      className,\n      indicator = \"dot\",\n      hideLabel = false,\n      hideIndicator = false,\n      label,\n      labelFormatter,\n      labelClassName,\n      formatter,\n      color,\n      nameKey,\n      labelKey,\n    },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    const tooltipLabel = React.useMemo(() => {\n      if (hideLabel || !payload?.length) {\n        return null\n      }\n\n      const [item] = payload\n      const key = `${labelKey || item?.dataKey || item?.name || \"value\"}`\n      const itemConfig = getPayloadConfigFromPayload(config, item, key)\n      const value =\n        !labelKey && typeof label === \"string\"\n          ? config[label as keyof typeof config]?.label || label\n          : itemConfig?.label\n\n      if (labelFormatter) {\n        return (\n          <div className={cn(\"font-medium\", labelClassName)}>\n            {labelFormatter(value, payload)}\n          </div>\n        )\n      }\n\n      if (!value) {\n        return null\n      }\n\n      return <div className={cn(\"font-medium\", labelClassName)}>{value}</div>\n    }, [\n      label,\n      labelFormatter,\n      payload,\n      hideLabel,\n      labelClassName,\n      config,\n      labelKey,\n    ])\n\n    if (!active || !payload?.length) {\n      return null\n    }\n\n    const nestLabel = payload.length === 1 && indicator !== \"dot\"\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"grid min-w-[8rem] items-start gap-1.5 rounded-lg border border-border/50 bg-background px-2.5 py-1.5 text-xs shadow-xl\",\n          className\n        )}\n      >\n        {!nestLabel ? tooltipLabel : null}\n        <div className=\"grid gap-1.5\">\n          {payload.map((item, index) => {\n            const key = `${nameKey || item.name || item.dataKey || \"value\"}`\n            const itemConfig = getPayloadConfigFromPayload(config, item, key)\n            const indicatorColor = color || item.payload.fill || item.color\n\n            return (\n              <div\n                key={item.dataKey}\n                className={cn(\n                  \"flex w-full flex-wrap items-stretch gap-2 [&>svg]:h-2.5 [&>svg]:w-2.5 [&>svg]:text-muted-foreground\",\n                  indicator === \"dot\" && \"items-center\"\n                )}\n              >\n                {formatter && item?.value !== undefined && item.name ? (\n                  formatter(item.value, item.name, item, index, item.payload)\n                ) : (\n                  <>\n                    {itemConfig?.icon ? (\n                      <itemConfig.icon />\n                    ) : (\n                      !hideIndicator && (\n                        <div\n                          className={cn(\n                            \"shrink-0 rounded-[2px] border-[--color-border] bg-[--color-bg]\",\n                            {\n                              \"h-2.5 w-2.5\": indicator === \"dot\",\n                              \"w-1\": indicator === \"line\",\n                              \"w-0 border-[1.5px] border-dashed bg-transparent\":\n                                indicator === \"dashed\",\n                              \"my-0.5\": nestLabel && indicator === \"dashed\",\n                            }\n                          )}\n                          style={\n                            {\n                              \"--color-bg\": indicatorColor,\n                              \"--color-border\": indicatorColor,\n                            } as React.CSSProperties\n                          }\n                        />\n                      )\n                    )}\n                    <div\n                      className={cn(\n                        \"flex flex-1 justify-between leading-none\",\n                        nestLabel ? \"items-end\" : \"items-center\"\n                      )}\n                    >\n                      <div className=\"grid gap-1.5\">\n                        {nestLabel ? tooltipLabel : null}\n                        <span className=\"text-muted-foreground\">\n                          {itemConfig?.label || item.name}\n                        </span>\n                      </div>\n                      {item.value && (\n                        <span className=\"font-mono font-medium tabular-nums text-foreground\">\n                          {item.value.toLocaleString()}\n                        </span>\n                      )}\n                    </div>\n                  </>\n                )}\n              </div>\n            )\n          })}\n        </div>\n      </div>\n    )\n  }\n)\nChartTooltipContent.displayName = \"ChartTooltip\"\n\nconst ChartLegend = RechartsPrimitive.Legend\n\nconst ChartLegendContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> &\n    Pick<RechartsPrimitive.LegendProps, \"payload\" | \"verticalAlign\"> & {\n      hideIcon?: boolean\n      nameKey?: string\n    }\n>(\n  (\n    { className, hideIcon = false, payload, verticalAlign = \"bottom\", nameKey },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    if (!payload?.length) {\n      return null\n    }\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"flex items-center justify-center gap-4\",\n          verticalAlign === \"top\" ? \"pb-3\" : \"pt-3\",\n          className\n        )}\n      >\n        {payload.map((item) => {\n          const key = `${nameKey || item.dataKey || \"value\"}`\n          const itemConfig = getPayloadConfigFromPayload(config, item, key)\n\n          return (\n            <div\n              key={item.value}\n              className={cn(\n                \"flex items-center gap-1.5 [&>svg]:h-3 [&>svg]:w-3 [&>svg]:text-muted-foreground\"\n              )}\n            >\n              {itemConfig?.icon && !hideIcon ? (\n                <itemConfig.icon />\n              ) : (\n                <div\n                  className=\"h-2 w-2 shrink-0 rounded-[2px]\"\n                  style={{\n                    backgroundColor: item.color,\n                  }}\n                />\n              )}\n              {itemConfig?.label}\n            </div>\n          )\n        })}\n      </div>\n    )\n  }\n)\nChartLegendContent.displayName = \"ChartLegend\"\n\n// Helper to extract item config from a payload.\nfunction getPayloadConfigFromPayload(\n  config: ChartConfig,\n  payload: unknown,\n  key: string\n) {\n  if (typeof payload !== \"object\" || payload === null) {\n    return undefined\n  }\n\n  const payloadPayload =\n    \"payload\" in payload &&\n    typeof payload.payload === \"object\" &&\n    payload.payload !== null\n      ? payload.payload\n      : undefined\n\n  let configLabelKey: string = key\n\n  if (\n    key in payload &&\n    typeof payload[key as keyof typeof payload] === \"string\"\n  ) {\n    configLabelKey = payload[key as keyof typeof payload] as string\n  } else if (\n    payloadPayload &&\n    key in payloadPayload &&\n    typeof payloadPayload[key as keyof typeof payloadPayload] === \"string\"\n  ) {\n    configLabelKey = payloadPayload[\n      key as keyof typeof payloadPayload\n    ] as string\n  }\n\n  return configLabelKey in config\n    ? config[configLabelKey]\n    : config[key as keyof typeof config]\n}\n\nexport {\n  ChartContainer,\n  ChartTooltip,\n  ChartTooltipContent,\n  ChartLegend,\n  ChartLegendContent,\n  ChartStyle,\n}\n","size_bytes":10481},"client/src/components/ui/checkbox.tsx":{"content":"import * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { Check } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\n      className\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn(\"flex items-center justify-center text-current\")}\n    >\n      <Check className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n))\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\n\nexport { Checkbox }\n","size_bytes":1056},"client/src/components/ui/collapsible.tsx":{"content":"\"use client\"\n\nimport * as CollapsiblePrimitive from \"@radix-ui/react-collapsible\"\n\nconst Collapsible = CollapsiblePrimitive.Root\n\nconst CollapsibleTrigger = CollapsiblePrimitive.CollapsibleTrigger\n\nconst CollapsibleContent = CollapsiblePrimitive.CollapsibleContent\n\nexport { Collapsible, CollapsibleTrigger, CollapsibleContent }\n","size_bytes":329},"client/src/components/ui/command.tsx":{"content":"import * as React from \"react\"\nimport { type DialogProps } from \"@radix-ui/react-dialog\"\nimport { Command as CommandPrimitive } from \"cmdk\"\nimport { Search } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Dialog, DialogContent } from \"@/components/ui/dialog\"\n\nconst Command = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full flex-col overflow-hidden rounded-md bg-popover text-popover-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nCommand.displayName = CommandPrimitive.displayName\n\nconst CommandDialog = ({ children, ...props }: DialogProps) => {\n  return (\n    <Dialog {...props}>\n      <DialogContent className=\"overflow-hidden p-0 shadow-lg\">\n        <Command className=\"[&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground [&_[cmdk-group]:not([hidden])_~[cmdk-group]]:pt-0 [&_[cmdk-group]]:px-2 [&_[cmdk-input-wrapper]_svg]:h-5 [&_[cmdk-input-wrapper]_svg]:w-5 [&_[cmdk-input]]:h-12 [&_[cmdk-item]]:px-2 [&_[cmdk-item]]:py-3 [&_[cmdk-item]_svg]:h-5 [&_[cmdk-item]_svg]:w-5\">\n          {children}\n        </Command>\n      </DialogContent>\n    </Dialog>\n  )\n}\n\nconst CommandInput = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Input>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Input>\n>(({ className, ...props }, ref) => (\n  <div className=\"flex items-center border-b px-3\" cmdk-input-wrapper=\"\">\n    <Search className=\"mr-2 h-4 w-4 shrink-0 opacity-50\" />\n    <CommandPrimitive.Input\n      ref={ref}\n      className={cn(\n        \"flex h-11 w-full rounded-md bg-transparent py-3 text-sm outline-none placeholder:text-muted-foreground disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    />\n  </div>\n))\n\nCommandInput.displayName = CommandPrimitive.Input.displayName\n\nconst CommandList = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.List\n    ref={ref}\n    className={cn(\"max-h-[300px] overflow-y-auto overflow-x-hidden\", className)}\n    {...props}\n  />\n))\n\nCommandList.displayName = CommandPrimitive.List.displayName\n\nconst CommandEmpty = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Empty>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Empty>\n>((props, ref) => (\n  <CommandPrimitive.Empty\n    ref={ref}\n    className=\"py-6 text-center text-sm\"\n    {...props}\n  />\n))\n\nCommandEmpty.displayName = CommandPrimitive.Empty.displayName\n\nconst CommandGroup = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Group>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Group>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Group\n    ref={ref}\n    className={cn(\n      \"overflow-hidden p-1 text-foreground [&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:py-1.5 [&_[cmdk-group-heading]]:text-xs [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandGroup.displayName = CommandPrimitive.Group.displayName\n\nconst CommandSeparator = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nCommandSeparator.displayName = CommandPrimitive.Separator.displayName\n\nconst CommandItem = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default gap-2 select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none data-[disabled=true]:pointer-events-none data-[selected='true']:bg-accent data-[selected=true]:text-accent-foreground data-[disabled=true]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandItem.displayName = CommandPrimitive.Item.displayName\n\nconst CommandShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nCommandShortcut.displayName = \"CommandShortcut\"\n\nexport {\n  Command,\n  CommandDialog,\n  CommandInput,\n  CommandList,\n  CommandEmpty,\n  CommandGroup,\n  CommandItem,\n  CommandShortcut,\n  CommandSeparator,\n}\n","size_bytes":4885},"client/src/components/ui/context-menu.tsx":{"content":"import * as React from \"react\"\nimport * as ContextMenuPrimitive from \"@radix-ui/react-context-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ContextMenu = ContextMenuPrimitive.Root\n\nconst ContextMenuTrigger = ContextMenuPrimitive.Trigger\n\nconst ContextMenuGroup = ContextMenuPrimitive.Group\n\nconst ContextMenuPortal = ContextMenuPrimitive.Portal\n\nconst ContextMenuSub = ContextMenuPrimitive.Sub\n\nconst ContextMenuRadioGroup = ContextMenuPrimitive.RadioGroup\n\nconst ContextMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <ContextMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </ContextMenuPrimitive.SubTrigger>\n))\nContextMenuSubTrigger.displayName = ContextMenuPrimitive.SubTrigger.displayName\n\nconst ContextMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-context-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuSubContent.displayName = ContextMenuPrimitive.SubContent.displayName\n\nconst ContextMenuContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Portal>\n    <ContextMenuPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"z-50 max-h-[--radix-context-menu-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md animate-in fade-in-80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-context-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </ContextMenuPrimitive.Portal>\n))\nContextMenuContent.displayName = ContextMenuPrimitive.Content.displayName\n\nconst ContextMenuItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuItem.displayName = ContextMenuPrimitive.Item.displayName\n\nconst ContextMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <ContextMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.CheckboxItem>\n))\nContextMenuCheckboxItem.displayName =\n  ContextMenuPrimitive.CheckboxItem.displayName\n\nconst ContextMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <ContextMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.RadioItem>\n))\nContextMenuRadioItem.displayName = ContextMenuPrimitive.RadioItem.displayName\n\nconst ContextMenuLabel = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold text-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuLabel.displayName = ContextMenuPrimitive.Label.displayName\n\nconst ContextMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nContextMenuSeparator.displayName = ContextMenuPrimitive.Separator.displayName\n\nconst ContextMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nContextMenuShortcut.displayName = \"ContextMenuShortcut\"\n\nexport {\n  ContextMenu,\n  ContextMenuTrigger,\n  ContextMenuContent,\n  ContextMenuItem,\n  ContextMenuCheckboxItem,\n  ContextMenuRadioItem,\n  ContextMenuLabel,\n  ContextMenuSeparator,\n  ContextMenuShortcut,\n  ContextMenuGroup,\n  ContextMenuPortal,\n  ContextMenuSub,\n  ContextMenuSubContent,\n  ContextMenuSubTrigger,\n  ContextMenuRadioGroup,\n}\n","size_bytes":7428},"client/src/components/ui/dialog.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n","size_bytes":3848},"client/src/components/ui/drawer.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport { Drawer as DrawerPrimitive } from \"vaul\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Drawer = ({\n  shouldScaleBackground = true,\n  ...props\n}: React.ComponentProps<typeof DrawerPrimitive.Root>) => (\n  <DrawerPrimitive.Root\n    shouldScaleBackground={shouldScaleBackground}\n    {...props}\n  />\n)\nDrawer.displayName = \"Drawer\"\n\nconst DrawerTrigger = DrawerPrimitive.Trigger\n\nconst DrawerPortal = DrawerPrimitive.Portal\n\nconst DrawerClose = DrawerPrimitive.Close\n\nconst DrawerOverlay = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Overlay\n    ref={ref}\n    className={cn(\"fixed inset-0 z-50 bg-black/80\", className)}\n    {...props}\n  />\n))\nDrawerOverlay.displayName = DrawerPrimitive.Overlay.displayName\n\nconst DrawerContent = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DrawerPortal>\n    <DrawerOverlay />\n    <DrawerPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed inset-x-0 bottom-0 z-50 mt-24 flex h-auto flex-col rounded-t-[10px] border bg-background\",\n        className\n      )}\n      {...props}\n    >\n      <div className=\"mx-auto mt-4 h-2 w-[100px] rounded-full bg-muted\" />\n      {children}\n    </DrawerPrimitive.Content>\n  </DrawerPortal>\n))\nDrawerContent.displayName = \"DrawerContent\"\n\nconst DrawerHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"grid gap-1.5 p-4 text-center sm:text-left\", className)}\n    {...props}\n  />\n)\nDrawerHeader.displayName = \"DrawerHeader\"\n\nconst DrawerFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"mt-auto flex flex-col gap-2 p-4\", className)}\n    {...props}\n  />\n)\nDrawerFooter.displayName = \"DrawerFooter\"\n\nconst DrawerTitle = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDrawerTitle.displayName = DrawerPrimitive.Title.displayName\n\nconst DrawerDescription = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDrawerDescription.displayName = DrawerPrimitive.Description.displayName\n\nexport {\n  Drawer,\n  DrawerPortal,\n  DrawerOverlay,\n  DrawerTrigger,\n  DrawerClose,\n  DrawerContent,\n  DrawerHeader,\n  DrawerFooter,\n  DrawerTitle,\n  DrawerDescription,\n}\n","size_bytes":3021},"client/src/components/ui/dropdown-menu.tsx":{"content":"import * as React from \"react\"\nimport * as DropdownMenuPrimitive from \"@radix-ui/react-dropdown-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst DropdownMenu = DropdownMenuPrimitive.Root\n\nconst DropdownMenuTrigger = DropdownMenuPrimitive.Trigger\n\nconst DropdownMenuGroup = DropdownMenuPrimitive.Group\n\nconst DropdownMenuPortal = DropdownMenuPrimitive.Portal\n\nconst DropdownMenuSub = DropdownMenuPrimitive.Sub\n\nconst DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup\n\nconst DropdownMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto\" />\n  </DropdownMenuPrimitive.SubTrigger>\n))\nDropdownMenuSubTrigger.displayName =\n  DropdownMenuPrimitive.SubTrigger.displayName\n\nconst DropdownMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuSubContent.displayName =\n  DropdownMenuPrimitive.SubContent.displayName\n\nconst DropdownMenuContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <DropdownMenuPrimitive.Portal>\n    <DropdownMenuPrimitive.Content\n      ref={ref}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 max-h-[var(--radix-dropdown-menu-content-available-height)] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </DropdownMenuPrimitive.Portal>\n))\nDropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName\n\nconst DropdownMenuItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName\n\nconst DropdownMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <DropdownMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.CheckboxItem>\n))\nDropdownMenuCheckboxItem.displayName =\n  DropdownMenuPrimitive.CheckboxItem.displayName\n\nconst DropdownMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.RadioItem>\n))\nDropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName\n\nconst DropdownMenuLabel = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName\n\nconst DropdownMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nDropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName\n\nconst DropdownMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\"ml-auto text-xs tracking-widest opacity-60\", className)}\n      {...props}\n    />\n  )\n}\nDropdownMenuShortcut.displayName = \"DropdownMenuShortcut\"\n\nexport {\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuGroup,\n  DropdownMenuPortal,\n  DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenuSubTrigger,\n  DropdownMenuRadioGroup,\n}\n","size_bytes":7609},"client/src/components/ui/form.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  FormProvider,\n  useFormContext,\n  type ControllerProps,\n  type FieldPath,\n  type FieldValues,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/components/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState, formState } = useFormContext()\n\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nconst FormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\n    </FormItemContext.Provider>\n  )\n})\nFormItem.displayName = \"FormItem\"\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && \"text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n})\nFormLabel.displayName = \"FormLabel\"\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n})\nFormControl.displayName = \"FormControl\"\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn(\"text-sm text-muted-foreground\", className)}\n      {...props}\n    />\n  )\n})\nFormDescription.displayName = \"FormDescription\"\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message ?? \"\") : children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn(\"text-sm font-medium text-destructive\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n})\nFormMessage.displayName = \"FormMessage\"\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}\n","size_bytes":4120},"client/src/components/ui/glass-card.tsx":{"content":"import { cn } from \"@/lib/utils\";\n\ninterface GlassCardProps {\n  children: React.ReactNode;\n  className?: string;\n  hover?: boolean;\n}\n\nexport const GlassCard = ({ children, className, hover = true }: GlassCardProps) => {\n  return (\n    <div\n      className={cn(\n        \"glass-card rounded-xl\",\n        hover && \"hover:shadow-xl transition-all duration-300\",\n        className\n      )}\n    >\n      {children}\n    </div>\n  );\n};\n","size_bytes":428},"client/src/components/ui/hover-card.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as HoverCardPrimitive from \"@radix-ui/react-hover-card\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst HoverCard = HoverCardPrimitive.Root\n\nconst HoverCardTrigger = HoverCardPrimitive.Trigger\n\nconst HoverCardContent = React.forwardRef<\n  React.ElementRef<typeof HoverCardPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof HoverCardPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <HoverCardPrimitive.Content\n    ref={ref}\n    align={align}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 w-64 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-hover-card-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nHoverCardContent.displayName = HoverCardPrimitive.Content.displayName\n\nexport { HoverCard, HoverCardTrigger, HoverCardContent }\n","size_bytes":1251},"client/src/components/ui/input-otp.tsx":{"content":"import * as React from \"react\"\nimport { OTPInput, OTPInputContext } from \"input-otp\"\nimport { Dot } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst InputOTP = React.forwardRef<\n  React.ElementRef<typeof OTPInput>,\n  React.ComponentPropsWithoutRef<typeof OTPInput>\n>(({ className, containerClassName, ...props }, ref) => (\n  <OTPInput\n    ref={ref}\n    containerClassName={cn(\n      \"flex items-center gap-2 has-[:disabled]:opacity-50\",\n      containerClassName\n    )}\n    className={cn(\"disabled:cursor-not-allowed\", className)}\n    {...props}\n  />\n))\nInputOTP.displayName = \"InputOTP\"\n\nconst InputOTPGroup = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"flex items-center\", className)} {...props} />\n))\nInputOTPGroup.displayName = \"InputOTPGroup\"\n\nconst InputOTPSlot = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\"> & { index: number }\n>(({ index, className, ...props }, ref) => {\n  const inputOTPContext = React.useContext(OTPInputContext)\n  const { char, hasFakeCaret, isActive } = inputOTPContext.slots[index]\n\n  return (\n    <div\n      ref={ref}\n      className={cn(\n        \"relative flex h-10 w-10 items-center justify-center border-y border-r border-input text-sm transition-all first:rounded-l-md first:border-l last:rounded-r-md\",\n        isActive && \"z-10 ring-2 ring-ring ring-offset-background\",\n        className\n      )}\n      {...props}\n    >\n      {char}\n      {hasFakeCaret && (\n        <div className=\"pointer-events-none absolute inset-0 flex items-center justify-center\">\n          <div className=\"h-4 w-px animate-caret-blink bg-foreground duration-1000\" />\n        </div>\n      )}\n    </div>\n  )\n})\nInputOTPSlot.displayName = \"InputOTPSlot\"\n\nconst InputOTPSeparator = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ ...props }, ref) => (\n  <div ref={ref} role=\"separator\" {...props}>\n    <Dot />\n  </div>\n))\nInputOTPSeparator.displayName = \"InputOTPSeparator\"\n\nexport { InputOTP, InputOTPGroup, InputOTPSlot, InputOTPSeparator }\n","size_bytes":2154},"client/src/components/ui/input.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n","size_bytes":791},"client/src/components/ui/label.tsx":{"content":"import * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n","size_bytes":710},"client/src/components/ui/menubar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as MenubarPrimitive from \"@radix-ui/react-menubar\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction MenubarMenu({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Menu>) {\n  return <MenubarPrimitive.Menu {...props} />\n}\n\nfunction MenubarGroup({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Group>) {\n  return <MenubarPrimitive.Group {...props} />\n}\n\nfunction MenubarPortal({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Portal>) {\n  return <MenubarPrimitive.Portal {...props} />\n}\n\nfunction MenubarRadioGroup({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.RadioGroup>) {\n  return <MenubarPrimitive.RadioGroup {...props} />\n}\n\nfunction MenubarSub({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Sub>) {\n  return <MenubarPrimitive.Sub data-slot=\"menubar-sub\" {...props} />\n}\n\nconst Menubar = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"flex h-10 items-center space-x-1 rounded-md border bg-background p-1\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubar.displayName = MenubarPrimitive.Root.displayName\n\nconst MenubarTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-3 py-1.5 text-sm font-medium outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarTrigger.displayName = MenubarPrimitive.Trigger.displayName\n\nconst MenubarSubTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <MenubarPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </MenubarPrimitive.SubTrigger>\n))\nMenubarSubTrigger.displayName = MenubarPrimitive.SubTrigger.displayName\n\nconst MenubarSubContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarSubContent.displayName = MenubarPrimitive.SubContent.displayName\n\nconst MenubarContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Content>\n>(\n  (\n    { className, align = \"start\", alignOffset = -4, sideOffset = 8, ...props },\n    ref\n  ) => (\n    <MenubarPrimitive.Portal>\n      <MenubarPrimitive.Content\n        ref={ref}\n        align={align}\n        alignOffset={alignOffset}\n        sideOffset={sideOffset}\n        className={cn(\n          \"z-50 min-w-[12rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]\",\n          className\n        )}\n        {...props}\n      />\n    </MenubarPrimitive.Portal>\n  )\n)\nMenubarContent.displayName = MenubarPrimitive.Content.displayName\n\nconst MenubarItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarItem.displayName = MenubarPrimitive.Item.displayName\n\nconst MenubarCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <MenubarPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.CheckboxItem>\n))\nMenubarCheckboxItem.displayName = MenubarPrimitive.CheckboxItem.displayName\n\nconst MenubarRadioItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <MenubarPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.RadioItem>\n))\nMenubarRadioItem.displayName = MenubarPrimitive.RadioItem.displayName\n\nconst MenubarLabel = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarLabel.displayName = MenubarPrimitive.Label.displayName\n\nconst MenubarSeparator = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nMenubarSeparator.displayName = MenubarPrimitive.Separator.displayName\n\nconst MenubarShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nMenubarShortcut.displayname = \"MenubarShortcut\"\n\nexport {\n  Menubar,\n  MenubarMenu,\n  MenubarTrigger,\n  MenubarContent,\n  MenubarItem,\n  MenubarSeparator,\n  MenubarLabel,\n  MenubarCheckboxItem,\n  MenubarRadioGroup,\n  MenubarRadioItem,\n  MenubarPortal,\n  MenubarSubContent,\n  MenubarSubTrigger,\n  MenubarGroup,\n  MenubarSub,\n  MenubarShortcut,\n}\n","size_bytes":8605},"client/src/components/ui/navigation-menu.tsx":{"content":"import * as React from \"react\"\nimport * as NavigationMenuPrimitive from \"@radix-ui/react-navigation-menu\"\nimport { cva } from \"class-variance-authority\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst NavigationMenu = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative z-10 flex max-w-max flex-1 items-center justify-center\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <NavigationMenuViewport />\n  </NavigationMenuPrimitive.Root>\n))\nNavigationMenu.displayName = NavigationMenuPrimitive.Root.displayName\n\nconst NavigationMenuList = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.List\n    ref={ref}\n    className={cn(\n      \"group flex flex-1 list-none items-center justify-center space-x-1\",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuList.displayName = NavigationMenuPrimitive.List.displayName\n\nconst NavigationMenuItem = NavigationMenuPrimitive.Item\n\nconst navigationMenuTriggerStyle = cva(\n  \"group inline-flex h-10 w-max items-center justify-center rounded-md bg-background px-4 py-2 text-sm font-medium transition-colors hover:bg-accent hover:text-accent-foreground focus:bg-accent focus:text-accent-foreground focus:outline-none disabled:pointer-events-none disabled:opacity-50 data-[state=open]:text-accent-foreground data-[state=open]:bg-accent/50 data-[state=open]:hover:bg-accent data-[state=open]:focus:bg-accent\"\n)\n\nconst NavigationMenuTrigger = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Trigger\n    ref={ref}\n    className={cn(navigationMenuTriggerStyle(), \"group\", className)}\n    {...props}\n  >\n    {children}{\" \"}\n    <ChevronDown\n      className=\"relative top-[1px] ml-1 h-3 w-3 transition duration-200 group-data-[state=open]:rotate-180\"\n      aria-hidden=\"true\"\n    />\n  </NavigationMenuPrimitive.Trigger>\n))\nNavigationMenuTrigger.displayName = NavigationMenuPrimitive.Trigger.displayName\n\nconst NavigationMenuContent = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"left-0 top-0 w-full data-[motion^=from-]:animate-in data-[motion^=to-]:animate-out data-[motion^=from-]:fade-in data-[motion^=to-]:fade-out data-[motion=from-end]:slide-in-from-right-52 data-[motion=from-start]:slide-in-from-left-52 data-[motion=to-end]:slide-out-to-right-52 data-[motion=to-start]:slide-out-to-left-52 md:absolute md:w-auto \",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuContent.displayName = NavigationMenuPrimitive.Content.displayName\n\nconst NavigationMenuLink = NavigationMenuPrimitive.Link\n\nconst NavigationMenuViewport = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Viewport>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Viewport>\n>(({ className, ...props }, ref) => (\n  <div className={cn(\"absolute left-0 top-full flex justify-center\")}>\n    <NavigationMenuPrimitive.Viewport\n      className={cn(\n        \"origin-top-center relative mt-1.5 h-[var(--radix-navigation-menu-viewport-height)] w-full overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-90 md:w-[var(--radix-navigation-menu-viewport-width)]\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  </div>\n))\nNavigationMenuViewport.displayName =\n  NavigationMenuPrimitive.Viewport.displayName\n\nconst NavigationMenuIndicator = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Indicator>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Indicator>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Indicator\n    ref={ref}\n    className={cn(\n      \"top-full z-[1] flex h-1.5 items-end justify-center overflow-hidden data-[state=visible]:animate-in data-[state=hidden]:animate-out data-[state=hidden]:fade-out data-[state=visible]:fade-in\",\n      className\n    )}\n    {...props}\n  >\n    <div className=\"relative top-[60%] h-2 w-2 rotate-45 rounded-tl-sm bg-border shadow-md\" />\n  </NavigationMenuPrimitive.Indicator>\n))\nNavigationMenuIndicator.displayName =\n  NavigationMenuPrimitive.Indicator.displayName\n\nexport {\n  navigationMenuTriggerStyle,\n  NavigationMenu,\n  NavigationMenuList,\n  NavigationMenuItem,\n  NavigationMenuContent,\n  NavigationMenuTrigger,\n  NavigationMenuLink,\n  NavigationMenuIndicator,\n  NavigationMenuViewport,\n}\n","size_bytes":5128},"client/src/components/ui/pagination.tsx":{"content":"import * as React from \"react\"\nimport { ChevronLeft, ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { ButtonProps, buttonVariants } from \"@/components/ui/button\"\n\nconst Pagination = ({ className, ...props }: React.ComponentProps<\"nav\">) => (\n  <nav\n    role=\"navigation\"\n    aria-label=\"pagination\"\n    className={cn(\"mx-auto flex w-full justify-center\", className)}\n    {...props}\n  />\n)\nPagination.displayName = \"Pagination\"\n\nconst PaginationContent = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    className={cn(\"flex flex-row items-center gap-1\", className)}\n    {...props}\n  />\n))\nPaginationContent.displayName = \"PaginationContent\"\n\nconst PaginationItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li ref={ref} className={cn(\"\", className)} {...props} />\n))\nPaginationItem.displayName = \"PaginationItem\"\n\ntype PaginationLinkProps = {\n  isActive?: boolean\n} & Pick<ButtonProps, \"size\"> &\n  React.ComponentProps<\"a\">\n\nconst PaginationLink = ({\n  className,\n  isActive,\n  size = \"icon\",\n  ...props\n}: PaginationLinkProps) => (\n  <a\n    aria-current={isActive ? \"page\" : undefined}\n    className={cn(\n      buttonVariants({\n        variant: isActive ? \"outline\" : \"ghost\",\n        size,\n      }),\n      className\n    )}\n    {...props}\n  />\n)\nPaginationLink.displayName = \"PaginationLink\"\n\nconst PaginationPrevious = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to previous page\"\n    size=\"default\"\n    className={cn(\"gap-1 pl-2.5\", className)}\n    {...props}\n  >\n    <ChevronLeft className=\"h-4 w-4\" />\n    <span>Previous</span>\n  </PaginationLink>\n)\nPaginationPrevious.displayName = \"PaginationPrevious\"\n\nconst PaginationNext = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to next page\"\n    size=\"default\"\n    className={cn(\"gap-1 pr-2.5\", className)}\n    {...props}\n  >\n    <span>Next</span>\n    <ChevronRight className=\"h-4 w-4\" />\n  </PaginationLink>\n)\nPaginationNext.displayName = \"PaginationNext\"\n\nconst PaginationEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    aria-hidden\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More pages</span>\n  </span>\n)\nPaginationEllipsis.displayName = \"PaginationEllipsis\"\n\nexport {\n  Pagination,\n  PaginationContent,\n  PaginationEllipsis,\n  PaginationItem,\n  PaginationLink,\n  PaginationNext,\n  PaginationPrevious,\n}\n","size_bytes":2751},"client/src/components/ui/popover.tsx":{"content":"import * as React from \"react\"\nimport * as PopoverPrimitive from \"@radix-ui/react-popover\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Popover = PopoverPrimitive.Root\n\nconst PopoverTrigger = PopoverPrimitive.Trigger\n\nconst PopoverContent = React.forwardRef<\n  React.ElementRef<typeof PopoverPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <PopoverPrimitive.Portal>\n    <PopoverPrimitive.Content\n      ref={ref}\n      align={align}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 w-72 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-popover-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </PopoverPrimitive.Portal>\n))\nPopoverContent.displayName = PopoverPrimitive.Content.displayName\n\nexport { Popover, PopoverTrigger, PopoverContent }\n","size_bytes":1280},"client/src/components/ui/progress.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Progress = React.forwardRef<\n  React.ElementRef<typeof ProgressPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ProgressPrimitive.Root>\n>(({ className, value, ...props }, ref) => (\n  <ProgressPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative h-4 w-full overflow-hidden rounded-full bg-secondary\",\n      className\n    )}\n    {...props}\n  >\n    <ProgressPrimitive.Indicator\n      className=\"h-full w-full flex-1 bg-primary transition-all\"\n      style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n    />\n  </ProgressPrimitive.Root>\n))\nProgress.displayName = ProgressPrimitive.Root.displayName\n\nexport { Progress }\n","size_bytes":791},"client/src/components/ui/radio-group.tsx":{"content":"import * as React from \"react\"\nimport * as RadioGroupPrimitive from \"@radix-ui/react-radio-group\"\nimport { Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst RadioGroup = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Root\n      className={cn(\"grid gap-2\", className)}\n      {...props}\n      ref={ref}\n    />\n  )\n})\nRadioGroup.displayName = RadioGroupPrimitive.Root.displayName\n\nconst RadioGroupItem = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Item>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        \"aspect-square h-4 w-4 rounded-full border border-primary text-primary ring-offset-background focus:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    >\n      <RadioGroupPrimitive.Indicator className=\"flex items-center justify-center\">\n        <Circle className=\"h-2.5 w-2.5 fill-current text-current\" />\n      </RadioGroupPrimitive.Indicator>\n    </RadioGroupPrimitive.Item>\n  )\n})\nRadioGroupItem.displayName = RadioGroupPrimitive.Item.displayName\n\nexport { RadioGroup, RadioGroupItem }\n","size_bytes":1467},"client/src/components/ui/resizable.tsx":{"content":"\"use client\"\n\nimport { GripVertical } from \"lucide-react\"\nimport * as ResizablePrimitive from \"react-resizable-panels\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ResizablePanelGroup = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelGroup>) => (\n  <ResizablePrimitive.PanelGroup\n    className={cn(\n      \"flex h-full w-full data-[panel-group-direction=vertical]:flex-col\",\n      className\n    )}\n    {...props}\n  />\n)\n\nconst ResizablePanel = ResizablePrimitive.Panel\n\nconst ResizableHandle = ({\n  withHandle,\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelResizeHandle> & {\n  withHandle?: boolean\n}) => (\n  <ResizablePrimitive.PanelResizeHandle\n    className={cn(\n      \"relative flex w-px items-center justify-center bg-border after:absolute after:inset-y-0 after:left-1/2 after:w-1 after:-translate-x-1/2 focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring focus-visible:ring-offset-1 data-[panel-group-direction=vertical]:h-px data-[panel-group-direction=vertical]:w-full data-[panel-group-direction=vertical]:after:left-0 data-[panel-group-direction=vertical]:after:h-1 data-[panel-group-direction=vertical]:after:w-full data-[panel-group-direction=vertical]:after:-translate-y-1/2 data-[panel-group-direction=vertical]:after:translate-x-0 [&[data-panel-group-direction=vertical]>div]:rotate-90\",\n      className\n    )}\n    {...props}\n  >\n    {withHandle && (\n      <div className=\"z-10 flex h-4 w-3 items-center justify-center rounded-sm border bg-border\">\n        <GripVertical className=\"h-2.5 w-2.5\" />\n      </div>\n    )}\n  </ResizablePrimitive.PanelResizeHandle>\n)\n\nexport { ResizablePanelGroup, ResizablePanel, ResizableHandle }\n","size_bytes":1723},"client/src/components/ui/scroll-area.tsx":{"content":"import * as React from \"react\"\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ScrollArea = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <ScrollAreaPrimitive.Root\n    ref={ref}\n    className={cn(\"relative overflow-hidden\", className)}\n    {...props}\n  >\n    <ScrollAreaPrimitive.Viewport className=\"h-full w-full rounded-[inherit]\">\n      {children}\n    </ScrollAreaPrimitive.Viewport>\n    <ScrollBar />\n    <ScrollAreaPrimitive.Corner />\n  </ScrollAreaPrimitive.Root>\n))\nScrollArea.displayName = ScrollAreaPrimitive.Root.displayName\n\nconst ScrollBar = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>\n>(({ className, orientation = \"vertical\", ...props }, ref) => (\n  <ScrollAreaPrimitive.ScrollAreaScrollbar\n    ref={ref}\n    orientation={orientation}\n    className={cn(\n      \"flex touch-none select-none transition-colors\",\n      orientation === \"vertical\" &&\n        \"h-full w-2.5 border-l border-l-transparent p-[1px]\",\n      orientation === \"horizontal\" &&\n        \"h-2.5 flex-col border-t border-t-transparent p-[1px]\",\n      className\n    )}\n    {...props}\n  >\n    <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" />\n  </ScrollAreaPrimitive.ScrollAreaScrollbar>\n))\nScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName\n\nexport { ScrollArea, ScrollBar }\n","size_bytes":1642},"client/src/components/ui/select.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background data-[placeholder]:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-[--radix-select-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-select-content-transform-origin]\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n","size_bytes":5742},"client/src/components/ui/separator.tsx":{"content":"import * as React from \"react\"\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Separator = React.forwardRef<\n  React.ElementRef<typeof SeparatorPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SeparatorPrimitive.Root>\n>(\n  (\n    { className, orientation = \"horizontal\", decorative = true, ...props },\n    ref\n  ) => (\n    <SeparatorPrimitive.Root\n      ref={ref}\n      decorative={decorative}\n      orientation={orientation}\n      className={cn(\n        \"shrink-0 bg-border\",\n        orientation === \"horizontal\" ? \"h-[1px] w-full\" : \"h-full w-[1px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n)\nSeparator.displayName = SeparatorPrimitive.Root.displayName\n\nexport { Separator }\n","size_bytes":756},"client/src/components/ui/sheet.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as SheetPrimitive from \"@radix-ui/react-dialog\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Sheet = SheetPrimitive.Root\n\nconst SheetTrigger = SheetPrimitive.Trigger\n\nconst SheetClose = SheetPrimitive.Close\n\nconst SheetPortal = SheetPrimitive.Portal\n\nconst SheetOverlay = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nSheetOverlay.displayName = SheetPrimitive.Overlay.displayName\n\nconst sheetVariants = cva(\n  \"fixed z-50 gap-4 bg-background p-6 shadow-lg transition ease-in-out data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:duration-300 data-[state=open]:duration-500\",\n  {\n    variants: {\n      side: {\n        top: \"inset-x-0 top-0 border-b data-[state=closed]:slide-out-to-top data-[state=open]:slide-in-from-top\",\n        bottom:\n          \"inset-x-0 bottom-0 border-t data-[state=closed]:slide-out-to-bottom data-[state=open]:slide-in-from-bottom\",\n        left: \"inset-y-0 left-0 h-full w-3/4 border-r data-[state=closed]:slide-out-to-left data-[state=open]:slide-in-from-left sm:max-w-sm\",\n        right:\n          \"inset-y-0 right-0 h-full w-3/4  border-l data-[state=closed]:slide-out-to-right data-[state=open]:slide-in-from-right sm:max-w-sm\",\n      },\n    },\n    defaultVariants: {\n      side: \"right\",\n    },\n  }\n)\n\ninterface SheetContentProps\n  extends React.ComponentPropsWithoutRef<typeof SheetPrimitive.Content>,\n    VariantProps<typeof sheetVariants> {}\n\nconst SheetContent = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Content>,\n  SheetContentProps\n>(({ side = \"right\", className, children, ...props }, ref) => (\n  <SheetPortal>\n    <SheetOverlay />\n    <SheetPrimitive.Content\n      ref={ref}\n      className={cn(sheetVariants({ side }), className)}\n      {...props}\n    >\n      {children}\n      <SheetPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-secondary\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </SheetPrimitive.Close>\n    </SheetPrimitive.Content>\n  </SheetPortal>\n))\nSheetContent.displayName = SheetPrimitive.Content.displayName\n\nconst SheetHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetHeader.displayName = \"SheetHeader\"\n\nconst SheetFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetFooter.displayName = \"SheetFooter\"\n\nconst SheetTitle = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold text-foreground\", className)}\n    {...props}\n  />\n))\nSheetTitle.displayName = SheetPrimitive.Title.displayName\n\nconst SheetDescription = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nSheetDescription.displayName = SheetPrimitive.Description.displayName\n\nexport {\n  Sheet,\n  SheetPortal,\n  SheetOverlay,\n  SheetTrigger,\n  SheetClose,\n  SheetContent,\n  SheetHeader,\n  SheetFooter,\n  SheetTitle,\n  SheetDescription,\n}\n","size_bytes":4281},"client/src/components/ui/sidebar.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { VariantProps, cva } from \"class-variance-authority\"\nimport { PanelLeft } from \"lucide-react\"\n\nimport { useIsMobile } from \"@/hooks/use-mobile\"\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\nimport { Input } from \"@/components/ui/input\"\nimport { Separator } from \"@/components/ui/separator\"\nimport {\n  Sheet,\n  SheetContent,\n  SheetDescription,\n  SheetHeader,\n  SheetTitle,\n} from \"@/components/ui/sheet\"\nimport { Skeleton } from \"@/components/ui/skeleton\"\nimport {\n  Tooltip,\n  TooltipContent,\n  TooltipProvider,\n  TooltipTrigger,\n} from \"@/components/ui/tooltip\"\n\nconst SIDEBAR_COOKIE_NAME = \"sidebar_state\"\nconst SIDEBAR_COOKIE_MAX_AGE = 60 * 60 * 24 * 7\nconst SIDEBAR_WIDTH = \"16rem\"\nconst SIDEBAR_WIDTH_MOBILE = \"18rem\"\nconst SIDEBAR_WIDTH_ICON = \"3rem\"\nconst SIDEBAR_KEYBOARD_SHORTCUT = \"b\"\n\ntype SidebarContextProps = {\n  state: \"expanded\" | \"collapsed\"\n  open: boolean\n  setOpen: (open: boolean) => void\n  openMobile: boolean\n  setOpenMobile: (open: boolean) => void\n  isMobile: boolean\n  toggleSidebar: () => void\n}\n\nconst SidebarContext = React.createContext<SidebarContextProps | null>(null)\n\nfunction useSidebar() {\n  const context = React.useContext(SidebarContext)\n  if (!context) {\n    throw new Error(\"useSidebar must be used within a SidebarProvider.\")\n  }\n\n  return context\n}\n\nconst SidebarProvider = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    defaultOpen?: boolean\n    open?: boolean\n    onOpenChange?: (open: boolean) => void\n  }\n>(\n  (\n    {\n      defaultOpen = true,\n      open: openProp,\n      onOpenChange: setOpenProp,\n      className,\n      style,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const isMobile = useIsMobile()\n    const [openMobile, setOpenMobile] = React.useState(false)\n\n    // This is the internal state of the sidebar.\n    // We use openProp and setOpenProp for control from outside the component.\n    const [_open, _setOpen] = React.useState(defaultOpen)\n    const open = openProp ?? _open\n    const setOpen = React.useCallback(\n      (value: boolean | ((value: boolean) => boolean)) => {\n        const openState = typeof value === \"function\" ? value(open) : value\n        if (setOpenProp) {\n          setOpenProp(openState)\n        } else {\n          _setOpen(openState)\n        }\n\n        // This sets the cookie to keep the sidebar state.\n        document.cookie = `${SIDEBAR_COOKIE_NAME}=${openState}; path=/; max-age=${SIDEBAR_COOKIE_MAX_AGE}`\n      },\n      [setOpenProp, open]\n    )\n\n    // Helper to toggle the sidebar.\n    const toggleSidebar = React.useCallback(() => {\n      return isMobile\n        ? setOpenMobile((open) => !open)\n        : setOpen((open) => !open)\n    }, [isMobile, setOpen, setOpenMobile])\n\n    // Adds a keyboard shortcut to toggle the sidebar.\n    React.useEffect(() => {\n      const handleKeyDown = (event: KeyboardEvent) => {\n        if (\n          event.key === SIDEBAR_KEYBOARD_SHORTCUT &&\n          (event.metaKey || event.ctrlKey)\n        ) {\n          event.preventDefault()\n          toggleSidebar()\n        }\n      }\n\n      window.addEventListener(\"keydown\", handleKeyDown)\n      return () => window.removeEventListener(\"keydown\", handleKeyDown)\n    }, [toggleSidebar])\n\n    // We add a state so that we can do data-state=\"expanded\" or \"collapsed\".\n    // This makes it easier to style the sidebar with Tailwind classes.\n    const state = open ? \"expanded\" : \"collapsed\"\n\n    const contextValue = React.useMemo<SidebarContextProps>(\n      () => ({\n        state,\n        open,\n        setOpen,\n        isMobile,\n        openMobile,\n        setOpenMobile,\n        toggleSidebar,\n      }),\n      [state, open, setOpen, isMobile, openMobile, setOpenMobile, toggleSidebar]\n    )\n\n    return (\n      <SidebarContext.Provider value={contextValue}>\n        <TooltipProvider delayDuration={0}>\n          <div\n            style={\n              {\n                \"--sidebar-width\": SIDEBAR_WIDTH,\n                \"--sidebar-width-icon\": SIDEBAR_WIDTH_ICON,\n                ...style,\n              } as React.CSSProperties\n            }\n            className={cn(\n              \"group/sidebar-wrapper flex min-h-svh w-full has-[[data-variant=inset]]:bg-sidebar\",\n              className\n            )}\n            ref={ref}\n            {...props}\n          >\n            {children}\n          </div>\n        </TooltipProvider>\n      </SidebarContext.Provider>\n    )\n  }\n)\nSidebarProvider.displayName = \"SidebarProvider\"\n\nconst Sidebar = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    side?: \"left\" | \"right\"\n    variant?: \"sidebar\" | \"floating\" | \"inset\"\n    collapsible?: \"offcanvas\" | \"icon\" | \"none\"\n  }\n>(\n  (\n    {\n      side = \"left\",\n      variant = \"sidebar\",\n      collapsible = \"offcanvas\",\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const { isMobile, state, openMobile, setOpenMobile } = useSidebar()\n\n    if (collapsible === \"none\") {\n      return (\n        <div\n          className={cn(\n            \"flex h-full w-[--sidebar-width] flex-col bg-sidebar text-sidebar-foreground\",\n            className\n          )}\n          ref={ref}\n          {...props}\n        >\n          {children}\n        </div>\n      )\n    }\n\n    if (isMobile) {\n      return (\n        <Sheet open={openMobile} onOpenChange={setOpenMobile} {...props}>\n          <SheetContent\n            data-sidebar=\"sidebar\"\n            data-mobile=\"true\"\n            className=\"w-[--sidebar-width] bg-sidebar p-0 text-sidebar-foreground [&>button]:hidden\"\n            style={\n              {\n                \"--sidebar-width\": SIDEBAR_WIDTH_MOBILE,\n              } as React.CSSProperties\n            }\n            side={side}\n          >\n            <SheetHeader className=\"sr-only\">\n              <SheetTitle>Sidebar</SheetTitle>\n              <SheetDescription>Displays the mobile sidebar.</SheetDescription>\n            </SheetHeader>\n            <div className=\"flex h-full w-full flex-col\">{children}</div>\n          </SheetContent>\n        </Sheet>\n      )\n    }\n\n    return (\n      <div\n        ref={ref}\n        className=\"group peer hidden text-sidebar-foreground md:block\"\n        data-state={state}\n        data-collapsible={state === \"collapsed\" ? collapsible : \"\"}\n        data-variant={variant}\n        data-side={side}\n      >\n        {/* This is what handles the sidebar gap on desktop */}\n        <div\n          className={cn(\n            \"relative w-[--sidebar-width] bg-transparent transition-[width] duration-200 ease-linear\",\n            \"group-data-[collapsible=offcanvas]:w-0\",\n            \"group-data-[side=right]:rotate-180\",\n            variant === \"floating\" || variant === \"inset\"\n              ? \"group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4))]\"\n              : \"group-data-[collapsible=icon]:w-[--sidebar-width-icon]\"\n          )}\n        />\n        <div\n          className={cn(\n            \"fixed inset-y-0 z-10 hidden h-svh w-[--sidebar-width] transition-[left,right,width] duration-200 ease-linear md:flex\",\n            side === \"left\"\n              ? \"left-0 group-data-[collapsible=offcanvas]:left-[calc(var(--sidebar-width)*-1)]\"\n              : \"right-0 group-data-[collapsible=offcanvas]:right-[calc(var(--sidebar-width)*-1)]\",\n            // Adjust the padding for floating and inset variants.\n            variant === \"floating\" || variant === \"inset\"\n              ? \"p-2 group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4)_+2px)]\"\n              : \"group-data-[collapsible=icon]:w-[--sidebar-width-icon] group-data-[side=left]:border-r group-data-[side=right]:border-l\",\n            className\n          )}\n          {...props}\n        >\n          <div\n            data-sidebar=\"sidebar\"\n            className=\"flex h-full w-full flex-col bg-sidebar group-data-[variant=floating]:rounded-lg group-data-[variant=floating]:border group-data-[variant=floating]:border-sidebar-border group-data-[variant=floating]:shadow\"\n          >\n            {children}\n          </div>\n        </div>\n      </div>\n    )\n  }\n)\nSidebar.displayName = \"Sidebar\"\n\nconst SidebarTrigger = React.forwardRef<\n  React.ElementRef<typeof Button>,\n  React.ComponentProps<typeof Button>\n>(({ className, onClick, ...props }, ref) => {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    <Button\n      ref={ref}\n      data-sidebar=\"trigger\"\n      variant=\"ghost\"\n      size=\"icon\"\n      className={cn(\"h-7 w-7\", className)}\n      onClick={(event) => {\n        onClick?.(event)\n        toggleSidebar()\n      }}\n      {...props}\n    >\n      <PanelLeft />\n      <span className=\"sr-only\">Toggle Sidebar</span>\n    </Button>\n  )\n})\nSidebarTrigger.displayName = \"SidebarTrigger\"\n\nconst SidebarRail = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\">\n>(({ className, ...props }, ref) => {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    <button\n      ref={ref}\n      data-sidebar=\"rail\"\n      aria-label=\"Toggle Sidebar\"\n      tabIndex={-1}\n      onClick={toggleSidebar}\n      title=\"Toggle Sidebar\"\n      className={cn(\n        \"absolute inset-y-0 z-20 hidden w-4 -translate-x-1/2 transition-all ease-linear after:absolute after:inset-y-0 after:left-1/2 after:w-[2px] hover:after:bg-sidebar-border group-data-[side=left]:-right-4 group-data-[side=right]:left-0 sm:flex\",\n        \"[[data-side=left]_&]:cursor-w-resize [[data-side=right]_&]:cursor-e-resize\",\n        \"[[data-side=left][data-state=collapsed]_&]:cursor-e-resize [[data-side=right][data-state=collapsed]_&]:cursor-w-resize\",\n        \"group-data-[collapsible=offcanvas]:translate-x-0 group-data-[collapsible=offcanvas]:after:left-full group-data-[collapsible=offcanvas]:hover:bg-sidebar\",\n        \"[[data-side=left][data-collapsible=offcanvas]_&]:-right-2\",\n        \"[[data-side=right][data-collapsible=offcanvas]_&]:-left-2\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarRail.displayName = \"SidebarRail\"\n\nconst SidebarInset = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"main\">\n>(({ className, ...props }, ref) => {\n  return (\n    <main\n      ref={ref}\n      className={cn(\n        \"relative flex w-full flex-1 flex-col bg-background\",\n        \"md:peer-data-[variant=inset]:m-2 md:peer-data-[state=collapsed]:peer-data-[variant=inset]:ml-2 md:peer-data-[variant=inset]:ml-0 md:peer-data-[variant=inset]:rounded-xl md:peer-data-[variant=inset]:shadow\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarInset.displayName = \"SidebarInset\"\n\nconst SidebarInput = React.forwardRef<\n  React.ElementRef<typeof Input>,\n  React.ComponentProps<typeof Input>\n>(({ className, ...props }, ref) => {\n  return (\n    <Input\n      ref={ref}\n      data-sidebar=\"input\"\n      className={cn(\n        \"h-8 w-full bg-background shadow-none focus-visible:ring-2 focus-visible:ring-sidebar-ring\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarInput.displayName = \"SidebarInput\"\n\nconst SidebarHeader = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"header\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarHeader.displayName = \"SidebarHeader\"\n\nconst SidebarFooter = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"footer\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarFooter.displayName = \"SidebarFooter\"\n\nconst SidebarSeparator = React.forwardRef<\n  React.ElementRef<typeof Separator>,\n  React.ComponentProps<typeof Separator>\n>(({ className, ...props }, ref) => {\n  return (\n    <Separator\n      ref={ref}\n      data-sidebar=\"separator\"\n      className={cn(\"mx-2 w-auto bg-sidebar-border\", className)}\n      {...props}\n    />\n  )\n})\nSidebarSeparator.displayName = \"SidebarSeparator\"\n\nconst SidebarContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"content\"\n      className={cn(\n        \"flex min-h-0 flex-1 flex-col gap-2 overflow-auto group-data-[collapsible=icon]:overflow-hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarContent.displayName = \"SidebarContent\"\n\nconst SidebarGroup = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"group\"\n      className={cn(\"relative flex w-full min-w-0 flex-col p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarGroup.displayName = \"SidebarGroup\"\n\nconst SidebarGroupLabel = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & { asChild?: boolean }\n>(({ className, asChild = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"div\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"group-label\"\n      className={cn(\n        \"flex h-8 shrink-0 items-center rounded-md px-2 text-xs font-medium text-sidebar-foreground/70 outline-none ring-sidebar-ring transition-[margin,opacity] duration-200 ease-linear focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        \"group-data-[collapsible=icon]:-mt-8 group-data-[collapsible=icon]:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarGroupLabel.displayName = \"SidebarGroupLabel\"\n\nconst SidebarGroupAction = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & { asChild?: boolean }\n>(({ className, asChild = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"group-action\"\n      className={cn(\n        \"absolute right-3 top-3.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 after:md:hidden\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarGroupAction.displayName = \"SidebarGroupAction\"\n\nconst SidebarGroupContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    data-sidebar=\"group-content\"\n    className={cn(\"w-full text-sm\", className)}\n    {...props}\n  />\n))\nSidebarGroupContent.displayName = \"SidebarGroupContent\"\n\nconst SidebarMenu = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    data-sidebar=\"menu\"\n    className={cn(\"flex w-full min-w-0 flex-col gap-1\", className)}\n    {...props}\n  />\n))\nSidebarMenu.displayName = \"SidebarMenu\"\n\nconst SidebarMenuItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    data-sidebar=\"menu-item\"\n    className={cn(\"group/menu-item relative\", className)}\n    {...props}\n  />\n))\nSidebarMenuItem.displayName = \"SidebarMenuItem\"\n\nconst sidebarMenuButtonVariants = cva(\n  \"peer/menu-button flex w-full items-center gap-2 overflow-hidden rounded-md p-2 text-left text-sm outline-none ring-sidebar-ring transition-[width,height,padding] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 group-has-[[data-sidebar=menu-action]]/menu-item:pr-8 aria-disabled:pointer-events-none aria-disabled:opacity-50 data-[active=true]:bg-sidebar-accent data-[active=true]:font-medium data-[active=true]:text-sidebar-accent-foreground data-[state=open]:hover:bg-sidebar-accent data-[state=open]:hover:text-sidebar-accent-foreground group-data-[collapsible=icon]:!size-8 group-data-[collapsible=icon]:!p-2 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"hover:bg-sidebar-accent hover:text-sidebar-accent-foreground\",\n        outline:\n          \"bg-background shadow-[0_0_0_1px_hsl(var(--sidebar-border))] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground hover:shadow-[0_0_0_1px_hsl(var(--sidebar-accent))]\",\n      },\n      size: {\n        default: \"h-8 text-sm\",\n        sm: \"h-7 text-xs\",\n        lg: \"h-12 text-sm group-data-[collapsible=icon]:!p-0\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst SidebarMenuButton = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & {\n    asChild?: boolean\n    isActive?: boolean\n    tooltip?: string | React.ComponentProps<typeof TooltipContent>\n  } & VariantProps<typeof sidebarMenuButtonVariants>\n>(\n  (\n    {\n      asChild = false,\n      isActive = false,\n      variant = \"default\",\n      size = \"default\",\n      tooltip,\n      className,\n      ...props\n    },\n    ref\n  ) => {\n    const Comp = asChild ? Slot : \"button\"\n    const { isMobile, state } = useSidebar()\n\n    const button = (\n      <Comp\n        ref={ref}\n        data-sidebar=\"menu-button\"\n        data-size={size}\n        data-active={isActive}\n        className={cn(sidebarMenuButtonVariants({ variant, size }), className)}\n        {...props}\n      />\n    )\n\n    if (!tooltip) {\n      return button\n    }\n\n    if (typeof tooltip === \"string\") {\n      tooltip = {\n        children: tooltip,\n      }\n    }\n\n    return (\n      <Tooltip>\n        <TooltipTrigger asChild>{button}</TooltipTrigger>\n        <TooltipContent\n          side=\"right\"\n          align=\"center\"\n          hidden={state !== \"collapsed\" || isMobile}\n          {...tooltip}\n        />\n      </Tooltip>\n    )\n  }\n)\nSidebarMenuButton.displayName = \"SidebarMenuButton\"\n\nconst SidebarMenuAction = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & {\n    asChild?: boolean\n    showOnHover?: boolean\n  }\n>(({ className, asChild = false, showOnHover = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"menu-action\"\n      className={cn(\n        \"absolute right-1 top-1.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 peer-hover/menu-button:text-sidebar-accent-foreground [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 after:md:hidden\",\n        \"peer-data-[size=sm]/menu-button:top-1\",\n        \"peer-data-[size=default]/menu-button:top-1.5\",\n        \"peer-data-[size=lg]/menu-button:top-2.5\",\n        \"group-data-[collapsible=icon]:hidden\",\n        showOnHover &&\n          \"group-focus-within/menu-item:opacity-100 group-hover/menu-item:opacity-100 data-[state=open]:opacity-100 peer-data-[active=true]/menu-button:text-sidebar-accent-foreground md:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarMenuAction.displayName = \"SidebarMenuAction\"\n\nconst SidebarMenuBadge = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    data-sidebar=\"menu-badge\"\n    className={cn(\n      \"pointer-events-none absolute right-1 flex h-5 min-w-5 select-none items-center justify-center rounded-md px-1 text-xs font-medium tabular-nums text-sidebar-foreground\",\n      \"peer-hover/menu-button:text-sidebar-accent-foreground peer-data-[active=true]/menu-button:text-sidebar-accent-foreground\",\n      \"peer-data-[size=sm]/menu-button:top-1\",\n      \"peer-data-[size=default]/menu-button:top-1.5\",\n      \"peer-data-[size=lg]/menu-button:top-2.5\",\n      \"group-data-[collapsible=icon]:hidden\",\n      className\n    )}\n    {...props}\n  />\n))\nSidebarMenuBadge.displayName = \"SidebarMenuBadge\"\n\nconst SidebarMenuSkeleton = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    showIcon?: boolean\n  }\n>(({ className, showIcon = false, ...props }, ref) => {\n  // Random width between 50 to 90%.\n  const width = React.useMemo(() => {\n    return `${Math.floor(Math.random() * 40) + 50}%`\n  }, [])\n\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"menu-skeleton\"\n      className={cn(\"flex h-8 items-center gap-2 rounded-md px-2\", className)}\n      {...props}\n    >\n      {showIcon && (\n        <Skeleton\n          className=\"size-4 rounded-md\"\n          data-sidebar=\"menu-skeleton-icon\"\n        />\n      )}\n      <Skeleton\n        className=\"h-4 max-w-[--skeleton-width] flex-1\"\n        data-sidebar=\"menu-skeleton-text\"\n        style={\n          {\n            \"--skeleton-width\": width,\n          } as React.CSSProperties\n        }\n      />\n    </div>\n  )\n})\nSidebarMenuSkeleton.displayName = \"SidebarMenuSkeleton\"\n\nconst SidebarMenuSub = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    data-sidebar=\"menu-sub\"\n    className={cn(\n      \"mx-3.5 flex min-w-0 translate-x-px flex-col gap-1 border-l border-sidebar-border px-2.5 py-0.5\",\n      \"group-data-[collapsible=icon]:hidden\",\n      className\n    )}\n    {...props}\n  />\n))\nSidebarMenuSub.displayName = \"SidebarMenuSub\"\n\nconst SidebarMenuSubItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ ...props }, ref) => <li ref={ref} {...props} />)\nSidebarMenuSubItem.displayName = \"SidebarMenuSubItem\"\n\nconst SidebarMenuSubButton = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentProps<\"a\"> & {\n    asChild?: boolean\n    size?: \"sm\" | \"md\"\n    isActive?: boolean\n  }\n>(({ asChild = false, size = \"md\", isActive, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"menu-sub-button\"\n      data-size={size}\n      data-active={isActive}\n      className={cn(\n        \"flex h-7 min-w-0 -translate-x-px items-center gap-2 overflow-hidden rounded-md px-2 text-sidebar-foreground outline-none ring-sidebar-ring hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 aria-disabled:pointer-events-none aria-disabled:opacity-50 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0 [&>svg]:text-sidebar-accent-foreground\",\n        \"data-[active=true]:bg-sidebar-accent data-[active=true]:text-sidebar-accent-foreground\",\n        size === \"sm\" && \"text-xs\",\n        size === \"md\" && \"text-sm\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarMenuSubButton.displayName = \"SidebarMenuSubButton\"\n\nexport {\n  Sidebar,\n  SidebarContent,\n  SidebarFooter,\n  SidebarGroup,\n  SidebarGroupAction,\n  SidebarGroupContent,\n  SidebarGroupLabel,\n  SidebarHeader,\n  SidebarInput,\n  SidebarInset,\n  SidebarMenu,\n  SidebarMenuAction,\n  SidebarMenuBadge,\n  SidebarMenuButton,\n  SidebarMenuItem,\n  SidebarMenuSkeleton,\n  SidebarMenuSub,\n  SidebarMenuSubButton,\n  SidebarMenuSubItem,\n  SidebarProvider,\n  SidebarRail,\n  SidebarSeparator,\n  SidebarTrigger,\n  useSidebar,\n}\n","size_bytes":23567},"client/src/components/ui/skeleton.tsx":{"content":"import { cn } from \"@/lib/utils\"\n\nfunction Skeleton({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div\n      className={cn(\"animate-pulse rounded-md bg-muted\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Skeleton }\n","size_bytes":261},"client/src/components/ui/slider.tsx":{"content":"import * as React from \"react\"\nimport * as SliderPrimitive from \"@radix-ui/react-slider\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Slider = React.forwardRef<\n  React.ElementRef<typeof SliderPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SliderPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <SliderPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex w-full touch-none select-none items-center\",\n      className\n    )}\n    {...props}\n  >\n    <SliderPrimitive.Track className=\"relative h-2 w-full grow overflow-hidden rounded-full bg-secondary\">\n      <SliderPrimitive.Range className=\"absolute h-full bg-primary\" />\n    </SliderPrimitive.Track>\n    <SliderPrimitive.Thumb className=\"block h-5 w-5 rounded-full border-2 border-primary bg-background ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\" />\n  </SliderPrimitive.Root>\n))\nSlider.displayName = SliderPrimitive.Root.displayName\n\nexport { Slider }\n","size_bytes":1077},"client/src/components/ui/switch.tsx":{"content":"import * as React from \"react\"\nimport * as SwitchPrimitives from \"@radix-ui/react-switch\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Switch = React.forwardRef<\n  React.ElementRef<typeof SwitchPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof SwitchPrimitives.Root>\n>(({ className, ...props }, ref) => (\n  <SwitchPrimitives.Root\n    className={cn(\n      \"peer inline-flex h-6 w-11 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=unchecked]:bg-input\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  >\n    <SwitchPrimitives.Thumb\n      className={cn(\n        \"pointer-events-none block h-5 w-5 rounded-full bg-background shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-5 data-[state=unchecked]:translate-x-0\"\n      )}\n    />\n  </SwitchPrimitives.Root>\n))\nSwitch.displayName = SwitchPrimitives.Root.displayName\n\nexport { Switch }\n","size_bytes":1139},"client/src/components/ui/table.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n","size_bytes":2765},"client/src/components/ui/tabs.tsx":{"content":"import * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Tabs = TabsPrimitive.Root\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsList.displayName = TabsPrimitive.List.displayName\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsContent.displayName = TabsPrimitive.Content.displayName\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n","size_bytes":1883},"client/src/components/ui/textarea.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Textarea = React.forwardRef<\n  HTMLTextAreaElement,\n  React.ComponentProps<\"textarea\">\n>(({ className, ...props }, ref) => {\n  return (\n    <textarea\n      className={cn(\n        \"flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  )\n})\nTextarea.displayName = \"Textarea\"\n\nexport { Textarea }\n","size_bytes":689},"client/src/components/ui/toast.tsx":{"content":"import * as React from \"react\"\nimport * as ToastPrimitives from \"@radix-ui/react-toast\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ToastProvider = ToastPrimitives.Provider\n\nconst ToastViewport = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Viewport>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Viewport>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Viewport\n    ref={ref}\n    className={cn(\n      \"fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]\",\n      className\n    )}\n    {...props}\n  />\n))\nToastViewport.displayName = ToastPrimitives.Viewport.displayName\n\nconst toastVariants = cva(\n  \"group pointer-events-auto relative flex w-full items-center justify-between space-x-4 overflow-hidden rounded-md border p-6 pr-8 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full\",\n  {\n    variants: {\n      variant: {\n        default: \"border bg-background text-foreground\",\n        destructive:\n          \"destructive group border-destructive bg-destructive text-destructive-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Toast = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Root> &\n    VariantProps<typeof toastVariants>\n>(({ className, variant, ...props }, ref) => {\n  return (\n    <ToastPrimitives.Root\n      ref={ref}\n      className={cn(toastVariants({ variant }), className)}\n      {...props}\n    />\n  )\n})\nToast.displayName = ToastPrimitives.Root.displayName\n\nconst ToastAction = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Action>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Action>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Action\n    ref={ref}\n    className={cn(\n      \"inline-flex h-8 shrink-0 items-center justify-center rounded-md border bg-transparent px-3 text-sm font-medium ring-offset-background transition-colors hover:bg-secondary focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 group-[.destructive]:border-muted/40 group-[.destructive]:hover:border-destructive/30 group-[.destructive]:hover:bg-destructive group-[.destructive]:hover:text-destructive-foreground group-[.destructive]:focus:ring-destructive\",\n      className\n    )}\n    {...props}\n  />\n))\nToastAction.displayName = ToastPrimitives.Action.displayName\n\nconst ToastClose = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Close>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Close>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Close\n    ref={ref}\n    className={cn(\n      \"absolute right-2 top-2 rounded-md p-1 text-foreground/50 opacity-0 transition-opacity hover:text-foreground focus:opacity-100 focus:outline-none focus:ring-2 group-hover:opacity-100 group-[.destructive]:text-red-300 group-[.destructive]:hover:text-red-50 group-[.destructive]:focus:ring-red-400 group-[.destructive]:focus:ring-offset-red-600\",\n      className\n    )}\n    toast-close=\"\"\n    {...props}\n  >\n    <X className=\"h-4 w-4\" />\n  </ToastPrimitives.Close>\n))\nToastClose.displayName = ToastPrimitives.Close.displayName\n\nconst ToastTitle = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Title>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Title>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Title\n    ref={ref}\n    className={cn(\"text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nToastTitle.displayName = ToastPrimitives.Title.displayName\n\nconst ToastDescription = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Description>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Description>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Description\n    ref={ref}\n    className={cn(\"text-sm opacity-90\", className)}\n    {...props}\n  />\n))\nToastDescription.displayName = ToastPrimitives.Description.displayName\n\ntype ToastProps = React.ComponentPropsWithoutRef<typeof Toast>\n\ntype ToastActionElement = React.ReactElement<typeof ToastAction>\n\nexport {\n  type ToastProps,\n  type ToastActionElement,\n  ToastProvider,\n  ToastViewport,\n  Toast,\n  ToastTitle,\n  ToastDescription,\n  ToastClose,\n  ToastAction,\n}\n","size_bytes":4845},"client/src/components/ui/toaster.tsx":{"content":"import { useToast } from \"@/hooks/use-toast\"\nimport {\n  Toast,\n  ToastClose,\n  ToastDescription,\n  ToastProvider,\n  ToastTitle,\n  ToastViewport,\n} from \"@/components/ui/toast\"\n\nexport function Toaster() {\n  const { toasts } = useToast()\n\n  return (\n    <ToastProvider>\n      {toasts.map(function ({ id, title, description, action, ...props }) {\n        return (\n          <Toast key={id} {...props}>\n            <div className=\"grid gap-1\">\n              {title && <ToastTitle>{title}</ToastTitle>}\n              {description && (\n                <ToastDescription>{description}</ToastDescription>\n              )}\n            </div>\n            {action}\n            <ToastClose />\n          </Toast>\n        )\n      })}\n      <ToastViewport />\n    </ToastProvider>\n  )\n}\n","size_bytes":772},"client/src/components/ui/toggle-group.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as ToggleGroupPrimitive from \"@radix-ui/react-toggle-group\"\nimport { type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\nimport { toggleVariants } from \"@/components/ui/toggle\"\n\nconst ToggleGroupContext = React.createContext<\n  VariantProps<typeof toggleVariants>\n>({\n  size: \"default\",\n  variant: \"default\",\n})\n\nconst ToggleGroup = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, children, ...props }, ref) => (\n  <ToggleGroupPrimitive.Root\n    ref={ref}\n    className={cn(\"flex items-center justify-center gap-1\", className)}\n    {...props}\n  >\n    <ToggleGroupContext.Provider value={{ variant, size }}>\n      {children}\n    </ToggleGroupContext.Provider>\n  </ToggleGroupPrimitive.Root>\n))\n\nToggleGroup.displayName = ToggleGroupPrimitive.Root.displayName\n\nconst ToggleGroupItem = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Item> &\n    VariantProps<typeof toggleVariants>\n>(({ className, children, variant, size, ...props }, ref) => {\n  const context = React.useContext(ToggleGroupContext)\n\n  return (\n    <ToggleGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        toggleVariants({\n          variant: context.variant || variant,\n          size: context.size || size,\n        }),\n        className\n      )}\n      {...props}\n    >\n      {children}\n    </ToggleGroupPrimitive.Item>\n  )\n})\n\nToggleGroupItem.displayName = ToggleGroupPrimitive.Item.displayName\n\nexport { ToggleGroup, ToggleGroupItem }\n","size_bytes":1753},"client/src/components/ui/toggle.tsx":{"content":"import * as React from \"react\"\nimport * as TogglePrimitive from \"@radix-ui/react-toggle\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst toggleVariants = cva(\n  \"inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors hover:bg-muted hover:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=on]:bg-accent data-[state=on]:text-accent-foreground [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 gap-2\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-transparent\",\n        outline:\n          \"border border-input bg-transparent hover:bg-accent hover:text-accent-foreground\",\n      },\n      size: {\n        default: \"h-10 px-3 min-w-10\",\n        sm: \"h-9 px-2.5 min-w-9\",\n        lg: \"h-11 px-5 min-w-11\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst Toggle = React.forwardRef<\n  React.ElementRef<typeof TogglePrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof TogglePrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, ...props }, ref) => (\n  <TogglePrimitive.Root\n    ref={ref}\n    className={cn(toggleVariants({ variant, size, className }))}\n    {...props}\n  />\n))\n\nToggle.displayName = TogglePrimitive.Root.displayName\n\nexport { Toggle, toggleVariants }\n","size_bytes":1527},"client/src/components/ui/tooltip.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as TooltipPrimitive from \"@radix-ui/react-tooltip\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst TooltipProvider = TooltipPrimitive.Provider\n\nconst Tooltip = TooltipPrimitive.Root\n\nconst TooltipTrigger = TooltipPrimitive.Trigger\n\nconst TooltipContent = React.forwardRef<\n  React.ElementRef<typeof TooltipPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TooltipPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <TooltipPrimitive.Content\n    ref={ref}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 overflow-hidden rounded-md border bg-popover px-3 py-1.5 text-sm text-popover-foreground shadow-md animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-tooltip-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nTooltipContent.displayName = TooltipPrimitive.Content.displayName\n\nexport { Tooltip, TooltipTrigger, TooltipContent, TooltipProvider }\n","size_bytes":1209},"client/src/pages/services/AppDevelopment.tsx":{"content":"import Header from \"@/components/layout/Header\";\nimport Footer from \"@/components/layout/Footer\";\nimport { GlassCard } from \"@/components/ui/glass-card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Link } from \"wouter\";\nimport { Smartphone, CheckCircle, Globe, Monitor, Wifi, Lightbulb, Pencil, Code, TestTube, Rocket, ChevronDown } from \"lucide-react\";\nimport { useState } from \"react\";\n\nconst AppDevelopment = () => {\n  const [openFaq, setOpenFaq] = useState<number | null>(null);\n  \n  const faqs = [\n    {\n      q: \"Do you develop both mobile and web applications?\",\n      a: \"Yes, we develop all types of applications including native iOS/Android apps, cross-platform mobile apps (React Native, Flutter), responsive web applications, and desktop applications. We recommend the best platform based on your specific needs.\"\n    },\n    {\n      q: \"Can the app connect to IoT devices and hardware?\",\n      a: \"Absolutely! We specialize in building applications that connect to IoT devices, embedded systems, and hardware. We implement real-time communication protocols including Bluetooth, WiFi, MQTT, and RESTful APIs for device control and monitoring.\"\n    },\n    {\n      q: \"What about offline functionality?\",\n      a: \"We build apps with robust offline capabilities including local data storage, background synchronization, and queue-based operations. This ensures your app works seamlessly even without internet connectivity.\"\n    },\n    {\n      q: \"How do you handle app security and data privacy?\",\n      a: \"Security is built into every layer of our apps. We implement secure authentication, encrypted data transmission, secure local storage, and follow platform-specific security best practices. We also ensure GDPR and data privacy compliance.\"\n    },\n    {\n      q: \"Do you provide app maintenance and updates?\",\n      a: \"Yes, we offer comprehensive maintenance packages including bug fixes, performance optimization, OS updates compatibility, new feature development, and regular security updates to keep your app running smoothly.\"\n    }\n  ];\n  \n  return (\n    <div className=\"min-h-screen\">\n      <Header />\n      \n      <section className=\"pt-32 pb-20 bg-gradient-to-br from-muted/30 via-background to-accent/20\">\n        <div className=\"container mx-auto px-4 lg:px-8\">\n          <div className=\"text-center mb-16\">\n            <div className=\"w-20 h-20 bg-primary/10 rounded-2xl flex items-center justify-center mx-auto mb-6\">\n              <Smartphone className=\"w-10 h-10 text-primary\" />\n            </div>\n            <h1 className=\"text-4xl lg:text-5xl font-bold text-foreground mb-6\" data-testid=\"app-development-title\">\n              App Development\n            </h1>\n            <p className=\"text-xl text-muted-foreground max-w-3xl mx-auto\">\n              Mobile and web applications for IoT device control and data visualization platforms.\n            </p>\n          </div>\n\n          <div className=\"grid lg:grid-cols-2 gap-12 items-center mb-20\">\n            <div>\n              <h2 className=\"text-3xl font-bold text-foreground mb-6\">Connected Solutions</h2>\n              <p className=\"text-lg text-muted-foreground mb-6\">\n                Our app development services create seamless connections between your hardware and users. \n                We build intuitive mobile and web applications that provide real-time monitoring, control, \n                and data visualization for your IoT and embedded systems.\n              </p>\n              <div className=\"space-y-4 mb-8\">\n                <div className=\"flex items-center gap-3\">\n                  <CheckCircle className=\"w-5 h-5 text-primary\" />\n                  <span className=\"text-foreground\">Cross-platform mobile apps</span>\n                </div>\n                <div className=\"flex items-center gap-3\">\n                  <CheckCircle className=\"w-5 h-5 text-primary\" />\n                  <span className=\"text-foreground\">Real-time data visualization</span>\n                </div>\n                <div className=\"flex items-center gap-3\">\n                  <CheckCircle className=\"w-5 h-5 text-primary\" />\n                  <span className=\"text-foreground\">IoT device management</span>\n                </div>\n                <div className=\"flex items-center gap-3\">\n                  <CheckCircle className=\"w-5 h-5 text-primary\" />\n                  <span className=\"text-foreground\">Cloud integration</span>\n                </div>\n              </div>\n              <Link href=\"/contact\">\n                <Button className=\"bg-primary text-primary-foreground hover:bg-primary/90\" data-testid=\"button-get-quote\">\n                  Get Quote\n                </Button>\n              </Link>\n            </div>\n            <div>\n              <img \n                src=\"https://images.unsplash.com/photo-1551650975-87deedd944c3?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=600\" \n                alt=\"Mobile app development\" \n                className=\"w-full h-96 object-cover rounded-2xl shadow-xl\" \n              />\n            </div>\n          </div>\n\n          <div className=\"grid md:grid-cols-3 gap-8 mb-20\">\n            <GlassCard className=\"p-6 text-center\">\n              <div className=\"w-16 h-16 bg-primary/10 rounded-xl flex items-center justify-center mx-auto mb-6\">\n                <Smartphone className=\"w-8 h-8 text-primary\" />\n              </div>\n              <h3 className=\"text-xl font-bold text-foreground mb-4\">Mobile Apps</h3>\n              <p className=\"text-muted-foreground\">\n                Native and cross-platform mobile applications for iOS and Android with \n                intuitive user interfaces and real-time device connectivity.\n              </p>\n            </GlassCard>\n\n            <GlassCard className=\"p-6 text-center\">\n              <div className=\"w-16 h-16 bg-primary/10 rounded-xl flex items-center justify-center mx-auto mb-6\">\n                <Globe className=\"w-8 h-8 text-primary\" />\n              </div>\n              <h3 className=\"text-xl font-bold text-foreground mb-4\">Web Applications</h3>\n              <p className=\"text-muted-foreground\">\n                Responsive web applications with modern frameworks for data visualization, \n                device management, and system administration.\n              </p>\n            </GlassCard>\n\n            <GlassCard className=\"p-6 text-center\">\n              <div className=\"w-16 h-16 bg-primary/10 rounded-xl flex items-center justify-center mx-auto mb-6\">\n                <Monitor className=\"w-8 h-8 text-primary\" />\n              </div>\n              <h3 className=\"text-xl font-bold text-foreground mb-4\">Desktop Apps</h3>\n              <p className=\"text-muted-foreground\">\n                Desktop applications for industrial control systems, data analysis, \n                and configuration tools with advanced functionality.\n              </p>\n            </GlassCard>\n          </div>\n\n          {/* Process Timeline */}\n          <div className=\"mb-20\">\n            <h2 className=\"text-3xl font-bold text-foreground mb-12 text-center\">Our App Development Process</h2>\n            <div className=\"space-y-8\">\n              <GlassCard className=\"p-8\">\n                <div className=\"flex items-start gap-6\">\n                  <div className=\"w-16 h-16 bg-primary/10 rounded-xl flex items-center justify-center flex-shrink-0\">\n                    <Lightbulb className=\"w-8 h-8 text-primary\" />\n                  </div>\n                  <div className=\"flex-1\">\n                    <div className=\"flex items-center gap-3 mb-3\">\n                      <span className=\"w-8 h-8 bg-primary rounded-full flex items-center justify-center text-primary-foreground font-bold text-sm\">1</span>\n                      <h3 className=\"text-xl font-bold text-foreground\">Discovery & Planning</h3>\n                      <span className=\"ml-auto text-sm text-muted-foreground\">3-5 days</span>\n                    </div>\n                    <p className=\"text-muted-foreground mb-4\">\n                      Define user requirements, create user personas, select technology stack, and plan app architecture with feature prioritization.\n                    </p>\n                    <div className=\"flex flex-wrap gap-2\">\n                      <span className=\"px-3 py-1 bg-primary/10 text-primary rounded-full text-sm\">User Research</span>\n                      <span className=\"px-3 py-1 bg-primary/10 text-primary rounded-full text-sm\">Tech Stack Selection</span>\n                      <span className=\"px-3 py-1 bg-primary/10 text-primary rounded-full text-sm\">Feature Planning</span>\n                    </div>\n                  </div>\n                </div>\n              </GlassCard>\n\n              <GlassCard className=\"p-8\">\n                <div className=\"flex items-start gap-6\">\n                  <div className=\"w-16 h-16 bg-primary/10 rounded-xl flex items-center justify-center flex-shrink-0\">\n                    <Pencil className=\"w-8 h-8 text-primary\" />\n                  </div>\n                  <div className=\"flex-1\">\n                    <div className=\"flex items-center gap-3 mb-3\">\n                      <span className=\"w-8 h-8 bg-primary rounded-full flex items-center justify-center text-primary-foreground font-bold text-sm\">2</span>\n                      <h3 className=\"text-xl font-bold text-foreground\">UI/UX Design</h3>\n                      <span className=\"ml-auto text-sm text-muted-foreground\">5-7 days</span>\n                    </div>\n                    <p className=\"text-muted-foreground mb-4\">\n                      Create wireframes, design mockups, build interactive prototypes, and iterate based on feedback for optimal user experience.\n                    </p>\n                    <div className=\"flex flex-wrap gap-2\">\n                      <span className=\"px-3 py-1 bg-primary/10 text-primary rounded-full text-sm\">Wireframing</span>\n                      <span className=\"px-3 py-1 bg-primary/10 text-primary rounded-full text-sm\">UI Design</span>\n                      <span className=\"px-3 py-1 bg-primary/10 text-primary rounded-full text-sm\">Prototyping</span>\n                    </div>\n                  </div>\n                </div>\n              </GlassCard>\n\n              <GlassCard className=\"p-8\">\n                <div className=\"flex items-start gap-6\">\n                  <div className=\"w-16 h-16 bg-primary/10 rounded-xl flex items-center justify-center flex-shrink-0\">\n                    <Code className=\"w-8 h-8 text-primary\" />\n                  </div>\n                  <div className=\"flex-1\">\n                    <div className=\"flex items-center gap-3 mb-3\">\n                      <span className=\"w-8 h-8 bg-primary rounded-full flex items-center justify-center text-primary-foreground font-bold text-sm\">3</span>\n                      <h3 className=\"text-xl font-bold text-foreground\">Development & Integration</h3>\n                      <span className=\"ml-auto text-sm text-muted-foreground\">15-20 days</span>\n                    </div>\n                    <p className=\"text-muted-foreground mb-4\">\n                      Build frontend and backend, implement device connectivity, integrate APIs, and develop real-time features with cloud services.\n                    </p>\n                    <div className=\"flex flex-wrap gap-2\">\n                      <span className=\"px-3 py-1 bg-primary/10 text-primary rounded-full text-sm\">Frontend Development</span>\n                      <span className=\"px-3 py-1 bg-primary/10 text-primary rounded-full text-sm\">Backend APIs</span>\n                      <span className=\"px-3 py-1 bg-primary/10 text-primary rounded-full text-sm\">Device Integration</span>\n                    </div>\n                  </div>\n                </div>\n              </GlassCard>\n\n              <GlassCard className=\"p-8\">\n                <div className=\"flex items-start gap-6\">\n                  <div className=\"w-16 h-16 bg-primary/10 rounded-xl flex items-center justify-center flex-shrink-0\">\n                    <TestTube className=\"w-8 h-8 text-primary\" />\n                  </div>\n                  <div className=\"flex-1\">\n                    <div className=\"flex items-center gap-3 mb-3\">\n                      <span className=\"w-8 h-8 bg-primary rounded-full flex items-center justify-center text-primary-foreground font-bold text-sm\">4</span>\n                      <h3 className=\"text-xl font-bold text-foreground\">Testing & QA</h3>\n                      <span className=\"ml-auto text-sm text-muted-foreground\">5-7 days</span>\n                    </div>\n                    <p className=\"text-muted-foreground mb-4\">\n                      Comprehensive testing including functional, performance, security, and user acceptance testing across all target devices.\n                    </p>\n                    <div className=\"flex flex-wrap gap-2\">\n                      <span className=\"px-3 py-1 bg-primary/10 text-primary rounded-full text-sm\">Functional Testing</span>\n                      <span className=\"px-3 py-1 bg-primary/10 text-primary rounded-full text-sm\">Device Testing</span>\n                      <span className=\"px-3 py-1 bg-primary/10 text-primary rounded-full text-sm\">Security Audit</span>\n                    </div>\n                  </div>\n                </div>\n              </GlassCard>\n\n              <GlassCard className=\"p-8\">\n                <div className=\"flex items-start gap-6\">\n                  <div className=\"w-16 h-16 bg-primary/10 rounded-xl flex items-center justify-center flex-shrink-0\">\n                    <Rocket className=\"w-8 h-8 text-primary\" />\n                  </div>\n                  <div className=\"flex-1\">\n                    <div className=\"flex items-center gap-3 mb-3\">\n                      <span className=\"w-8 h-8 bg-primary rounded-full flex items-center justify-center text-primary-foreground font-bold text-sm\">5</span>\n                      <h3 className=\"text-xl font-bold text-foreground\">Deployment & Support</h3>\n                      <span className=\"ml-auto text-sm text-muted-foreground\">3-5 days</span>\n                    </div>\n                    <p className=\"text-muted-foreground mb-4\">\n                      Deploy to app stores/web servers, monitor performance, provide user training, and offer ongoing maintenance and updates.\n                    </p>\n                    <div className=\"flex flex-wrap gap-2\">\n                      <span className=\"px-3 py-1 bg-primary/10 text-primary rounded-full text-sm\">Store Deployment</span>\n                      <span className=\"px-3 py-1 bg-primary/10 text-primary rounded-full text-sm\">Monitoring</span>\n                      <span className=\"px-3 py-1 bg-primary/10 text-primary rounded-full text-sm\">Maintenance</span>\n                    </div>\n                  </div>\n                </div>\n              </GlassCard>\n            </div>\n          </div>\n\n          <div className=\"grid lg:grid-cols-2 gap-12 mb-20\">\n            <GlassCard className=\"p-8\">\n              <h3 className=\"text-2xl font-bold text-foreground mb-6\">Technologies We Use</h3>\n              <div className=\"space-y-6\">\n                <div>\n                  <h4 className=\"font-semibold text-foreground mb-2\">Mobile Development</h4>\n                  <p className=\"text-muted-foreground\">React Native, Flutter, Native iOS/Android, Xamarin</p>\n                </div>\n                <div>\n                  <h4 className=\"font-semibold text-foreground mb-2\">Web Development</h4>\n                  <p className=\"text-muted-foreground\">React, Vue.js, Angular, Node.js, Python Django</p>\n                </div>\n                <div>\n                  <h4 className=\"font-semibold text-foreground mb-2\">Desktop Development</h4>\n                  <p className=\"text-muted-foreground\">Electron, Qt, .NET, WPF, Java Swing</p>\n                </div>\n                <div>\n                  <h4 className=\"font-semibold text-foreground mb-2\">Backend Services</h4>\n                  <p className=\"text-muted-foreground\">Node.js, Python, Go, Docker, Kubernetes</p>\n                </div>\n              </div>\n            </GlassCard>\n\n            <GlassCard className=\"p-8\">\n              <h3 className=\"text-2xl font-bold text-foreground mb-6\">Key Features</h3>\n              <div className=\"space-y-4\">\n                <div className=\"flex items-center gap-3\">\n                  <Wifi className=\"w-5 h-5 text-primary\" />\n                  <span className=\"text-foreground\">Real-time data synchronization</span>\n                </div>\n                <div className=\"flex items-center gap-3\">\n                  <CheckCircle className=\"w-5 h-5 text-primary\" />\n                  <span className=\"text-foreground\">Offline functionality</span>\n                </div>\n                <div className=\"flex items-center gap-3\">\n                  <CheckCircle className=\"w-5 h-5 text-primary\" />\n                  <span className=\"text-foreground\">Push notifications</span>\n                </div>\n                <div className=\"flex items-center gap-3\">\n                  <CheckCircle className=\"w-5 h-5 text-primary\" />\n                  <span className=\"text-foreground\">User authentication</span>\n                </div>\n                <div className=\"flex items-center gap-3\">\n                  <CheckCircle className=\"w-5 h-5 text-primary\" />\n                  <span className=\"text-foreground\">Data analytics dashboard</span>\n                </div>\n                <div className=\"flex items-center gap-3\">\n                  <CheckCircle className=\"w-5 h-5 text-primary\" />\n                  <span className=\"text-foreground\">Cloud storage integration</span>\n                </div>\n              </div>\n            </GlassCard>\n          </div>\n        </div>\n      </section>\n\n      {/* FAQs Section */}\n      <section className=\"py-20 bg-muted/30\">\n        <div className=\"container mx-auto px-4 lg:px-8\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"text-3xl lg:text-4xl font-bold text-foreground mb-4\">\n              Frequently Asked Questions\n            </h2>\n            <p className=\"text-lg text-muted-foreground max-w-2xl mx-auto\">\n              Common questions about our app development services\n            </p>\n          </div>\n          \n          <div className=\"max-w-3xl mx-auto space-y-4\">\n            {faqs.map((faq, index) => (\n              <GlassCard key={index} className=\"overflow-hidden\">\n                <button\n                  onClick={() => setOpenFaq(openFaq === index ? null : index)}\n                  className=\"w-full p-6 text-left flex items-center justify-between gap-4 hover:bg-muted/50 transition-colors\"\n                  data-testid={`faq-question-${index}`}\n                >\n                  <h3 className=\"text-lg font-semibold text-foreground\">{faq.q}</h3>\n                  <ChevronDown className={`w-5 h-5 text-primary flex-shrink-0 transition-transform ${openFaq === index ? 'rotate-180' : ''}`} />\n                </button>\n                {openFaq === index && (\n                  <div className=\"px-6 pb-6\">\n                    <p className=\"text-muted-foreground leading-relaxed\">{faq.a}</p>\n                  </div>\n                )}\n              </GlassCard>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* CTA Section */}\n      <section className=\"py-20 bg-primary/10\">\n        <div className=\"container mx-auto px-4 lg:px-8\">\n          <GlassCard className=\"p-12 text-center max-w-4xl mx-auto\">\n            <Smartphone className=\"w-16 h-16 text-primary mx-auto mb-6\" />\n            <h2 className=\"text-3xl lg:text-4xl font-bold text-foreground mb-4\">\n              Ready to Build Your Connected App?\n            </h2>\n            <p className=\"text-lg text-muted-foreground mb-8 max-w-2xl mx-auto\">\n              From mobile to web to desktop, we create apps that connect seamlessly with your devices. Get started today.\n            </p>\n            <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n              <Link href=\"/contact\">\n                <Button size=\"lg\" className=\"bg-primary text-primary-foreground hover:bg-primary/90\" data-testid=\"button-app-contact\">\n                  Get Free Consultation\n                </Button>\n              </Link>\n              <Link href=\"/case-studies\">\n                <Button size=\"lg\" variant=\"outline\" data-testid=\"button-view-app-portfolio\">\n                  View App Portfolio\n                </Button>\n              </Link>\n            </div>\n          </GlassCard>\n        </div>\n      </section>\n\n      <Footer />\n    </div>\n  );\n};\n\nexport default AppDevelopment;\n","size_bytes":20671},"client/src/pages/services/FirmwareProgramming.tsx":{"content":"import Header from \"@/components/layout/Header\";\nimport Footer from \"@/components/layout/Footer\";\nimport { GlassCard } from \"@/components/ui/glass-card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Link } from \"wouter\";\nimport { Code, CheckCircle, Terminal, Shield, Cog, Lightbulb, Pencil, Wrench, TestTube, Rocket, ChevronDown } from \"lucide-react\";\nimport { useState } from \"react\";\n\nconst FirmwareProgramming = () => {\n  const [openFaq, setOpenFaq] = useState<number | null>(null);\n  \n  const faqs = [\n    {\n      q: \"What programming languages do you use for firmware development?\",\n      a: \"We primarily use C/C++ for embedded systems due to their efficiency and direct hardware access. We also work with Assembly for performance-critical sections, Rust for safety-critical applications, and Python/MATLAB for prototyping and simulation.\"\n    },\n    {\n      q: \"Do you work with RTOS (Real-Time Operating Systems)?\",\n      a: \"Yes, we have extensive experience with various RTOS platforms including FreeRTOS, ThreadX, Zephyr, and QNX. We can help you select the right RTOS for your application and implement efficient task scheduling and resource management.\"\n    },\n    {\n      q: \"Can you develop firmware for safety-critical applications?\",\n      a: \"Absolutely. We have experience developing firmware that complies with safety standards including DO-178C (aerospace), IEC 61508 (industrial), and ISO 26262 (automotive). We follow rigorous development processes with comprehensive testing and documentation.\"\n    },\n    {\n      q: \"How do you handle firmware updates and versioning?\",\n      a: \"We implement robust over-the-air (OTA) update mechanisms with secure bootloaders, version management, and rollback capabilities. All firmware updates are encrypted and authenticated to ensure security.\"\n    },\n    {\n      q: \"What debugging tools and techniques do you use?\",\n      a: \"We use professional debugging tools including JTAG/SWD debuggers, oscilloscopes, logic analyzers, and protocol analyzers. Our debugging techniques include real-time tracing, memory profiling, and comprehensive logging systems.\"\n    }\n  ];\n  \n  return (\n    <div className=\"min-h-screen\">\n      <Header />\n      \n      <section className=\"pt-32 pb-20 bg-gradient-to-br from-muted/30 via-background to-accent/20\">\n        <div className=\"container mx-auto px-4 lg:px-8\">\n          <div className=\"text-center mb-16\">\n            <div className=\"w-20 h-20 bg-primary/10 rounded-2xl flex items-center justify-center mx-auto mb-6\">\n              <Code className=\"w-10 h-10 text-primary\" />\n            </div>\n            <h1 className=\"text-4xl lg:text-5xl font-bold text-foreground mb-6\" data-testid=\"firmware-programming-title\">\n              Firmware Programming\n            </h1>\n            <p className=\"text-xl text-muted-foreground max-w-3xl mx-auto\">\n              Low-level firmware development for optimal performance and reliability in embedded systems.\n            </p>\n          </div>\n\n          <div className=\"grid lg:grid-cols-2 gap-12 items-center mb-20\">\n            <div>\n              <h2 className=\"text-3xl font-bold text-foreground mb-6\">Optimized Embedded Software</h2>\n              <p className=\"text-lg text-muted-foreground mb-6\">\n                Our firmware programming services deliver highly optimized, reliable code that maximizes \n                hardware performance while ensuring robust operation. From bare-metal programming to \n                RTOS-based applications, we create firmware that meets your exact requirements.\n              </p>\n              <div className=\"space-y-4 mb-8\">\n                <div className=\"flex items-center gap-3\">\n                  <CheckCircle className=\"w-5 h-5 text-primary\" />\n                  <span className=\"text-foreground\">Real-time operating systems (RTOS)</span>\n                </div>\n                <div className=\"flex items-center gap-3\">\n                  <CheckCircle className=\"w-5 h-5 text-primary\" />\n                  <span className=\"text-foreground\">Bare-metal programming</span>\n                </div>\n                <div className=\"flex items-center gap-3\">\n                  <CheckCircle className=\"w-5 h-5 text-primary\" />\n                  <span className=\"text-foreground\">Communication protocols</span>\n                </div>\n                <div className=\"flex items-center gap-3\">\n                  <CheckCircle className=\"w-5 h-5 text-primary\" />\n                  <span className=\"text-foreground\">Safety-critical applications</span>\n                </div>\n              </div>\n              <Link href=\"/contact\">\n                <Button className=\"bg-primary text-primary-foreground hover:bg-primary/90\" data-testid=\"button-get-quote\">\n                  Get Quote\n                </Button>\n              </Link>\n            </div>\n            <div>\n              <img \n                src=\"https://images.unsplash.com/photo-1461749280684-dccba630e2f6?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=600\" \n                alt=\"Firmware development and debugging\" \n                className=\"w-full h-96 object-cover rounded-2xl shadow-xl\" \n              />\n            </div>\n          </div>\n\n          <div className=\"grid md:grid-cols-3 gap-8 mb-20\">\n            <GlassCard className=\"p-6 text-center\">\n              <div className=\"w-16 h-16 bg-primary/10 rounded-xl flex items-center justify-center mx-auto mb-6\">\n                <Terminal className=\"w-8 h-8 text-primary\" />\n              </div>\n              <h3 className=\"text-xl font-bold text-foreground mb-4\">RTOS Development</h3>\n              <p className=\"text-muted-foreground\">\n                Real-time operating system implementation with FreeRTOS, ThreadX, and custom RTOS \n                solutions for time-critical applications.\n              </p>\n            </GlassCard>\n\n            <GlassCard className=\"p-6 text-center\">\n              <div className=\"w-16 h-16 bg-primary/10 rounded-xl flex items-center justify-center mx-auto mb-6\">\n                <Shield className=\"w-8 h-8 text-primary\" />\n              </div>\n              <h3 className=\"text-xl font-bold text-foreground mb-4\">Safety Critical</h3>\n              <p className=\"text-muted-foreground\">\n                Firmware for safety-critical systems with DO-178C, IEC 61508, and ISO 26262 \n                compliance for automotive and aerospace applications.\n              </p>\n            </GlassCard>\n\n            <GlassCard className=\"p-6 text-center\">\n              <div className=\"w-16 h-16 bg-primary/10 rounded-xl flex items-center justify-center mx-auto mb-6\">\n                <Cog className=\"w-8 h-8 text-primary\" />\n              </div>\n              <h3 className=\"text-xl font-bold text-foreground mb-4\">Protocol Stacks</h3>\n              <p className=\"text-muted-foreground\">\n                Implementation of communication protocols including TCP/IP, Modbus, CAN, \n                LoRaWAN, and custom proprietary protocols.\n              </p>\n            </GlassCard>\n          </div>\n\n          {/* Process Timeline */}\n          <div className=\"mb-20\">\n            <h2 className=\"text-3xl font-bold text-foreground mb-12 text-center\">Our Firmware Development Process</h2>\n            <div className=\"space-y-8\">\n              <GlassCard className=\"p-8\">\n                <div className=\"flex items-start gap-6\">\n                  <div className=\"w-16 h-16 bg-primary/10 rounded-xl flex items-center justify-center flex-shrink-0\">\n                    <Lightbulb className=\"w-8 h-8 text-primary\" />\n                  </div>\n                  <div className=\"flex-1\">\n                    <div className=\"flex items-center gap-3 mb-3\">\n                      <span className=\"w-8 h-8 bg-primary rounded-full flex items-center justify-center text-primary-foreground font-bold text-sm\">1</span>\n                      <h3 className=\"text-xl font-bold text-foreground\">Requirements & Architecture</h3>\n                      <span className=\"ml-auto text-sm text-muted-foreground\">2-3 days</span>\n                    </div>\n                    <p className=\"text-muted-foreground mb-4\">\n                      Define system requirements, select RTOS or bare-metal approach, design software architecture, and establish coding standards.\n                    </p>\n                    <div className=\"flex flex-wrap gap-2\">\n                      <span className=\"px-3 py-1 bg-primary/10 text-primary rounded-full text-sm\">Requirements Analysis</span>\n                      <span className=\"px-3 py-1 bg-primary/10 text-primary rounded-full text-sm\">Architecture Design</span>\n                      <span className=\"px-3 py-1 bg-primary/10 text-primary rounded-full text-sm\">RTOS Selection</span>\n                    </div>\n                  </div>\n                </div>\n              </GlassCard>\n\n              <GlassCard className=\"p-8\">\n                <div className=\"flex items-start gap-6\">\n                  <div className=\"w-16 h-16 bg-primary/10 rounded-xl flex items-center justify-center flex-shrink-0\">\n                    <Pencil className=\"w-8 h-8 text-primary\" />\n                  </div>\n                  <div className=\"flex-1\">\n                    <div className=\"flex items-center gap-3 mb-3\">\n                      <span className=\"w-8 h-8 bg-primary rounded-full flex items-center justify-center text-primary-foreground font-bold text-sm\">2</span>\n                      <h3 className=\"text-xl font-bold text-foreground\">Core Development</h3>\n                      <span className=\"ml-auto text-sm text-muted-foreground\">7-14 days</span>\n                    </div>\n                    <p className=\"text-muted-foreground mb-4\">\n                      Implement drivers, communication protocols, application logic, and real-time task scheduling with efficient memory management.\n                    </p>\n                    <div className=\"flex flex-wrap gap-2\">\n                      <span className=\"px-3 py-1 bg-primary/10 text-primary rounded-full text-sm\">Driver Development</span>\n                      <span className=\"px-3 py-1 bg-primary/10 text-primary rounded-full text-sm\">Protocol Implementation</span>\n                      <span className=\"px-3 py-1 bg-primary/10 text-primary rounded-full text-sm\">Task Scheduling</span>\n                    </div>\n                  </div>\n                </div>\n              </GlassCard>\n\n              <GlassCard className=\"p-8\">\n                <div className=\"flex items-start gap-6\">\n                  <div className=\"w-16 h-16 bg-primary/10 rounded-xl flex items-center justify-center flex-shrink-0\">\n                    <Wrench className=\"w-8 h-8 text-primary\" />\n                  </div>\n                  <div className=\"flex-1\">\n                    <div className=\"flex items-center gap-3 mb-3\">\n                      <span className=\"w-8 h-8 bg-primary rounded-full flex items-center justify-center text-primary-foreground font-bold text-sm\">3</span>\n                      <h3 className=\"text-xl font-bold text-foreground\">Optimization & Debugging</h3>\n                      <span className=\"ml-auto text-sm text-muted-foreground\">5-7 days</span>\n                    </div>\n                    <p className=\"text-muted-foreground mb-4\">\n                      Optimize code for performance and memory usage, debug using JTAG/SWD tools, and implement error handling and logging.\n                    </p>\n                    <div className=\"flex flex-wrap gap-2\">\n                      <span className=\"px-3 py-1 bg-primary/10 text-primary rounded-full text-sm\">Code Optimization</span>\n                      <span className=\"px-3 py-1 bg-primary/10 text-primary rounded-full text-sm\">JTAG Debugging</span>\n                      <span className=\"px-3 py-1 bg-primary/10 text-primary rounded-full text-sm\">Memory Profiling</span>\n                    </div>\n                  </div>\n                </div>\n              </GlassCard>\n\n              <GlassCard className=\"p-8\">\n                <div className=\"flex items-start gap-6\">\n                  <div className=\"w-16 h-16 bg-primary/10 rounded-xl flex items-center justify-center flex-shrink-0\">\n                    <TestTube className=\"w-8 h-8 text-primary\" />\n                  </div>\n                  <div className=\"flex-1\">\n                    <div className=\"flex items-center gap-3 mb-3\">\n                      <span className=\"w-8 h-8 bg-primary rounded-full flex items-center justify-center text-primary-foreground font-bold text-sm\">4</span>\n                      <h3 className=\"text-xl font-bold text-foreground\">Testing & Validation</h3>\n                      <span className=\"ml-auto text-sm text-muted-foreground\">5-7 days</span>\n                    </div>\n                    <p className=\"text-muted-foreground mb-4\">\n                      Comprehensive unit testing, integration testing, stress testing, and compliance validation for safety-critical systems.\n                    </p>\n                    <div className=\"flex flex-wrap gap-2\">\n                      <span className=\"px-3 py-1 bg-primary/10 text-primary rounded-full text-sm\">Unit Testing</span>\n                      <span className=\"px-3 py-1 bg-primary/10 text-primary rounded-full text-sm\">Integration Tests</span>\n                      <span className=\"px-3 py-1 bg-primary/10 text-primary rounded-full text-sm\">Stress Testing</span>\n                    </div>\n                  </div>\n                </div>\n              </GlassCard>\n\n              <GlassCard className=\"p-8\">\n                <div className=\"flex items-start gap-6\">\n                  <div className=\"w-16 h-16 bg-primary/10 rounded-xl flex items-center justify-center flex-shrink-0\">\n                    <Rocket className=\"w-8 h-8 text-primary\" />\n                  </div>\n                  <div className=\"flex-1\">\n                    <div className=\"flex items-center gap-3 mb-3\">\n                      <span className=\"w-8 h-8 bg-primary rounded-full flex items-center justify-center text-primary-foreground font-bold text-sm\">5</span>\n                      <h3 className=\"text-xl font-bold text-foreground\">Deployment & Maintenance</h3>\n                      <span className=\"ml-auto text-sm text-muted-foreground\">Ongoing</span>\n                    </div>\n                    <p className=\"text-muted-foreground mb-4\">\n                      Deploy firmware with secure bootloader, implement OTA update mechanism, and provide ongoing maintenance and support.\n                    </p>\n                    <div className=\"flex flex-wrap gap-2\">\n                      <span className=\"px-3 py-1 bg-primary/10 text-primary rounded-full text-sm\">Secure Boot</span>\n                      <span className=\"px-3 py-1 bg-primary/10 text-primary rounded-full text-sm\">OTA Updates</span>\n                      <span className=\"px-3 py-1 bg-primary/10 text-primary rounded-full text-sm\">Maintenance</span>\n                    </div>\n                  </div>\n                </div>\n              </GlassCard>\n            </div>\n          </div>\n\n          <div className=\"grid lg:grid-cols-2 gap-12 mb-20\">\n            <GlassCard className=\"p-8\">\n              <h3 className=\"text-2xl font-bold text-foreground mb-6\">Programming Languages</h3>\n              <div className=\"grid grid-cols-2 gap-4\">\n                <div>\n                  <h4 className=\"font-semibold text-foreground mb-2\">Primary</h4>\n                  <ul className=\"text-muted-foreground space-y-1\">\n                    <li>C/C++</li>\n                    <li>Assembly</li>\n                    <li>Rust</li>\n                  </ul>\n                </div>\n                <div>\n                  <h4 className=\"font-semibold text-foreground mb-2\">Specialized</h4>\n                  <ul className=\"text-muted-foreground space-y-1\">\n                    <li>VHDL/Verilog</li>\n                    <li>Python</li>\n                    <li>MATLAB/Simulink</li>\n                  </ul>\n                </div>\n              </div>\n            </GlassCard>\n\n            <GlassCard className=\"p-8\">\n              <h3 className=\"text-2xl font-bold text-foreground mb-6\">Development Tools</h3>\n              <div className=\"grid grid-cols-2 gap-4\">\n                <div>\n                  <h4 className=\"font-semibold text-foreground mb-2\">IDEs</h4>\n                  <ul className=\"text-muted-foreground space-y-1\">\n                    <li>STM32CubeIDE</li>\n                    <li>Keil MDK</li>\n                    <li>IAR Embedded</li>\n                  </ul>\n                </div>\n                <div>\n                  <h4 className=\"font-semibold text-foreground mb-2\">Debug Tools</h4>\n                  <ul className=\"text-muted-foreground space-y-1\">\n                    <li>JTAG/SWD</li>\n                    <li>Oscilloscopes</li>\n                    <li>Logic Analyzers</li>\n                  </ul>\n                </div>\n              </div>\n            </GlassCard>\n          </div>\n        </div>\n      </section>\n\n      {/* FAQs Section */}\n      <section className=\"py-20 bg-muted/30\">\n        <div className=\"container mx-auto px-4 lg:px-8\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"text-3xl lg:text-4xl font-bold text-foreground mb-4\">\n              Frequently Asked Questions\n            </h2>\n            <p className=\"text-lg text-muted-foreground max-w-2xl mx-auto\">\n              Common questions about our firmware development services\n            </p>\n          </div>\n          \n          <div className=\"max-w-3xl mx-auto space-y-4\">\n            {faqs.map((faq, index) => (\n              <GlassCard key={index} className=\"overflow-hidden\">\n                <button\n                  onClick={() => setOpenFaq(openFaq === index ? null : index)}\n                  className=\"w-full p-6 text-left flex items-center justify-between gap-4 hover:bg-muted/50 transition-colors\"\n                  data-testid={`faq-question-${index}`}\n                >\n                  <h3 className=\"text-lg font-semibold text-foreground\">{faq.q}</h3>\n                  <ChevronDown className={`w-5 h-5 text-primary flex-shrink-0 transition-transform ${openFaq === index ? 'rotate-180' : ''}`} />\n                </button>\n                {openFaq === index && (\n                  <div className=\"px-6 pb-6\">\n                    <p className=\"text-muted-foreground leading-relaxed\">{faq.a}</p>\n                  </div>\n                )}\n              </GlassCard>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* CTA Section */}\n      <section className=\"py-20 bg-primary/10\">\n        <div className=\"container mx-auto px-4 lg:px-8\">\n          <GlassCard className=\"p-12 text-center max-w-4xl mx-auto\">\n            <Code className=\"w-16 h-16 text-primary mx-auto mb-6\" />\n            <h2 className=\"text-3xl lg:text-4xl font-bold text-foreground mb-4\">\n              Ready to Build Reliable Firmware?\n            </h2>\n            <p className=\"text-lg text-muted-foreground mb-8 max-w-2xl mx-auto\">\n              From bare-metal to RTOS, we deliver optimized firmware solutions. Get in touch for expert firmware development.\n            </p>\n            <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n              <Link href=\"/contact\">\n                <Button size=\"lg\" className=\"bg-primary text-primary-foreground hover:bg-primary/90\" data-testid=\"button-firmware-contact\">\n                  Get Free Consultation\n                </Button>\n              </Link>\n              <Link href=\"/case-studies\">\n                <Button size=\"lg\" variant=\"outline\" data-testid=\"button-view-firmware-projects\">\n                  View Our Work\n                </Button>\n              </Link>\n            </div>\n          </GlassCard>\n        </div>\n      </section>\n\n      <Footer />\n    </div>\n  );\n};\n\nexport default FirmwareProgramming;\n","size_bytes":19900},"client/src/pages/services/HardwareDevelopment.tsx":{"content":"import Header from \"@/components/layout/Header\";\nimport Footer from \"@/components/layout/Footer\";\nimport { GlassCard } from \"@/components/ui/glass-card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Link } from \"wouter\";\nimport { Cpu, CheckCircle, Microchip, Settings, Zap, Lightbulb, Pencil, Wrench, TestTube, Rocket, ChevronDown } from \"lucide-react\";\nimport { useState } from \"react\";\n\nconst HardwareDevelopment = () => {\n  const [openFaq, setOpenFaq] = useState<number | null>(null);\n  \n  const faqs = [\n    {\n      q: \"What types of microcontrollers do you work with?\",\n      a: \"We work with a wide range of microcontrollers including ARM Cortex-M (STM32, NXP), ESP32/ESP8266 for IoT applications, PIC microcontrollers, and RISC-V processors. We select the best platform based on your project requirements.\"\n    },\n    {\n      q: \"Can you help with both hardware and firmware development?\",\n      a: \"Yes! We provide complete embedded systems solutions including hardware design, PCB layout, firmware development, and testing. Our integrated approach ensures optimal hardware-software co-design.\"\n    },\n    {\n      q: \"Do you provide prototyping services?\",\n      a: \"Absolutely. We offer rapid prototyping services including breadboard prototypes, development board integration, and custom PCB prototypes with iterative testing and refinement.\"\n    },\n    {\n      q: \"What is your experience with IoT and wireless connectivity?\",\n      a: \"We have extensive experience with IoT protocols and wireless technologies including WiFi, Bluetooth/BLE, LoRa/LoRaWAN, Zigbee, and cellular (4G/5G). We can help design and implement complete IoT solutions.\"\n    },\n    {\n      q: \"Do you offer power optimization for battery-powered devices?\",\n      a: \"Yes, power optimization is one of our specialties. We implement low-power design techniques, efficient power management circuits, sleep modes, and energy harvesting solutions to maximize battery life.\"\n    }\n  ];\n  \n  return (\n    <div className=\"min-h-screen\">\n      <Header />\n      \n      <section className=\"pt-32 pb-20 bg-gradient-to-br from-muted/30 via-background to-accent/20\">\n        <div className=\"container mx-auto px-4 lg:px-8\">\n          <div className=\"text-center mb-16\">\n            <div className=\"w-20 h-20 bg-primary/10 rounded-2xl flex items-center justify-center mx-auto mb-6\">\n              <Cpu className=\"w-10 h-10 text-primary\" />\n            </div>\n            <h1 className=\"text-4xl lg:text-5xl font-bold text-foreground mb-6\" data-testid=\"hardware-development-title\">\n              Hardware Development\n            </h1>\n            <p className=\"text-xl text-muted-foreground max-w-3xl mx-auto\">\n              Complete embedded systems design including microcontroller programming and FPGA development.\n            </p>\n          </div>\n\n          <div className=\"grid lg:grid-cols-2 gap-12 items-center mb-20\">\n            <div>\n              <h2 className=\"text-3xl font-bold text-foreground mb-6\">Embedded Systems Excellence</h2>\n              <p className=\"text-lg text-muted-foreground mb-6\">\n                Our hardware development services encompass the complete spectrum of embedded systems design, \n                from microcontroller-based solutions to complex FPGA implementations. We deliver optimized \n                hardware that meets your performance, power, and cost requirements.\n              </p>\n              <div className=\"space-y-4 mb-8\">\n                <div className=\"flex items-center gap-3\">\n                  <CheckCircle className=\"w-5 h-5 text-primary\" />\n                  <span className=\"text-foreground\">ARM Cortex-M and RISC-V microcontrollers</span>\n                </div>\n                <div className=\"flex items-center gap-3\">\n                  <CheckCircle className=\"w-5 h-5 text-primary\" />\n                  <span className=\"text-foreground\">FPGA design and implementation</span>\n                </div>\n                <div className=\"flex items-center gap-3\">\n                  <CheckCircle className=\"w-5 h-5 text-primary\" />\n                  <span className=\"text-foreground\">IoT and wireless connectivity</span>\n                </div>\n                <div className=\"flex items-center gap-3\">\n                  <CheckCircle className=\"w-5 h-5 text-primary\" />\n                  <span className=\"text-foreground\">Power management optimization</span>\n                </div>\n              </div>\n              <Link href=\"/contact\">\n                <Button className=\"bg-primary text-primary-foreground hover:bg-primary/90\" data-testid=\"button-get-quote\">\n                  Get Quote\n                </Button>\n              </Link>\n            </div>\n            <div>\n              <img \n                src=\"https://images.unsplash.com/photo-1581094794329-c8112a89af12?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=600\" \n                alt=\"Hardware development and testing\" \n                className=\"w-full h-96 object-cover rounded-2xl shadow-xl\" \n              />\n            </div>\n          </div>\n\n          <div className=\"grid md:grid-cols-3 gap-8 mb-20\">\n            <GlassCard className=\"p-6 text-center\">\n              <div className=\"w-16 h-16 bg-primary/10 rounded-xl flex items-center justify-center mx-auto mb-6\">\n                <Microchip className=\"w-8 h-8 text-primary\" />\n              </div>\n              <h3 className=\"text-xl font-bold text-foreground mb-4\">Microcontroller Design</h3>\n              <p className=\"text-muted-foreground\">\n                Custom microcontroller-based solutions with optimized firmware for real-time applications \n                and low-power requirements.\n              </p>\n            </GlassCard>\n\n            <GlassCard className=\"p-6 text-center\">\n              <div className=\"w-16 h-16 bg-primary/10 rounded-xl flex items-center justify-center mx-auto mb-6\">\n                <Settings className=\"w-8 h-8 text-primary\" />\n              </div>\n              <h3 className=\"text-xl font-bold text-foreground mb-4\">FPGA Development</h3>\n              <p className=\"text-muted-foreground\">\n                High-performance FPGA solutions for signal processing, communication protocols, \n                and custom digital logic implementations.\n              </p>\n            </GlassCard>\n\n            <GlassCard className=\"p-6 text-center\">\n              <div className=\"w-16 h-16 bg-primary/10 rounded-xl flex items-center justify-center mx-auto mb-6\">\n                <Zap className=\"w-8 h-8 text-primary\" />\n              </div>\n              <h3 className=\"text-xl font-bold text-foreground mb-4\">Power Management</h3>\n              <p className=\"text-muted-foreground\">\n                Advanced power management circuits with battery optimization, energy harvesting, \n                and ultra-low power design techniques.\n              </p>\n            </GlassCard>\n          </div>\n\n          {/* Process Timeline */}\n          <div className=\"mb-20\">\n            <h2 className=\"text-3xl font-bold text-foreground mb-12 text-center\">Our Development Process</h2>\n            <div className=\"space-y-8\">\n              <GlassCard className=\"p-8\">\n                <div className=\"flex items-start gap-6\">\n                  <div className=\"w-16 h-16 bg-primary/10 rounded-xl flex items-center justify-center flex-shrink-0\">\n                    <Lightbulb className=\"w-8 h-8 text-primary\" />\n                  </div>\n                  <div className=\"flex-1\">\n                    <div className=\"flex items-center gap-3 mb-3\">\n                      <span className=\"w-8 h-8 bg-primary rounded-full flex items-center justify-center text-primary-foreground font-bold text-sm\">1</span>\n                      <h3 className=\"text-xl font-bold text-foreground\">Requirements & Architecture</h3>\n                      <span className=\"ml-auto text-sm text-muted-foreground\">3-5 days</span>\n                    </div>\n                    <p className=\"text-muted-foreground mb-4\">\n                      Analyze project requirements, define system architecture, select optimal microcontroller/FPGA platform, and plan power budget and connectivity needs.\n                    </p>\n                    <div className=\"flex flex-wrap gap-2\">\n                      <span className=\"px-3 py-1 bg-primary/10 text-primary rounded-full text-sm\">System Architecture</span>\n                      <span className=\"px-3 py-1 bg-primary/10 text-primary rounded-full text-sm\">Platform Selection</span>\n                      <span className=\"px-3 py-1 bg-primary/10 text-primary rounded-full text-sm\">Requirements Doc</span>\n                    </div>\n                  </div>\n                </div>\n              </GlassCard>\n\n              <GlassCard className=\"p-8\">\n                <div className=\"flex items-start gap-6\">\n                  <div className=\"w-16 h-16 bg-primary/10 rounded-xl flex items-center justify-center flex-shrink-0\">\n                    <Pencil className=\"w-8 h-8 text-primary\" />\n                  </div>\n                  <div className=\"flex-1\">\n                    <div className=\"flex items-center gap-3 mb-3\">\n                      <span className=\"w-8 h-8 bg-primary rounded-full flex items-center justify-center text-primary-foreground font-bold text-sm\">2</span>\n                      <h3 className=\"text-xl font-bold text-foreground\">Schematic & PCB Design</h3>\n                      <span className=\"ml-auto text-sm text-muted-foreground\">7-10 days</span>\n                    </div>\n                    <p className=\"text-muted-foreground mb-4\">\n                      Create detailed schematics with component selection, design PCB layout with signal integrity considerations, and prepare manufacturing files.\n                    </p>\n                    <div className=\"flex flex-wrap gap-2\">\n                      <span className=\"px-3 py-1 bg-primary/10 text-primary rounded-full text-sm\">Circuit Design</span>\n                      <span className=\"px-3 py-1 bg-primary/10 text-primary rounded-full text-sm\">PCB Layout</span>\n                      <span className=\"px-3 py-1 bg-primary/10 text-primary rounded-full text-sm\">BOM Creation</span>\n                    </div>\n                  </div>\n                </div>\n              </GlassCard>\n\n              <GlassCard className=\"p-8\">\n                <div className=\"flex items-start gap-6\">\n                  <div className=\"w-16 h-16 bg-primary/10 rounded-xl flex items-center justify-center flex-shrink-0\">\n                    <Wrench className=\"w-8 h-8 text-primary\" />\n                  </div>\n                  <div className=\"flex-1\">\n                    <div className=\"flex items-center gap-3 mb-3\">\n                      <span className=\"w-8 h-8 bg-primary rounded-full flex items-center justify-center text-primary-foreground font-bold text-sm\">3</span>\n                      <h3 className=\"text-xl font-bold text-foreground\">Prototyping & Assembly</h3>\n                      <span className=\"ml-auto text-sm text-muted-foreground\">5-7 days</span>\n                    </div>\n                    <p className=\"text-muted-foreground mb-4\">\n                      Build prototypes, assemble and solder components, perform initial bring-up and basic functionality testing.\n                    </p>\n                    <div className=\"flex flex-wrap gap-2\">\n                      <span className=\"px-3 py-1 bg-primary/10 text-primary rounded-full text-sm\">PCB Fabrication</span>\n                      <span className=\"px-3 py-1 bg-primary/10 text-primary rounded-full text-sm\">Assembly</span>\n                      <span className=\"px-3 py-1 bg-primary/10 text-primary rounded-full text-sm\">Initial Testing</span>\n                    </div>\n                  </div>\n                </div>\n              </GlassCard>\n\n              <GlassCard className=\"p-8\">\n                <div className=\"flex items-start gap-6\">\n                  <div className=\"w-16 h-16 bg-primary/10 rounded-xl flex items-center justify-center flex-shrink-0\">\n                    <TestTube className=\"w-8 h-8 text-primary\" />\n                  </div>\n                  <div className=\"flex-1\">\n                    <div className=\"flex items-center gap-3 mb-3\">\n                      <span className=\"w-8 h-8 bg-primary rounded-full flex items-center justify-center text-primary-foreground font-bold text-sm\">4</span>\n                      <h3 className=\"text-xl font-bold text-foreground\">Testing & Validation</h3>\n                      <span className=\"ml-auto text-sm text-muted-foreground\">5-7 days</span>\n                    </div>\n                    <p className=\"text-muted-foreground mb-4\">\n                      Comprehensive testing including functional tests, power consumption analysis, EMC testing, and environmental stress testing.\n                    </p>\n                    <div className=\"flex flex-wrap gap-2\">\n                      <span className=\"px-3 py-1 bg-primary/10 text-primary rounded-full text-sm\">Functional Testing</span>\n                      <span className=\"px-3 py-1 bg-primary/10 text-primary rounded-full text-sm\">Power Analysis</span>\n                      <span className=\"px-3 py-1 bg-primary/10 text-primary rounded-full text-sm\">EMC Testing</span>\n                    </div>\n                  </div>\n                </div>\n              </GlassCard>\n\n              <GlassCard className=\"p-8\">\n                <div className=\"flex items-start gap-6\">\n                  <div className=\"w-16 h-16 bg-primary/10 rounded-xl flex items-center justify-center flex-shrink-0\">\n                    <Rocket className=\"w-8 h-8 text-primary\" />\n                  </div>\n                  <div className=\"flex-1\">\n                    <div className=\"flex items-center gap-3 mb-3\">\n                      <span className=\"w-8 h-8 bg-primary rounded-full flex items-center justify-center text-primary-foreground font-bold text-sm\">5</span>\n                      <h3 className=\"text-xl font-bold text-foreground\">Production & Support</h3>\n                      <span className=\"ml-auto text-sm text-muted-foreground\">Ongoing</span>\n                    </div>\n                    <p className=\"text-muted-foreground mb-4\">\n                      Prepare for mass production, provide manufacturing support, documentation, and ongoing technical assistance.\n                    </p>\n                    <div className=\"flex flex-wrap gap-2\">\n                      <span className=\"px-3 py-1 bg-primary/10 text-primary rounded-full text-sm\">Production Files</span>\n                      <span className=\"px-3 py-1 bg-primary/10 text-primary rounded-full text-sm\">Documentation</span>\n                      <span className=\"px-3 py-1 bg-primary/10 text-primary rounded-full text-sm\">Support</span>\n                    </div>\n                  </div>\n                </div>\n              </GlassCard>\n            </div>\n          </div>\n\n          <GlassCard className=\"p-8\">\n            <h2 className=\"text-3xl font-bold text-foreground mb-6 text-center\">Technologies We Work With</h2>\n            <div className=\"grid md:grid-cols-2 lg:grid-cols-4 gap-6\">\n              <div className=\"text-center\">\n                <h4 className=\"font-semibold text-foreground mb-2\">Microcontrollers</h4>\n                <ul className=\"text-sm text-muted-foreground space-y-1\">\n                  <li>STM32 (ARM Cortex-M)</li>\n                  <li>ESP32/ESP8266</li>\n                  <li>PIC Microcontrollers</li>\n                  <li>RISC-V Processors</li>\n                </ul>\n              </div>\n              <div className=\"text-center\">\n                <h4 className=\"font-semibold text-foreground mb-2\">FPGAs</h4>\n                <ul className=\"text-sm text-muted-foreground space-y-1\">\n                  <li>Xilinx Zynq</li>\n                  <li>Intel Cyclone</li>\n                  <li>Lattice iCE40</li>\n                  <li>Microsemi SmartFusion</li>\n                </ul>\n              </div>\n              <div className=\"text-center\">\n                <h4 className=\"font-semibold text-foreground mb-2\">Connectivity</h4>\n                <ul className=\"text-sm text-muted-foreground space-y-1\">\n                  <li>WiFi/Bluetooth</li>\n                  <li>LoRa/LoRaWAN</li>\n                  <li>Cellular (4G/5G)</li>\n                  <li>Ethernet/CAN</li>\n                </ul>\n              </div>\n              <div className=\"text-center\">\n                <h4 className=\"font-semibold text-foreground mb-2\">Sensors</h4>\n                <ul className=\"text-sm text-muted-foreground space-y-1\">\n                  <li>Environmental Sensors</li>\n                  <li>IMU/Accelerometers</li>\n                  <li>Optical Sensors</li>\n                  <li>Pressure/Flow Sensors</li>\n                </ul>\n              </div>\n            </div>\n          </GlassCard>\n        </div>\n      </section>\n\n      {/* FAQs Section */}\n      <section className=\"py-20 bg-muted/30\">\n        <div className=\"container mx-auto px-4 lg:px-8\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"text-3xl lg:text-4xl font-bold text-foreground mb-4\">\n              Frequently Asked Questions\n            </h2>\n            <p className=\"text-lg text-muted-foreground max-w-2xl mx-auto\">\n              Common questions about our hardware development services\n            </p>\n          </div>\n          \n          <div className=\"max-w-3xl mx-auto space-y-4\">\n            {faqs.map((faq, index) => (\n              <GlassCard key={index} className=\"overflow-hidden\">\n                <button\n                  onClick={() => setOpenFaq(openFaq === index ? null : index)}\n                  className=\"w-full p-6 text-left flex items-center justify-between gap-4 hover:bg-muted/50 transition-colors\"\n                  data-testid={`faq-question-${index}`}\n                >\n                  <h3 className=\"text-lg font-semibold text-foreground\">{faq.q}</h3>\n                  <ChevronDown className={`w-5 h-5 text-primary flex-shrink-0 transition-transform ${openFaq === index ? 'rotate-180' : ''}`} />\n                </button>\n                {openFaq === index && (\n                  <div className=\"px-6 pb-6\">\n                    <p className=\"text-muted-foreground leading-relaxed\">{faq.a}</p>\n                  </div>\n                )}\n              </GlassCard>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* CTA Section */}\n      <section className=\"py-20 bg-primary/10\">\n        <div className=\"container mx-auto px-4 lg:px-8\">\n          <GlassCard className=\"p-12 text-center max-w-4xl mx-auto\">\n            <Cpu className=\"w-16 h-16 text-primary mx-auto mb-6\" />\n            <h2 className=\"text-3xl lg:text-4xl font-bold text-foreground mb-4\">\n              Ready to Build Your Hardware Solution?\n            </h2>\n            <p className=\"text-lg text-muted-foreground mb-8 max-w-2xl mx-auto\">\n              From concept to production, we deliver complete embedded systems solutions. Contact us for a consultation.\n            </p>\n            <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n              <Link href=\"/contact\">\n                <Button size=\"lg\" className=\"bg-primary text-primary-foreground hover:bg-primary/90\" data-testid=\"button-hardware-contact\">\n                  Get Free Consultation\n                </Button>\n              </Link>\n              <Link href=\"/case-studies\">\n                <Button size=\"lg\" variant=\"outline\" data-testid=\"button-view-projects\">\n                  View Our Projects\n                </Button>\n              </Link>\n            </div>\n          </GlassCard>\n        </div>\n      </section>\n\n      <Footer />\n    </div>\n  );\n};\n\nexport default HardwareDevelopment;\n","size_bytes":19770},"client/src/pages/services/PCBDesign.tsx":{"content":"import Header from \"@/components/layout/Header\";\nimport Footer from \"@/components/layout/Footer\";\nimport { GlassCard } from \"@/components/ui/glass-card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Link } from \"wouter\";\nimport { CircuitBoard, CheckCircle, Layers, Zap, Shield, FileSearch, Pencil, Layout, TestTube, FileText, Rocket, ChevronDown } from \"lucide-react\";\nimport { useState } from \"react\";\n\nconst PCBDesign = () => {\n  const [openFaq, setOpenFaq] = useState<number | null>(null);\n  \n  const faqs = [\n    {\n      q: \"What is the typical turnaround time for PCB design?\",\n      a: \"Turnaround time depends on complexity. Simple 2-4 layer boards take 1-2 weeks, while complex multilayer HDI designs require 3-6 weeks. We provide detailed timelines during the initial consultation.\"\n    },\n    {\n      q: \"Do you provide manufacturing support after design completion?\",\n      a: \"Yes! We provide complete manufacturing documentation including Gerber files, BOM, assembly drawings, and can recommend trusted PCB manufacturers. We also offer manufacturing oversight services.\"\n    },\n    {\n      q: \"Can you work with my existing schematics?\",\n      a: \"Absolutely. We can import schematics from various formats including Altium, Eagle, KiCad, and OrCAD. We'll review and optimize them before starting the layout process.\"\n    },\n    {\n      q: \"What design tools do you use?\",\n      a: \"We primarily use Altium Designer and KiCad for PCB design. We also have expertise in Cadence Allegro for high-speed and RF designs, ensuring we use the best tool for your project.\"\n    },\n    {\n      q: \"Do you offer DFM (Design for Manufacturing) analysis?\",\n      a: \"Yes, DFM analysis is included in all our designs. We ensure your PCB can be manufactured reliably and cost-effectively by following industry standards and manufacturer capabilities.\"\n    }\n  ];\n  \n  return (\n    <div className=\"min-h-screen\">\n      <Header />\n      \n      <section className=\"pt-32 pb-20 bg-gradient-to-br from-muted/30 via-background to-accent/20\">\n        <div className=\"container mx-auto px-4 lg:px-8\">\n          <div className=\"text-center mb-16\">\n            <div className=\"w-20 h-20 bg-primary/10 rounded-2xl flex items-center justify-center mx-auto mb-6\">\n              <CircuitBoard className=\"w-10 h-10 text-primary\" />\n            </div>\n            <h1 className=\"text-4xl lg:text-5xl font-bold text-foreground mb-6\" data-testid=\"pcb-design-title\">\n              PCB Design Services\n            </h1>\n            <p className=\"text-xl text-muted-foreground max-w-3xl mx-auto\">\n              Expert circuit board layout with HDI, RF, and high-speed design capabilities for complex applications.\n            </p>\n          </div>\n\n          <div className=\"grid lg:grid-cols-2 gap-12 items-center mb-20\">\n            <div>\n              <h2 className=\"text-3xl font-bold text-foreground mb-6\">Professional PCB Design</h2>\n              <p className=\"text-lg text-muted-foreground mb-6\">\n                Our PCB design services combine cutting-edge technology with years of engineering expertise \n                to deliver circuit boards that meet the most demanding requirements. From simple single-layer \n                boards to complex multilayer HDI designs, we ensure optimal performance and manufacturability.\n              </p>\n              <div className=\"space-y-4 mb-8\">\n                <div className=\"flex items-center gap-3\">\n                  <CheckCircle className=\"w-5 h-5 text-primary\" />\n                  <span className=\"text-foreground\">High-density interconnect (HDI) design</span>\n                </div>\n                <div className=\"flex items-center gap-3\">\n                  <CheckCircle className=\"w-5 h-5 text-primary\" />\n                  <span className=\"text-foreground\">RF and microwave circuit design</span>\n                </div>\n                <div className=\"flex items-center gap-3\">\n                  <CheckCircle className=\"w-5 h-5 text-primary\" />\n                  <span className=\"text-foreground\">High-speed digital signal integrity</span>\n                </div>\n                <div className=\"flex items-center gap-3\">\n                  <CheckCircle className=\"w-5 h-5 text-primary\" />\n                  <span className=\"text-foreground\">EMI/EMC compliance design</span>\n                </div>\n              </div>\n              <Link href=\"/contact\">\n                <Button className=\"bg-primary text-primary-foreground hover:bg-primary/90\" data-testid=\"button-get-quote\">\n                  Get Quote\n                </Button>\n              </Link>\n            </div>\n            <div>\n              <img \n                src=\"https://images.unsplash.com/photo-1518709268805-4e9042af2176?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=600\" \n                alt=\"PCB design and manufacturing\" \n                className=\"w-full h-96 object-cover rounded-2xl shadow-xl\" \n              />\n            </div>\n          </div>\n\n          <div className=\"grid md:grid-cols-3 gap-8 mb-20\">\n            <GlassCard className=\"p-6 text-center\">\n              <div className=\"w-16 h-16 bg-primary/10 rounded-xl flex items-center justify-center mx-auto mb-6\">\n                <Layers className=\"w-8 h-8 text-primary\" />\n              </div>\n              <h3 className=\"text-xl font-bold text-foreground mb-4\">Multilayer Design</h3>\n              <p className=\"text-muted-foreground\">\n                Complex multilayer PCB designs up to 32 layers with advanced stackup optimization \n                for signal integrity and power distribution.\n              </p>\n            </GlassCard>\n\n            <GlassCard className=\"p-6 text-center\">\n              <div className=\"w-16 h-16 bg-primary/10 rounded-xl flex items-center justify-center mx-auto mb-6\">\n                <Zap className=\"w-8 h-8 text-primary\" />\n              </div>\n              <h3 className=\"text-xl font-bold text-foreground mb-4\">High-Speed Design</h3>\n              <p className=\"text-muted-foreground\">\n                Specialized in high-speed digital design with DDR4/5 memory interfaces, \n                SerDes, and gigabit ethernet implementations.\n              </p>\n            </GlassCard>\n\n            <GlassCard className=\"p-6 text-center\">\n              <div className=\"w-16 h-16 bg-primary/10 rounded-xl flex items-center justify-center mx-auto mb-6\">\n                <Shield className=\"w-8 h-8 text-primary\" />\n              </div>\n              <h3 className=\"text-xl font-bold text-foreground mb-4\">EMI/EMC Compliance</h3>\n              <p className=\"text-muted-foreground\">\n                Design for electromagnetic compatibility with proper grounding, shielding, \n                and filtering techniques to meet international standards.\n              </p>\n            </GlassCard>\n          </div>\n\n          {/* Detailed Process Timeline */}\n          <div className=\"mb-20\">\n            <h2 className=\"text-3xl font-bold text-foreground mb-12 text-center\">Our PCB Design Process</h2>\n            <div className=\"space-y-8\">\n              <GlassCard className=\"p-8\">\n                <div className=\"flex items-start gap-6\">\n                  <div className=\"w-16 h-16 bg-primary/10 rounded-xl flex items-center justify-center flex-shrink-0\">\n                    <FileSearch className=\"w-8 h-8 text-primary\" />\n                  </div>\n                  <div className=\"flex-1\">\n                    <div className=\"flex items-center gap-3 mb-3\">\n                      <span className=\"w-8 h-8 bg-primary rounded-full flex items-center justify-center text-primary-foreground font-bold text-sm\">1</span>\n                      <h3 className=\"text-xl font-bold text-foreground\">Requirements Analysis</h3>\n                      <span className=\"ml-auto text-sm text-muted-foreground\">1-2 days</span>\n                    </div>\n                    <p className=\"text-muted-foreground mb-4\">\n                      Comprehensive review of your specifications, performance requirements, environmental constraints, and budget. We analyze signal integrity needs, power distribution, and manufacturing constraints.\n                    </p>\n                    <div className=\"flex flex-wrap gap-2\">\n                      <span className=\"px-3 py-1 bg-primary/10 text-primary rounded-full text-sm\">Specifications Review</span>\n                      <span className=\"px-3 py-1 bg-primary/10 text-primary rounded-full text-sm\">Constraints Analysis</span>\n                      <span className=\"px-3 py-1 bg-primary/10 text-primary rounded-full text-sm\">Budget Planning</span>\n                    </div>\n                  </div>\n                </div>\n              </GlassCard>\n\n              <GlassCard className=\"p-8\">\n                <div className=\"flex items-start gap-6\">\n                  <div className=\"w-16 h-16 bg-primary/10 rounded-xl flex items-center justify-center flex-shrink-0\">\n                    <Pencil className=\"w-8 h-8 text-primary\" />\n                  </div>\n                  <div className=\"flex-1\">\n                    <div className=\"flex items-center gap-3 mb-3\">\n                      <span className=\"w-8 h-8 bg-primary rounded-full flex items-center justify-center text-primary-foreground font-bold text-sm\">2</span>\n                      <h3 className=\"text-xl font-bold text-foreground\">Schematic Design</h3>\n                      <span className=\"ml-auto text-sm text-muted-foreground\">3-5 days</span>\n                    </div>\n                    <p className=\"text-muted-foreground mb-4\">\n                      Complete circuit schematic creation with optimal component selection, electrical rule checking, and design review. We ensure proper circuit functionality before moving to layout.\n                    </p>\n                    <div className=\"flex flex-wrap gap-2\">\n                      <span className=\"px-3 py-1 bg-primary/10 text-primary rounded-full text-sm\">Component Selection</span>\n                      <span className=\"px-3 py-1 bg-primary/10 text-primary rounded-full text-sm\">ERC Validation</span>\n                      <span className=\"px-3 py-1 bg-primary/10 text-primary rounded-full text-sm\">Design Review</span>\n                    </div>\n                  </div>\n                </div>\n              </GlassCard>\n\n              <GlassCard className=\"p-8\">\n                <div className=\"flex items-start gap-6\">\n                  <div className=\"w-16 h-16 bg-primary/10 rounded-xl flex items-center justify-center flex-shrink-0\">\n                    <Layout className=\"w-8 h-8 text-primary\" />\n                  </div>\n                  <div className=\"flex-1\">\n                    <div className=\"flex items-center gap-3 mb-3\">\n                      <span className=\"w-8 h-8 bg-primary rounded-full flex items-center justify-center text-primary-foreground font-bold text-sm\">3</span>\n                      <h3 className=\"text-xl font-bold text-foreground\">PCB Layout & Routing</h3>\n                      <span className=\"ml-auto text-sm text-muted-foreground\">5-10 days</span>\n                    </div>\n                    <p className=\"text-muted-foreground mb-4\">\n                      Precision PCB layout with optimized component placement, intelligent routing, and comprehensive signal integrity analysis. We follow industry best practices for manufacturability.\n                    </p>\n                    <div className=\"flex flex-wrap gap-2\">\n                      <span className=\"px-3 py-1 bg-primary/10 text-primary rounded-full text-sm\">Component Placement</span>\n                      <span className=\"px-3 py-1 bg-primary/10 text-primary rounded-full text-sm\">Signal Routing</span>\n                      <span className=\"px-3 py-1 bg-primary/10 text-primary rounded-full text-sm\">Power Distribution</span>\n                    </div>\n                  </div>\n                </div>\n              </GlassCard>\n\n              <GlassCard className=\"p-8\">\n                <div className=\"flex items-start gap-6\">\n                  <div className=\"w-16 h-16 bg-primary/10 rounded-xl flex items-center justify-center flex-shrink-0\">\n                    <TestTube className=\"w-8 h-8 text-primary\" />\n                  </div>\n                  <div className=\"flex-1\">\n                    <div className=\"flex items-center gap-3 mb-3\">\n                      <span className=\"w-8 h-8 bg-primary rounded-full flex items-center justify-center text-primary-foreground font-bold text-sm\">4</span>\n                      <h3 className=\"text-xl font-bold text-foreground\">Design Verification</h3>\n                      <span className=\"ml-auto text-sm text-muted-foreground\">2-3 days</span>\n                    </div>\n                    <p className=\"text-muted-foreground mb-4\">\n                      Comprehensive verification including DRC, electrical testing, thermal analysis, and signal integrity simulation to ensure design meets all requirements.\n                    </p>\n                    <div className=\"flex flex-wrap gap-2\">\n                      <span className=\"px-3 py-1 bg-primary/10 text-primary rounded-full text-sm\">DRC Check</span>\n                      <span className=\"px-3 py-1 bg-primary/10 text-primary rounded-full text-sm\">SI Analysis</span>\n                      <span className=\"px-3 py-1 bg-primary/10 text-primary rounded-full text-sm\">Thermal Simulation</span>\n                    </div>\n                  </div>\n                </div>\n              </GlassCard>\n\n              <GlassCard className=\"p-8\">\n                <div className=\"flex items-start gap-6\">\n                  <div className=\"w-16 h-16 bg-primary/10 rounded-xl flex items-center justify-center flex-shrink-0\">\n                    <FileText className=\"w-8 h-8 text-primary\" />\n                  </div>\n                  <div className=\"flex-1\">\n                    <div className=\"flex items-center gap-3 mb-3\">\n                      <span className=\"w-8 h-8 bg-primary rounded-full flex items-center justify-center text-primary-foreground font-bold text-sm\">5</span>\n                      <h3 className=\"text-xl font-bold text-foreground\">Documentation & Delivery</h3>\n                      <span className=\"ml-auto text-sm text-muted-foreground\">1-2 days</span>\n                    </div>\n                    <p className=\"text-muted-foreground mb-4\">\n                      Complete manufacturing package preparation with Gerber files, BOM, assembly drawings, and comprehensive specifications for seamless production.\n                    </p>\n                    <div className=\"flex flex-wrap gap-2\">\n                      <span className=\"px-3 py-1 bg-primary/10 text-primary rounded-full text-sm\">Gerber Files</span>\n                      <span className=\"px-3 py-1 bg-primary/10 text-primary rounded-full text-sm\">BOM Generation</span>\n                      <span className=\"px-3 py-1 bg-primary/10 text-primary rounded-full text-sm\">Assembly Drawings</span>\n                    </div>\n                  </div>\n                </div>\n              </GlassCard>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Portfolio Section */}\n      <section className=\"py-20 bg-background\">\n        <div className=\"container mx-auto px-4 lg:px-8\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"text-3xl lg:text-4xl font-bold text-foreground mb-4\">\n              Featured PCB Projects\n            </h2>\n            <p className=\"text-lg text-muted-foreground max-w-2xl mx-auto\">\n              Showcase of our recent PCB designs across various industries and applications\n            </p>\n          </div>\n          \n          <div className=\"grid md:grid-cols-3 gap-8\">\n            <GlassCard className=\"overflow-hidden group\">\n              <div className=\"relative h-64 overflow-hidden\">\n                <img \n                  src=\"https://images.unsplash.com/photo-1518770660439-4636190af475?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=600\" \n                  alt=\"High-speed digital PCB design\" \n                  className=\"w-full h-full object-cover group-hover:scale-110 transition-transform duration-300\" \n                />\n                <div className=\"absolute top-4 right-4 bg-primary text-primary-foreground px-3 py-1 rounded-full text-sm font-semibold\">\n                  10-Layer HDI\n                </div>\n              </div>\n              <div className=\"p-6\">\n                <h3 className=\"text-xl font-bold text-foreground mb-2\">High-Speed Digital System</h3>\n                <p className=\"text-muted-foreground mb-4\">DDR4 memory interface with gigabit Ethernet for industrial IoT gateway</p>\n                <div className=\"flex flex-wrap gap-2\">\n                  <span className=\"text-xs px-2 py-1 bg-muted rounded\">DDR4</span>\n                  <span className=\"text-xs px-2 py-1 bg-muted rounded\">GigE</span>\n                  <span className=\"text-xs px-2 py-1 bg-muted rounded\">Industrial</span>\n                </div>\n              </div>\n            </GlassCard>\n\n            <GlassCard className=\"overflow-hidden group\">\n              <div className=\"relative h-64 overflow-hidden\">\n                <img \n                  src=\"https://images.unsplash.com/photo-1581091226825-a6a2a5aee158?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=600\" \n                  alt=\"RF microwave PCB design\" \n                  className=\"w-full h-full object-cover group-hover:scale-110 transition-transform duration-300\" \n                />\n                <div className=\"absolute top-4 right-4 bg-primary text-primary-foreground px-3 py-1 rounded-full text-sm font-semibold\">\n                  RF/Microwave\n                </div>\n              </div>\n              <div className=\"p-6\">\n                <h3 className=\"text-xl font-bold text-foreground mb-2\">RF Communication Module</h3>\n                <p className=\"text-muted-foreground mb-4\">2.4GHz wireless communication board with impedance-controlled routing</p>\n                <div className=\"flex flex-wrap gap-2\">\n                  <span className=\"text-xs px-2 py-1 bg-muted rounded\">2.4GHz</span>\n                  <span className=\"text-xs px-2 py-1 bg-muted rounded\">Impedance Control</span>\n                  <span className=\"text-xs px-2 py-1 bg-muted rounded\">Wireless</span>\n                </div>\n              </div>\n            </GlassCard>\n\n            <GlassCard className=\"overflow-hidden group\">\n              <div className=\"relative h-64 overflow-hidden\">\n                <img \n                  src=\"https://images.unsplash.com/photo-1587825140708-dfaf72ae4b04?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=600\" \n                  alt=\"Medical device PCB\" \n                  className=\"w-full h-full object-cover group-hover:scale-110 transition-transform duration-300\" \n                />\n                <div className=\"absolute top-4 right-4 bg-primary text-primary-foreground px-3 py-1 rounded-full text-sm font-semibold\">\n                  IPC Class 3\n                </div>\n              </div>\n              <div className=\"p-6\">\n                <h3 className=\"text-xl font-bold text-foreground mb-2\">Medical Device Board</h3>\n                <p className=\"text-muted-foreground mb-4\">FDA-compliant medical device PCB with advanced signal integrity</p>\n                <div className=\"flex flex-wrap gap-2\">\n                  <span className=\"text-xs px-2 py-1 bg-muted rounded\">Medical</span>\n                  <span className=\"text-xs px-2 py-1 bg-muted rounded\">FDA</span>\n                  <span className=\"text-xs px-2 py-1 bg-muted rounded\">Class 3</span>\n                </div>\n              </div>\n            </GlassCard>\n          </div>\n        </div>\n      </section>\n\n      {/* FAQs Section */}\n      <section className=\"py-20 bg-muted/30\">\n        <div className=\"container mx-auto px-4 lg:px-8\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"text-3xl lg:text-4xl font-bold text-foreground mb-4\">\n              Frequently Asked Questions\n            </h2>\n            <p className=\"text-lg text-muted-foreground max-w-2xl mx-auto\">\n              Common questions about our PCB design services\n            </p>\n          </div>\n          \n          <div className=\"max-w-3xl mx-auto space-y-4\">\n            {faqs.map((faq, index) => (\n              <GlassCard key={index} className=\"overflow-hidden\">\n                <button\n                  onClick={() => setOpenFaq(openFaq === index ? null : index)}\n                  className=\"w-full p-6 text-left flex items-center justify-between gap-4 hover:bg-muted/50 transition-colors\"\n                  data-testid={`faq-question-${index}`}\n                >\n                  <h3 className=\"text-lg font-semibold text-foreground\">{faq.q}</h3>\n                  <ChevronDown className={`w-5 h-5 text-primary flex-shrink-0 transition-transform ${openFaq === index ? 'rotate-180' : ''}`} />\n                </button>\n                {openFaq === index && (\n                  <div className=\"px-6 pb-6\">\n                    <p className=\"text-muted-foreground leading-relaxed\">{faq.a}</p>\n                  </div>\n                )}\n              </GlassCard>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* CTA Section */}\n      <section className=\"py-20 bg-primary/10\">\n        <div className=\"container mx-auto px-4 lg:px-8\">\n          <GlassCard className=\"p-12 text-center max-w-4xl mx-auto\">\n            <Rocket className=\"w-16 h-16 text-primary mx-auto mb-6\" />\n            <h2 className=\"text-3xl lg:text-4xl font-bold text-foreground mb-4\">\n              Ready to Start Your PCB Design Project?\n            </h2>\n            <p className=\"text-lg text-muted-foreground mb-8 max-w-2xl mx-auto\">\n              Get expert PCB design services with fast turnaround and competitive pricing. Contact us for a free consultation.\n            </p>\n            <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n              <Link href=\"/contact\">\n                <Button size=\"lg\" className=\"bg-primary text-primary-foreground hover:bg-primary/90\" data-testid=\"button-pcb-contact\">\n                  Get Free Consultation\n                </Button>\n              </Link>\n              <Link href=\"/case-studies\">\n                <Button size=\"lg\" variant=\"outline\" data-testid=\"button-view-case-studies\">\n                  View Case Studies\n                </Button>\n              </Link>\n            </div>\n          </GlassCard>\n        </div>\n      </section>\n\n      <Footer />\n    </div>\n  );\n};\n\nexport default PCBDesign;\n","size_bytes":22595},"client/src/pages/services/WebDesign.tsx":{"content":"import Header from \"@/components/layout/Header\";\nimport Footer from \"@/components/layout/Footer\";\nimport { GlassCard } from \"@/components/ui/glass-card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Link } from \"wouter\";\nimport { Globe, CheckCircle, Smartphone, Search, Palette, Zap, Lightbulb, Pencil, Code, TestTube2, Rocket, ChevronDown } from \"lucide-react\";\nimport { useState } from \"react\";\n\nconst WebDesign = () => {\n  const [openFaq, setOpenFaq] = useState<number | null>(null);\n  \n  const faqs = [\n    {\n      q: \"How long does it take to design and build a website?\",\n      a: \"A standard business website typically takes 4-6 weeks from start to launch. More complex sites with custom features or e-commerce functionality may take 8-12 weeks. We provide a detailed timeline during our initial consultation.\"\n    },\n    {\n      q: \"Will my website be mobile-friendly?\",\n      a: \"Absolutely! All our websites are built with a mobile-first approach, ensuring they look great and function perfectly on all devices - smartphones, tablets, and desktops.\"\n    },\n    {\n      q: \"Can I update the website content myself?\",\n      a: \"Yes! We integrate user-friendly content management systems (CMS) that allow you to easily update text, images, and other content without any technical knowledge. We also provide training on how to use the CMS.\"\n    },\n    {\n      q: \"Do you provide ongoing support after the website launches?\",\n      a: \"Yes, we offer various maintenance and support packages including regular updates, security monitoring, content updates, and technical support to keep your website running smoothly.\"\n    },\n    {\n      q: \"Will my website be optimized for search engines (SEO)?\",\n      a: \"Yes, SEO optimization is built into every website we create. This includes proper meta tags, structured data, fast loading speeds, mobile responsiveness, and clean code - all factors that help your site rank well in search results.\"\n    }\n  ];\n  \n  return (\n    <div className=\"min-h-screen\">\n      <Header />\n      \n      <section className=\"pt-32 pb-20 bg-gradient-to-br from-muted/30 via-background to-accent/20\">\n        <div className=\"container mx-auto px-4 lg:px-8\">\n          <div className=\"text-center mb-16\">\n            <div className=\"w-20 h-20 bg-primary/10 rounded-2xl flex items-center justify-center mx-auto mb-6\">\n              <Globe className=\"w-10 h-10 text-primary\" />\n            </div>\n            <h1 className=\"text-4xl lg:text-5xl font-bold text-foreground mb-6\" data-testid=\"web-design-title\">\n              Professional Web Design Services\n            </h1>\n            <p className=\"text-xl text-muted-foreground max-w-3xl mx-auto\">\n              Custom, responsive, SEO-optimized websites that transform your online presence and drive business growth.\n            </p>\n          </div>\n\n          <div className=\"grid lg:grid-cols-2 gap-12 items-center mb-20\">\n            <div>\n              <h2 className=\"text-3xl font-bold text-foreground mb-6\">Transform Your Digital Presence</h2>\n              <p className=\"text-lg text-muted-foreground mb-6\">\n                We create stunning, user-friendly websites that not only look great but also deliver exceptional \n                performance and convert visitors into customers. Our web design services combine modern aesthetics \n                with cutting-edge technology to build websites that stand out in today's competitive digital landscape.\n              </p>\n              <div className=\"space-y-4 mb-8\">\n                <div className=\"flex items-center gap-3\">\n                  <CheckCircle className=\"w-5 h-5 text-primary\" />\n                  <span className=\"text-foreground\">Mobile-first responsive design</span>\n                </div>\n                <div className=\"flex items-center gap-3\">\n                  <CheckCircle className=\"w-5 h-5 text-primary\" />\n                  <span className=\"text-foreground\">SEO-optimized architecture</span>\n                </div>\n                <div className=\"flex items-center gap-3\">\n                  <CheckCircle className=\"w-5 h-5 text-primary\" />\n                  <span className=\"text-foreground\">Fast loading speeds & performance</span>\n                </div>\n                <div className=\"flex items-center gap-3\">\n                  <CheckCircle className=\"w-5 h-5 text-primary\" />\n                  <span className=\"text-foreground\">Cross-browser compatibility</span>\n                </div>\n              </div>\n              <Link href=\"/contact\">\n                <Button className=\"bg-primary text-primary-foreground hover:bg-primary/90\" data-testid=\"button-get-quote\">\n                  Get Free Consultation\n                </Button>\n              </Link>\n            </div>\n            <div>\n              <img \n                src=\"https://images.unsplash.com/photo-1460925895917-afdab827c52f?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=600\" \n                alt=\"Professional web design workspace\" \n                className=\"w-full h-96 object-cover rounded-2xl shadow-xl\" \n              />\n            </div>\n          </div>\n\n          <div className=\"grid md:grid-cols-3 gap-8 mb-20\">\n            <GlassCard className=\"p-6 text-center\">\n              <div className=\"w-16 h-16 bg-primary/10 rounded-xl flex items-center justify-center mx-auto mb-6\">\n                <Smartphone className=\"w-8 h-8 text-primary\" />\n              </div>\n              <h3 className=\"text-xl font-bold text-foreground mb-4\">Responsive Design</h3>\n              <p className=\"text-muted-foreground\">\n                Mobile-first approach ensuring your website looks perfect and functions flawlessly \n                on all devices, from smartphones to desktops.\n              </p>\n            </GlassCard>\n\n            <GlassCard className=\"p-6 text-center\">\n              <div className=\"w-16 h-16 bg-primary/10 rounded-xl flex items-center justify-center mx-auto mb-6\">\n                <Search className=\"w-8 h-8 text-primary\" />\n              </div>\n              <h3 className=\"text-xl font-bold text-foreground mb-4\">SEO Optimization</h3>\n              <p className=\"text-muted-foreground\">\n                Built-in SEO best practices with optimized meta tags, structured data, \n                and fast loading speeds to rank higher in search results.\n              </p>\n            </GlassCard>\n\n            <GlassCard className=\"p-6 text-center\">\n              <div className=\"w-16 h-16 bg-primary/10 rounded-xl flex items-center justify-center mx-auto mb-6\">\n                <Palette className=\"w-8 h-8 text-primary\" />\n              </div>\n              <h3 className=\"text-xl font-bold text-foreground mb-4\">Custom UI/UX</h3>\n              <p className=\"text-muted-foreground\">\n                Unique, brand-focused designs with intuitive user experiences \n                that engage visitors and drive conversions.\n              </p>\n            </GlassCard>\n          </div>\n\n          {/* Detailed Process Timeline */}\n          <div className=\"mb-20\">\n            <h2 className=\"text-3xl font-bold text-foreground mb-12 text-center\">Our Web Design Process</h2>\n            <div className=\"space-y-8\">\n              <GlassCard className=\"p-8\">\n                <div className=\"flex items-start gap-6\">\n                  <div className=\"w-16 h-16 bg-primary/10 rounded-xl flex items-center justify-center flex-shrink-0\">\n                    <Lightbulb className=\"w-8 h-8 text-primary\" />\n                  </div>\n                  <div className=\"flex-1\">\n                    <div className=\"flex items-center gap-3 mb-3\">\n                      <span className=\"w-8 h-8 bg-primary rounded-full flex items-center justify-center text-primary-foreground font-bold text-sm\">1</span>\n                      <h3 className=\"text-xl font-bold text-foreground\">Discovery & Strategy</h3>\n                      <span className=\"ml-auto text-sm text-muted-foreground\">3-5 days</span>\n                    </div>\n                    <p className=\"text-muted-foreground mb-4\">\n                      Deep dive into your business, brand identity, target audience, and competitors. We define project goals, user personas, and create a comprehensive strategy for your website.\n                    </p>\n                    <div className=\"flex flex-wrap gap-2\">\n                      <span className=\"px-3 py-1 bg-primary/10 text-primary rounded-full text-sm\">Brand Analysis</span>\n                      <span className=\"px-3 py-1 bg-primary/10 text-primary rounded-full text-sm\">User Research</span>\n                      <span className=\"px-3 py-1 bg-primary/10 text-primary rounded-full text-sm\">Strategy Document</span>\n                    </div>\n                  </div>\n                </div>\n              </GlassCard>\n\n              <GlassCard className=\"p-8\">\n                <div className=\"flex items-start gap-6\">\n                  <div className=\"w-16 h-16 bg-primary/10 rounded-xl flex items-center justify-center flex-shrink-0\">\n                    <Pencil className=\"w-8 h-8 text-primary\" />\n                  </div>\n                  <div className=\"flex-1\">\n                    <div className=\"flex items-center gap-3 mb-3\">\n                      <span className=\"w-8 h-8 bg-primary rounded-full flex items-center justify-center text-primary-foreground font-bold text-sm\">2</span>\n                      <h3 className=\"text-xl font-bold text-foreground\">Design & Wireframing</h3>\n                      <span className=\"ml-auto text-sm text-muted-foreground\">5-7 days</span>\n                    </div>\n                    <p className=\"text-muted-foreground mb-4\">\n                      Create wireframes and visual mockups that bring your vision to life. We iterate on designs until you're completely satisfied with the look and feel.\n                    </p>\n                    <div className=\"flex flex-wrap gap-2\">\n                      <span className=\"px-3 py-1 bg-primary/10 text-primary rounded-full text-sm\">Wireframes</span>\n                      <span className=\"px-3 py-1 bg-primary/10 text-primary rounded-full text-sm\">Visual Mockups</span>\n                      <span className=\"px-3 py-1 bg-primary/10 text-primary rounded-full text-sm\">Design Iterations</span>\n                    </div>\n                  </div>\n                </div>\n              </GlassCard>\n\n              <GlassCard className=\"p-8\">\n                <div className=\"flex items-start gap-6\">\n                  <div className=\"w-16 h-16 bg-primary/10 rounded-xl flex items-center justify-center flex-shrink-0\">\n                    <Code className=\"w-8 h-8 text-primary\" />\n                  </div>\n                  <div className=\"flex-1\">\n                    <div className=\"flex items-center gap-3 mb-3\">\n                      <span className=\"w-8 h-8 bg-primary rounded-full flex items-center justify-center text-primary-foreground font-bold text-sm\">3</span>\n                      <h3 className=\"text-xl font-bold text-foreground\">Development & Build</h3>\n                      <span className=\"ml-auto text-sm text-muted-foreground\">10-15 days</span>\n                    </div>\n                    <p className=\"text-muted-foreground mb-4\">\n                      Transform designs into a fully functional, responsive website using modern technologies. We build with performance, security, and scalability in mind.\n                    </p>\n                    <div className=\"flex flex-wrap gap-2\">\n                      <span className=\"px-3 py-1 bg-primary/10 text-primary rounded-full text-sm\">Responsive Coding</span>\n                      <span className=\"px-3 py-1 bg-primary/10 text-primary rounded-full text-sm\">CMS Integration</span>\n                      <span className=\"px-3 py-1 bg-primary/10 text-primary rounded-full text-sm\">Performance Optimization</span>\n                    </div>\n                  </div>\n                </div>\n              </GlassCard>\n\n              <GlassCard className=\"p-8\">\n                <div className=\"flex items-start gap-6\">\n                  <div className=\"w-16 h-16 bg-primary/10 rounded-xl flex items-center justify-center flex-shrink-0\">\n                    <TestTube2 className=\"w-8 h-8 text-primary\" />\n                  </div>\n                  <div className=\"flex-1\">\n                    <div className=\"flex items-center gap-3 mb-3\">\n                      <span className=\"w-8 h-8 bg-primary rounded-full flex items-center justify-center text-primary-foreground font-bold text-sm\">4</span>\n                      <h3 className=\"text-xl font-bold text-foreground\">Testing & Quality Assurance</h3>\n                      <span className=\"ml-auto text-sm text-muted-foreground\">3-5 days</span>\n                    </div>\n                    <p className=\"text-muted-foreground mb-4\">\n                      Rigorous testing across browsers, devices, and screen sizes. We ensure everything works perfectly before launch.\n                    </p>\n                    <div className=\"flex flex-wrap gap-2\">\n                      <span className=\"px-3 py-1 bg-primary/10 text-primary rounded-full text-sm\">Cross-browser Testing</span>\n                      <span className=\"px-3 py-1 bg-primary/10 text-primary rounded-full text-sm\">Device Testing</span>\n                      <span className=\"px-3 py-1 bg-primary/10 text-primary rounded-full text-sm\">SEO Audit</span>\n                    </div>\n                  </div>\n                </div>\n              </GlassCard>\n\n              <GlassCard className=\"p-8\">\n                <div className=\"flex items-start gap-6\">\n                  <div className=\"w-16 h-16 bg-primary/10 rounded-xl flex items-center justify-center flex-shrink-0\">\n                    <Rocket className=\"w-8 h-8 text-primary\" />\n                  </div>\n                  <div className=\"flex-1\">\n                    <div className=\"flex items-center gap-3 mb-3\">\n                      <span className=\"w-8 h-8 bg-primary rounded-full flex items-center justify-center text-primary-foreground font-bold text-sm\">5</span>\n                      <h3 className=\"text-xl font-bold text-foreground\">Launch & Support</h3>\n                      <span className=\"ml-auto text-sm text-muted-foreground\">2-3 days</span>\n                    </div>\n                    <p className=\"text-muted-foreground mb-4\">\n                      Deploy your website to production with proper monitoring and analytics. We provide training and ongoing support to ensure your success.\n                    </p>\n                    <div className=\"flex flex-wrap gap-2\">\n                      <span className=\"px-3 py-1 bg-primary/10 text-primary rounded-full text-sm\">Deployment</span>\n                      <span className=\"px-3 py-1 bg-primary/10 text-primary rounded-full text-sm\">Training</span>\n                      <span className=\"px-3 py-1 bg-primary/10 text-primary rounded-full text-sm\">Ongoing Support</span>\n                    </div>\n                  </div>\n                </div>\n              </GlassCard>\n            </div>\n          </div>\n\n          <GlassCard className=\"p-8 mb-20\">\n            <h2 className=\"text-3xl font-bold text-foreground mb-8 text-center\">Key Features</h2>\n            <div className=\"grid md:grid-cols-2 gap-6\">\n              <div className=\"flex items-start gap-3\">\n                <Zap className=\"w-6 h-6 text-primary mt-1\" />\n                <div>\n                  <h4 className=\"font-semibold text-foreground mb-2\">Lightning Fast Performance</h4>\n                  <p className=\"text-muted-foreground text-sm\">Optimized code and assets for blazing fast load times that keep visitors engaged</p>\n                </div>\n              </div>\n              <div className=\"flex items-start gap-3\">\n                <CheckCircle className=\"w-6 h-6 text-primary mt-1\" />\n                <div>\n                  <h4 className=\"font-semibold text-foreground mb-2\">Content Management</h4>\n                  <p className=\"text-muted-foreground text-sm\">Easy-to-use CMS integration for effortless content updates without technical knowledge</p>\n                </div>\n              </div>\n              <div className=\"flex items-start gap-3\">\n                <CheckCircle className=\"w-6 h-6 text-primary mt-1\" />\n                <div>\n                  <h4 className=\"font-semibold text-foreground mb-2\">E-commerce Ready</h4>\n                  <p className=\"text-muted-foreground text-sm\">Integrated shopping carts, payment gateways, and inventory management systems</p>\n                </div>\n              </div>\n              <div className=\"flex items-start gap-3\">\n                <CheckCircle className=\"w-6 h-6 text-primary mt-1\" />\n                <div>\n                  <h4 className=\"font-semibold text-foreground mb-2\">Analytics Integration</h4>\n                  <p className=\"text-muted-foreground text-sm\">Built-in tracking and analytics to measure performance and user behavior</p>\n                </div>\n              </div>\n            </div>\n          </GlassCard>\n        </div>\n      </section>\n\n      {/* Portfolio Section */}\n      <section className=\"py-20 bg-background\">\n        <div className=\"container mx-auto px-4 lg:px-8\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"text-3xl lg:text-4xl font-bold text-foreground mb-4\">\n              Recent Web Projects\n            </h2>\n            <p className=\"text-lg text-muted-foreground max-w-2xl mx-auto\">\n              Explore our portfolio of stunning websites built for clients across various industries\n            </p>\n          </div>\n          \n          <div className=\"grid md:grid-cols-3 gap-8\">\n            <GlassCard className=\"overflow-hidden group\">\n              <div className=\"relative h-64 overflow-hidden\">\n                <img \n                  src=\"https://images.unsplash.com/photo-1547658719-da2b51169166?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=600\" \n                  alt=\"E-commerce website design\" \n                  className=\"w-full h-full object-cover group-hover:scale-110 transition-transform duration-300\" \n                />\n                <div className=\"absolute top-4 right-4 bg-primary text-primary-foreground px-3 py-1 rounded-full text-sm font-semibold\">\n                  E-commerce\n                </div>\n              </div>\n              <div className=\"p-6\">\n                <h3 className=\"text-xl font-bold text-foreground mb-2\">Fashion E-Store</h3>\n                <p className=\"text-muted-foreground mb-4\">Modern online store with seamless checkout and inventory management</p>\n                <div className=\"flex flex-wrap gap-2\">\n                  <span className=\"text-xs px-2 py-1 bg-muted rounded\">React</span>\n                  <span className=\"text-xs px-2 py-1 bg-muted rounded\">Shopify</span>\n                  <span className=\"text-xs px-2 py-1 bg-muted rounded\">SEO</span>\n                </div>\n              </div>\n            </GlassCard>\n\n            <GlassCard className=\"overflow-hidden group\">\n              <div className=\"relative h-64 overflow-hidden\">\n                <img \n                  src=\"https://images.unsplash.com/photo-1454165804606-c3d57bc86b40?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=600\" \n                  alt=\"Corporate website design\" \n                  className=\"w-full h-full object-cover group-hover:scale-110 transition-transform duration-300\" \n                />\n                <div className=\"absolute top-4 right-4 bg-primary text-primary-foreground px-3 py-1 rounded-full text-sm font-semibold\">\n                  Corporate\n                </div>\n              </div>\n              <div className=\"p-6\">\n                <h3 className=\"text-xl font-bold text-foreground mb-2\">Tech Startup Site</h3>\n                <p className=\"text-muted-foreground mb-4\">Clean, professional website with dynamic content and analytics integration</p>\n                <div className=\"flex flex-wrap gap-2\">\n                  <span className=\"text-xs px-2 py-1 bg-muted rounded\">Next.js</span>\n                  <span className=\"text-xs px-2 py-1 bg-muted rounded\">CMS</span>\n                  <span className=\"text-xs px-2 py-1 bg-muted rounded\">Analytics</span>\n                </div>\n              </div>\n            </GlassCard>\n\n            <GlassCard className=\"overflow-hidden group\">\n              <div className=\"relative h-64 overflow-hidden\">\n                <img \n                  src=\"https://images.unsplash.com/photo-1504868584819-f8e8b4b6d7e3?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=600\" \n                  alt=\"Restaurant website design\" \n                  className=\"w-full h-full object-cover group-hover:scale-110 transition-transform duration-300\" \n                />\n                <div className=\"absolute top-4 right-4 bg-primary text-primary-foreground px-3 py-1 rounded-full text-sm font-semibold\">\n                  Restaurant\n                </div>\n              </div>\n              <div className=\"p-6\">\n                <h3 className=\"text-xl font-bold text-foreground mb-2\">Gourmet Restaurant</h3>\n                <p className=\"text-muted-foreground mb-4\">Beautiful restaurant site with online reservations and menu showcase</p>\n                <div className=\"flex flex-wrap gap-2\">\n                  <span className=\"text-xs px-2 py-1 bg-muted rounded\">WordPress</span>\n                  <span className=\"text-xs px-2 py-1 bg-muted rounded\">Booking</span>\n                  <span className=\"text-xs px-2 py-1 bg-muted rounded\">Mobile-First</span>\n                </div>\n              </div>\n            </GlassCard>\n          </div>\n        </div>\n      </section>\n\n      {/* FAQs Section */}\n      <section className=\"py-20 bg-muted/30\">\n        <div className=\"container mx-auto px-4 lg:px-8\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"text-3xl lg:text-4xl font-bold text-foreground mb-4\">\n              Frequently Asked Questions\n            </h2>\n            <p className=\"text-lg text-muted-foreground max-w-2xl mx-auto\">\n              Common questions about our web design services\n            </p>\n          </div>\n          \n          <div className=\"max-w-3xl mx-auto space-y-4\">\n            {faqs.map((faq, index) => (\n              <GlassCard key={index} className=\"overflow-hidden\">\n                <button\n                  onClick={() => setOpenFaq(openFaq === index ? null : index)}\n                  className=\"w-full p-6 text-left flex items-center justify-between gap-4 hover:bg-muted/50 transition-colors\"\n                  data-testid={`faq-question-${index}`}\n                >\n                  <h3 className=\"text-lg font-semibold text-foreground\">{faq.q}</h3>\n                  <ChevronDown className={`w-5 h-5 text-primary flex-shrink-0 transition-transform ${openFaq === index ? 'rotate-180' : ''}`} />\n                </button>\n                {openFaq === index && (\n                  <div className=\"px-6 pb-6\">\n                    <p className=\"text-muted-foreground leading-relaxed\">{faq.a}</p>\n                  </div>\n                )}\n              </GlassCard>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* CTA Section */}\n      <section className=\"py-20 bg-primary/10\">\n        <div className=\"container mx-auto px-4 lg:px-8\">\n          <GlassCard className=\"p-12 text-center max-w-4xl mx-auto\">\n            <Globe className=\"w-16 h-16 text-primary mx-auto mb-6\" />\n            <h2 className=\"text-3xl lg:text-4xl font-bold text-foreground mb-4\">\n              Ready to Transform Your Online Presence?\n            </h2>\n            <p className=\"text-lg text-muted-foreground mb-8 max-w-2xl mx-auto\">\n              Let's create a stunning website that drives results. Get in touch for a free consultation and quote.\n            </p>\n            <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n              <Link href=\"/contact\">\n                <Button size=\"lg\" className=\"bg-primary text-primary-foreground hover:bg-primary/90\" data-testid=\"button-web-contact\">\n                  Get Free Consultation\n                </Button>\n              </Link>\n              <Link href=\"/case-studies\">\n                <Button size=\"lg\" variant=\"outline\" data-testid=\"button-view-portfolio\">\n                  View Full Portfolio\n                </Button>\n              </Link>\n            </div>\n          </GlassCard>\n        </div>\n      </section>\n\n      <Footer />\n    </div>\n  );\n};\n\nexport default WebDesign;\n","size_bytes":24513},"client/src/pages/solutions/DPUAMCUSystems.tsx":{"content":"import Header from \"@/components/layout/Header\";\nimport Footer from \"@/components/layout/Footer\";\nimport { GlassCard } from \"@/components/ui/glass-card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Link } from \"wouter\";\nimport { Truck, CheckCircle, Download, Wifi, DollarSign, BarChart3, Star, Quote } from \"lucide-react\";\n\nconst DPUAMCUSystems = () => {\n  return (\n    <div className=\"min-h-screen\">\n      <Header />\n      \n      <section className=\"pt-32 pb-20 bg-gradient-to-br from-muted/30 via-background to-accent/20\">\n        <div className=\"container mx-auto px-4 lg:px-8\">\n          <div className=\"text-center mb-16\">\n            <div className=\"w-20 h-20 bg-primary/10 rounded-2xl flex items-center justify-center mx-auto mb-6\">\n              <Truck className=\"w-10 h-10 text-primary\" />\n            </div>\n            <h1 className=\"text-4xl lg:text-5xl font-bold text-foreground mb-6\" data-testid=\"dpu-amcu-title\">\n              DPU/AMCU Collection Systems\n            </h1>\n            <p className=\"text-xl text-muted-foreground max-w-3xl mx-auto\">\n              Automated milk collection units with integrated payment systems, quality testing, and real-time data transmission.\n            </p>\n          </div>\n\n          <div className=\"grid lg:grid-cols-2 gap-12 items-center mb-20\">\n            <div>\n              <h2 className=\"text-3xl font-bold text-foreground mb-6\">Complete Collection Solution</h2>\n              <p className=\"text-lg text-muted-foreground mb-6\">\n                Our DPU (Dairy Processing Unit) and AMCU (Automatic Milk Collection Unit) systems revolutionize \n                dairy operations with fully automated collection, quality testing, and payment processing. \n                Designed for efficiency and transparency in dairy supply chains.\n              </p>\n              <div className=\"space-y-4 mb-8\">\n                <div className=\"flex items-center gap-3\">\n                  <CheckCircle className=\"w-5 h-5 text-primary\" />\n                  <span className=\"text-foreground\">Automated milk collection and weighing</span>\n                </div>\n                <div className=\"flex items-center gap-3\">\n                  <CheckCircle className=\"w-5 h-5 text-primary\" />\n                  <span className=\"text-foreground\">Real-time quality analysis</span>\n                </div>\n                <div className=\"flex items-center gap-3\">\n                  <CheckCircle className=\"w-5 h-5 text-primary\" />\n                  <span className=\"text-foreground\">Instant payment calculation</span>\n                </div>\n                <div className=\"flex items-center gap-3\">\n                  <CheckCircle className=\"w-5 h-5 text-primary\" />\n                  <span className=\"text-foreground\">Cloud-based data management</span>\n                </div>\n              </div>\n              <div className=\"flex gap-4\">\n                <Link href=\"/contact\">\n                  <Button className=\"bg-primary text-primary-foreground hover:bg-primary/90\" data-testid=\"button-get-quote\">\n                    Get Quote\n                  </Button>\n                </Link>\n                <a href=\"#\" onClick={(e) => {\n                  e.preventDefault();\n                  alert('Product datasheet will be available for download soon. Please contact us for detailed specifications.');\n                }} data-testid=\"button-download-datasheet\">\n                  <Button variant=\"outline\">\n                    <Download className=\"w-4 h-4 mr-2\" />\n                    Download Datasheet\n                  </Button>\n                </a>\n              </div>\n            </div>\n            <div>\n              <img \n                src=\"https://images.unsplash.com/photo-1606880700051-d70bdf7cb265?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=600\" \n                alt=\"Modern dairy processing facility\" \n                className=\"w-full h-96 object-cover rounded-2xl shadow-xl\" \n              />\n            </div>\n          </div>\n\n          <div className=\"grid md:grid-cols-3 gap-8 mb-20\">\n            <GlassCard className=\"p-6 text-center\">\n              <div className=\"w-16 h-16 bg-primary/10 rounded-xl flex items-center justify-center mx-auto mb-6\">\n                <BarChart3 className=\"w-8 h-8 text-primary\" />\n              </div>\n              <h3 className=\"text-xl font-bold text-foreground mb-4\">Quality Testing</h3>\n              <p className=\"text-muted-foreground\">\n                Integrated milk analyzer for fat, protein, and SNF testing with automatic \n                acceptance/rejection based on quality parameters.\n              </p>\n            </GlassCard>\n\n            <GlassCard className=\"p-6 text-center\">\n              <div className=\"w-16 h-16 bg-primary/10 rounded-xl flex items-center justify-center mx-auto mb-6\">\n                <DollarSign className=\"w-8 h-8 text-primary\" />\n              </div>\n              <h3 className=\"text-xl font-bold text-foreground mb-4\">Payment System</h3>\n              <p className=\"text-muted-foreground\">\n                Automated payment calculation based on quantity and quality with \n                instant farmer receipts and bank transfer integration.\n              </p>\n            </GlassCard>\n\n            <GlassCard className=\"p-6 text-center\">\n              <div className=\"w-16 h-16 bg-primary/10 rounded-xl flex items-center justify-center mx-auto mb-6\">\n                <Wifi className=\"w-8 h-8 text-primary\" />\n              </div>\n              <h3 className=\"text-xl font-bold text-foreground mb-4\">Remote Monitoring</h3>\n              <p className=\"text-muted-foreground\">\n                Real-time data transmission to cloud servers with mobile app \n                access for farmers and dairy managers.\n              </p>\n            </GlassCard>\n          </div>\n\n          <GlassCard className=\"p-8 mb-12\">\n            <h2 className=\"text-3xl font-bold text-foreground mb-8 text-center\">System Features</h2>\n            <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-8\">\n              <div>\n                <h4 className=\"font-semibold text-foreground mb-3\">Collection Features</h4>\n                <ul className=\"text-muted-foreground space-y-2\">\n                  <li>• Capacity: 500-5000L per hour</li>\n                  <li>• Automatic can washing</li>\n                  <li>• RFID farmer identification</li>\n                  <li>• Digital weighing (±10g accuracy)</li>\n                  <li>• Temperature monitoring</li>\n                </ul>\n              </div>\n              <div>\n                <h4 className=\"font-semibold text-foreground mb-3\">Quality Parameters</h4>\n                <ul className=\"text-muted-foreground space-y-2\">\n                  <li>• Fat content analysis</li>\n                  <li>• SNF measurement</li>\n                  <li>• Protein content</li>\n                  <li>• Adulteration detection</li>\n                  <li>• pH level monitoring</li>\n                </ul>\n              </div>\n              <div>\n                <h4 className=\"font-semibold text-foreground mb-3\">Data Management</h4>\n                <ul className=\"text-muted-foreground space-y-2\">\n                  <li>• Cloud data storage</li>\n                  <li>• Real-time reporting</li>\n                  <li>• SMS notifications</li>\n                  <li>• Mobile app integration</li>\n                  <li>• GPS tracking</li>\n                </ul>\n              </div>\n            </div>\n          </GlassCard>\n\n          <div className=\"grid lg:grid-cols-2 gap-12 mb-20\">\n            <GlassCard className=\"p-8\">\n              <h3 className=\"text-2xl font-bold text-foreground mb-6\">Benefits for Farmers</h3>\n              <div className=\"space-y-4\">\n                <div className=\"flex items-center gap-3\">\n                  <CheckCircle className=\"w-5 h-5 text-primary\" />\n                  <span className=\"text-foreground\">Transparent payment system</span>\n                </div>\n                <div className=\"flex items-center gap-3\">\n                  <CheckCircle className=\"w-5 h-5 text-primary\" />\n                  <span className=\"text-foreground\">Instant quality feedback</span>\n                </div>\n                <div className=\"flex items-center gap-3\">\n                  <CheckCircle className=\"w-5 h-5 text-primary\" />\n                  <span className=\"text-foreground\">Reduced waiting time</span>\n                </div>\n                <div className=\"flex items-center gap-3\">\n                  <CheckCircle className=\"w-5 h-5 text-primary\" />\n                  <span className=\"text-foreground\">Digital records and receipts</span>\n                </div>\n                <div className=\"flex items-center gap-3\">\n                  <CheckCircle className=\"w-5 h-5 text-primary\" />\n                  <span className=\"text-foreground\">Direct bank transfers</span>\n                </div>\n              </div>\n            </GlassCard>\n\n            <GlassCard className=\"p-8\">\n              <h3 className=\"text-2xl font-bold text-foreground mb-6\">Benefits for Dairies</h3>\n              <div className=\"space-y-4\">\n                <div className=\"flex items-center gap-3\">\n                  <CheckCircle className=\"w-5 h-5 text-primary\" />\n                  <span className=\"text-foreground\">Automated operations</span>\n                </div>\n                <div className=\"flex items-center gap-3\">\n                  <CheckCircle className=\"w-5 h-5 text-primary\" />\n                  <span className=\"text-foreground\">Quality assurance</span>\n                </div>\n                <div className=\"flex items-center gap-3\">\n                  <CheckCircle className=\"w-5 h-5 text-primary\" />\n                  <span className=\"text-foreground\">Reduced labor costs</span>\n                </div>\n                <div className=\"flex items-center gap-3\">\n                  <CheckCircle className=\"w-5 h-5 text-primary\" />\n                  <span className=\"text-foreground\">Real-time monitoring</span>\n                </div>\n                <div className=\"flex items-center gap-3\">\n                  <CheckCircle className=\"w-5 h-5 text-primary\" />\n                  <span className=\"text-foreground\">Data-driven decisions</span>\n                </div>\n              </div>\n            </GlassCard>\n          </div>\n\n          {/* System Comparison */}\n          <div>\n            <h2 className=\"text-3xl font-bold text-foreground mb-12 text-center\">Choose Your System</h2>\n            <div className=\"grid md:grid-cols-3 gap-8\">\n              <GlassCard className=\"p-8 relative\">\n                <div className=\"text-center mb-6\">\n                  <h3 className=\"text-2xl font-bold text-foreground mb-2\">DPU Basic</h3>\n                  <p className=\"text-sm text-muted-foreground mb-4\">For small collection centers</p>\n                  <div className=\"text-3xl font-bold text-primary\">From $18,000</div>\n                </div>\n                <ul className=\"space-y-3 mb-6\">\n                  <li className=\"flex items-start gap-2\">\n                    <CheckCircle className=\"w-5 h-5 text-primary flex-shrink-0 mt-0.5\" />\n                    <span className=\"text-sm text-foreground\">500L/hour capacity</span>\n                  </li>\n                  <li className=\"flex items-start gap-2\">\n                    <CheckCircle className=\"w-5 h-5 text-primary flex-shrink-0 mt-0.5\" />\n                    <span className=\"text-sm text-foreground\">Basic milk analyzer</span>\n                  </li>\n                  <li className=\"flex items-start gap-2\">\n                    <CheckCircle className=\"w-5 h-5 text-primary flex-shrink-0 mt-0.5\" />\n                    <span className=\"text-sm text-foreground\">RFID farmer ID</span>\n                  </li>\n                  <li className=\"flex items-start gap-2\">\n                    <CheckCircle className=\"w-5 h-5 text-primary flex-shrink-0 mt-0.5\" />\n                    <span className=\"text-sm text-foreground\">SMS notifications</span>\n                  </li>\n                  <li className=\"flex items-start gap-2\">\n                    <CheckCircle className=\"w-5 h-5 text-primary flex-shrink-0 mt-0.5\" />\n                    <span className=\"text-sm text-foreground\">1 year warranty</span>\n                  </li>\n                </ul>\n                <Link href=\"/contact\">\n                  <Button className=\"w-full\" variant=\"outline\" data-testid=\"button-quote-dpu-basic\">Get Quote</Button>\n                </Link>\n              </GlassCard>\n\n              <GlassCard className=\"p-8 relative border-2 border-primary\">\n                <div className=\"absolute -top-4 left-1/2 transform -translate-x-1/2 bg-primary text-primary-foreground px-4 py-1 rounded-full text-sm font-semibold\">\n                  Recommended\n                </div>\n                <div className=\"text-center mb-6\">\n                  <h3 className=\"text-2xl font-bold text-foreground mb-2\">AMCU Standard</h3>\n                  <p className=\"text-sm text-muted-foreground mb-4\">Complete automation</p>\n                  <div className=\"text-3xl font-bold text-primary\">From $35,000</div>\n                </div>\n                <ul className=\"space-y-3 mb-6\">\n                  <li className=\"flex items-start gap-2\">\n                    <CheckCircle className=\"w-5 h-5 text-primary flex-shrink-0 mt-0.5\" />\n                    <span className=\"text-sm text-foreground\">2000L/hour capacity</span>\n                  </li>\n                  <li className=\"flex items-start gap-2\">\n                    <CheckCircle className=\"w-5 h-5 text-primary flex-shrink-0 mt-0.5\" />\n                    <span className=\"text-sm text-foreground\">Advanced analyzer + adulteration</span>\n                  </li>\n                  <li className=\"flex items-start gap-2\">\n                    <CheckCircle className=\"w-5 h-5 text-primary flex-shrink-0 mt-0.5\" />\n                    <span className=\"text-sm text-foreground\">Auto can washing</span>\n                  </li>\n                  <li className=\"flex items-start gap-2\">\n                    <CheckCircle className=\"w-5 h-5 text-primary flex-shrink-0 mt-0.5\" />\n                    <span className=\"text-sm text-foreground\">Cloud + mobile app</span>\n                  </li>\n                  <li className=\"flex items-start gap-2\">\n                    <CheckCircle className=\"w-5 h-5 text-primary flex-shrink-0 mt-0.5\" />\n                    <span className=\"text-sm text-foreground\">2 years warranty + support</span>\n                  </li>\n                </ul>\n                <Link href=\"/contact\">\n                  <Button className=\"w-full bg-primary text-primary-foreground hover:bg-primary/90\" data-testid=\"button-quote-amcu-standard\">Get Quote</Button>\n                </Link>\n              </GlassCard>\n\n              <GlassCard className=\"p-8 relative\">\n                <div className=\"text-center mb-6\">\n                  <h3 className=\"text-2xl font-bold text-foreground mb-2\">AMCU Premium</h3>\n                  <p className=\"text-sm text-muted-foreground mb-4\">For large cooperatives</p>\n                  <div className=\"text-3xl font-bold text-primary\">From $55,000</div>\n                </div>\n                <ul className=\"space-y-3 mb-6\">\n                  <li className=\"flex items-start gap-2\">\n                    <CheckCircle className=\"w-5 h-5 text-primary flex-shrink-0 mt-0.5\" />\n                    <span className=\"text-sm text-foreground\">5000L/hour capacity</span>\n                  </li>\n                  <li className=\"flex items-start gap-2\">\n                    <CheckCircle className=\"w-5 h-5 text-primary flex-shrink-0 mt-0.5\" />\n                    <span className=\"text-sm text-foreground\">Full lab-grade analyzer</span>\n                  </li>\n                  <li className=\"flex items-start gap-2\">\n                    <CheckCircle className=\"w-5 h-5 text-primary flex-shrink-0 mt-0.5\" />\n                    <span className=\"text-sm text-foreground\">GPS tracking system</span>\n                  </li>\n                  <li className=\"flex items-start gap-2\">\n                    <CheckCircle className=\"w-5 h-5 text-primary flex-shrink-0 mt-0.5\" />\n                    <span className=\"text-sm text-foreground\">Bank integration + API</span>\n                  </li>\n                  <li className=\"flex items-start gap-2\">\n                    <CheckCircle className=\"w-5 h-5 text-primary flex-shrink-0 mt-0.5\" />\n                    <span className=\"text-sm text-foreground\">3 years warranty + priority support</span>\n                  </li>\n                </ul>\n                <Link href=\"/contact\">\n                  <Button className=\"w-full\" variant=\"outline\" data-testid=\"button-quote-amcu-premium\">Get Quote</Button>\n                </Link>\n              </GlassCard>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Testimonials Section */}\n      <section className=\"py-20 bg-muted/30\">\n        <div className=\"container mx-auto px-4 lg:px-8\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"text-3xl lg:text-4xl font-bold text-foreground mb-4\">\n              Success Stories\n            </h2>\n            <p className=\"text-lg text-muted-foreground max-w-2xl mx-auto\">\n              Transforming dairy operations across the country\n            </p>\n          </div>\n\n          <div className=\"grid md:grid-cols-3 gap-8\">\n            <GlassCard className=\"p-8\">\n              <div className=\"flex items-center gap-1 mb-4\">\n                {[...Array(5)].map((_, i) => (\n                  <Star key={i} className=\"w-5 h-5 fill-primary text-primary\" />\n                ))}\n              </div>\n              <Quote className=\"w-10 h-10 text-primary/30 mb-4\" />\n              <p className=\"text-foreground mb-6 leading-relaxed\">\n                \"Our AMCU system has revolutionized milk collection. Farmers get instant payment receipts, and we've reduced collection time by 70%. ROI was achieved in just 18 months!\"\n              </p>\n              <div className=\"flex items-center gap-3\">\n                <div className=\"w-12 h-12 bg-primary/10 rounded-full flex items-center justify-center\">\n                  <span className=\"text-primary font-bold\">AS</span>\n                </div>\n                <div>\n                  <div className=\"font-semibold text-foreground\">Anil Sharma</div>\n                  <div className=\"text-sm text-muted-foreground\">Dairy Cooperative Manager</div>\n                </div>\n              </div>\n            </GlassCard>\n\n            <GlassCard className=\"p-8\">\n              <div className=\"flex items-center gap-1 mb-4\">\n                {[...Array(5)].map((_, i) => (\n                  <Star key={i} className=\"w-5 h-5 fill-primary text-primary\" />\n                ))}\n              </div>\n              <Quote className=\"w-10 h-10 text-primary/30 mb-4\" />\n              <p className=\"text-foreground mb-6 leading-relaxed\">\n                \"The cloud-based monitoring is a game changer. I can track all collection centers from my office in real-time. Quality issues are detected immediately, preventing bad milk from entering the supply chain.\"\n              </p>\n              <div className=\"flex items-center gap-3\">\n                <div className=\"w-12 h-12 bg-primary/10 rounded-full flex items-center justify-center\">\n                  <span className=\"text-primary font-bold\">PJ</span>\n                </div>\n                <div>\n                  <div className=\"font-semibold text-foreground\">Priya Joshi</div>\n                  <div className=\"text-sm text-muted-foreground\">Operations Director</div>\n                </div>\n              </div>\n            </GlassCard>\n\n            <GlassCard className=\"p-8\">\n              <div className=\"flex items-center gap-1 mb-4\">\n                {[...Array(5)].map((_, i) => (\n                  <Star key={i} className=\"w-5 h-5 fill-primary text-primary\" />\n                ))}\n              </div>\n              <Quote className=\"w-10 h-10 text-primary/30 mb-4\" />\n              <p className=\"text-foreground mb-6 leading-relaxed\">\n                \"As a farmer, I love the transparency. I see the exact fat and SNF content of my milk, get a printed receipt, and the money is in my bank the same evening. No disputes, no delays.\"\n              </p>\n              <div className=\"flex items-center gap-3\">\n                <div className=\"w-12 h-12 bg-primary/10 rounded-full flex items-center justify-center\">\n                  <span className=\"text-primary font-bold\">VN</span>\n                </div>\n                <div>\n                  <div className=\"font-semibold text-foreground\">Vijay Naik</div>\n                  <div className=\"text-sm text-muted-foreground\">Dairy Farmer</div>\n                </div>\n              </div>\n            </GlassCard>\n          </div>\n        </div>\n      </section>\n\n      {/* CTA Section */}\n      <section className=\"py-20 bg-primary/10\">\n        <div className=\"container mx-auto px-4 lg:px-8\">\n          <GlassCard className=\"p-12 text-center max-w-4xl mx-auto\">\n            <Truck className=\"w-16 h-16 text-primary mx-auto mb-6\" />\n            <h2 className=\"text-3xl lg:text-4xl font-bold text-foreground mb-4\">\n              Ready to Automate Your Dairy Collection?\n            </h2>\n            <p className=\"text-lg text-muted-foreground mb-8 max-w-2xl mx-auto\">\n              Transform your dairy operations with our DPU/AMCU systems. Get a customized solution for your needs.\n            </p>\n            <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n              <Link href=\"/contact\">\n                <Button size=\"lg\" className=\"bg-primary text-primary-foreground hover:bg-primary/90\" data-testid=\"button-dpu-amcu-contact\">\n                  Schedule Site Visit\n                </Button>\n              </Link>\n              <a href=\"#\" onClick={(e) => {\n                e.preventDefault();\n                alert('Product datasheet will be available for download soon. Please contact us for detailed specifications.');\n              }} data-testid=\"button-download-catalog\">\n                <Button size=\"lg\" variant=\"outline\">\n                  <Download className=\"w-4 h-4 mr-2\" />\n                  Download Catalog\n                </Button>\n              </a>\n            </div>\n          </GlassCard>\n        </div>\n      </section>\n\n      <Footer />\n\n      {/* Schema.org Structured Data */}\n      <script\n        type=\"application/ld+json\"\n        dangerouslySetInnerHTML={{\n          __html: JSON.stringify({\n            \"@context\": \"https://schema.org\",\n            \"@type\": \"Product\",\n            \"name\": \"DPU/AMCU Collection Systems\",\n            \"description\": \"Automated milk collection units with integrated payment systems, quality testing, and real-time data transmission for efficient dairy operations.\",\n            \"manufacturer\": {\n              \"@type\": \"Organization\",\n              \"name\": \"Several Sustain\"\n            },\n            \"offers\": {\n              \"@type\": \"Offer\",\n              \"availability\": \"https://schema.org/InStock\",\n              \"priceCurrency\": \"USD\"\n            },\n            \"applicationCategory\": \"Dairy Technology\",\n            \"operatingSystem\": \"Embedded Linux\"\n          })\n        }}\n      />\n    </div>\n  );\n};\n\nexport default DPUAMCUSystems;\n","size_bytes":23371},"client/src/pages/solutions/MilkAnalyzer.tsx":{"content":"import Header from \"@/components/layout/Header\";\nimport Footer from \"@/components/layout/Footer\";\nimport { GlassCard } from \"@/components/ui/glass-card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Link } from \"wouter\";\nimport { Beaker, CheckCircle, Download, BarChart3, Settings, Shield, Star, Quote } from \"lucide-react\";\n\nconst MilkAnalyzer = () => {\n  return (\n    <div className=\"min-h-screen\">\n      <Header />\n      \n      <section className=\"pt-32 pb-20 bg-gradient-to-br from-muted/30 via-background to-accent/20\">\n        <div className=\"container mx-auto px-4 lg:px-8\">\n          <div className=\"text-center mb-16\">\n            <div className=\"w-20 h-20 bg-primary/10 rounded-2xl flex items-center justify-center mx-auto mb-6\">\n              <Beaker className=\"w-10 h-10 text-primary\" />\n            </div>\n            <h1 className=\"text-4xl lg:text-5xl font-bold text-foreground mb-6\" data-testid=\"milk-analyzer-title\">\n              Milk Analyzer Systems\n            </h1>\n            <p className=\"text-xl text-muted-foreground max-w-3xl mx-auto\">\n              Precision milk composition analysis with real-time fat, protein, lactose, and solids measurement.\n            </p>\n          </div>\n\n          <div className=\"grid lg:grid-cols-2 gap-12 items-center mb-20\">\n            <div>\n              <h2 className=\"text-3xl font-bold text-foreground mb-6\">Advanced Milk Analysis</h2>\n              <p className=\"text-lg text-muted-foreground mb-6\">\n                Our milk analyzer systems utilize cutting-edge near-infrared spectroscopy technology to provide \n                accurate, real-time analysis of milk composition. Perfect for dairy farms, processing plants, \n                and quality control laboratories requiring precise measurements.\n              </p>\n              <div className=\"space-y-4 mb-8\">\n                <div className=\"flex items-center gap-3\">\n                  <CheckCircle className=\"w-5 h-5 text-primary\" />\n                  <span className=\"text-foreground\">Fat, protein, lactose, and SNF analysis</span>\n                </div>\n                <div className=\"flex items-center gap-3\">\n                  <CheckCircle className=\"w-5 h-5 text-primary\" />\n                  <span className=\"text-foreground\">Real-time results in 60 seconds</span>\n                </div>\n                <div className=\"flex items-center gap-3\">\n                  <CheckCircle className=\"w-5 h-5 text-primary\" />\n                  <span className=\"text-foreground\">±0.02% accuracy for fat content</span>\n                </div>\n                <div className=\"flex items-center gap-3\">\n                  <CheckCircle className=\"w-5 h-5 text-primary\" />\n                  <span className=\"text-foreground\">Automatic calibration and cleaning</span>\n                </div>\n              </div>\n              <div className=\"flex gap-4\">\n                <Link href=\"/contact\">\n                  <Button className=\"bg-primary text-primary-foreground hover:bg-primary/90\" data-testid=\"button-get-quote\">\n                    Get Quote\n                  </Button>\n                </Link>\n                <a href=\"#\" onClick={(e) => {\n                  e.preventDefault();\n                  alert('Product specification sheet will be available for download soon. Please contact us for detailed specifications.');\n                }} data-testid=\"button-download-spec\">\n                  <Button variant=\"outline\">\n                    <Download className=\"w-4 h-4 mr-2\" />\n                    Download Specs\n                  </Button>\n                </a>\n              </div>\n            </div>\n            <div>\n              <img \n                src=\"https://images.unsplash.com/photo-1582719188393-bb71ca45dbb9?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=600\" \n                alt=\"Advanced milk analyzer equipment\" \n                className=\"w-full h-96 object-cover rounded-2xl shadow-xl\" \n              />\n            </div>\n          </div>\n\n          <div className=\"grid md:grid-cols-3 gap-8 mb-20\">\n            <GlassCard className=\"p-6 text-center\">\n              <div className=\"w-16 h-16 bg-primary/10 rounded-xl flex items-center justify-center mx-auto mb-6\">\n                <BarChart3 className=\"w-8 h-8 text-primary\" />\n              </div>\n              <h3 className=\"text-xl font-bold text-foreground mb-4\">Real-Time Analysis</h3>\n              <p className=\"text-muted-foreground\">\n                Instantaneous measurement of milk composition with results displayed in under 60 seconds \n                for immediate quality control decisions.\n              </p>\n            </GlassCard>\n\n            <GlassCard className=\"p-6 text-center\">\n              <div className=\"w-16 h-16 bg-primary/10 rounded-xl flex items-center justify-center mx-auto mb-6\">\n                <Settings className=\"w-8 h-8 text-primary\" />\n              </div>\n              <h3 className=\"text-xl font-bold text-foreground mb-4\">Auto Calibration</h3>\n              <p className=\"text-muted-foreground\">\n                Automatic calibration and self-cleaning functions ensure consistent accuracy \n                with minimal maintenance requirements.\n              </p>\n            </GlassCard>\n\n            <GlassCard className=\"p-6 text-center\">\n              <div className=\"w-16 h-16 bg-primary/10 rounded-xl flex items-center justify-center mx-auto mb-6\">\n                <Shield className=\"w-8 h-8 text-primary\" />\n              </div>\n              <h3 className=\"text-xl font-bold text-foreground mb-4\">Quality Assurance</h3>\n              <p className=\"text-muted-foreground\">\n                Built-in quality control features with automatic outlier detection \n                and compliance with international dairy standards.\n              </p>\n            </GlassCard>\n          </div>\n\n          <GlassCard className=\"p-8 mb-12\">\n            <h2 className=\"text-3xl font-bold text-foreground mb-8 text-center\">Technical Specifications</h2>\n            <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-8\">\n              <div>\n                <h4 className=\"font-semibold text-foreground mb-3\">Measurement Parameters</h4>\n                <ul className=\"text-muted-foreground space-y-2\">\n                  <li>• Fat: 0.01% - 20.00%</li>\n                  <li>• Protein: 0.01% - 10.00%</li>\n                  <li>• Lactose: 0.01% - 10.00%</li>\n                  <li>• SNF: 0.01% - 25.00%</li>\n                  <li>• Density: 1.000 - 1.200 g/cm³</li>\n                </ul>\n              </div>\n              <div>\n                <h4 className=\"font-semibold text-foreground mb-3\">Accuracy</h4>\n                <ul className=\"text-muted-foreground space-y-2\">\n                  <li>• Fat: ±0.02%</li>\n                  <li>• Protein: ±0.02%</li>\n                  <li>• Lactose: ±0.03%</li>\n                  <li>• SNF: ±0.05%</li>\n                  <li>• Temperature: ±0.5°C</li>\n                </ul>\n              </div>\n              <div>\n                <h4 className=\"font-semibold text-foreground mb-3\">Operating Conditions</h4>\n                <ul className=\"text-muted-foreground space-y-2\">\n                  <li>• Temperature: 5°C - 40°C</li>\n                  <li>• Humidity: &lt;95% RH</li>\n                  <li>• Power: 100-240V AC</li>\n                  <li>• Sample volume: 20ml</li>\n                  <li>• Analysis time: &lt;60 seconds</li>\n                </ul>\n              </div>\n            </div>\n          </GlassCard>\n\n          <div className=\"mb-20\">\n            <h2 className=\"text-3xl font-bold text-foreground mb-8 text-center\">Applications</h2>\n            <div className=\"grid md:grid-cols-2 lg:grid-cols-4 gap-6 max-w-4xl mx-auto\">\n              <div className=\"text-center\">\n                <h4 className=\"font-semibold text-foreground mb-2\">Dairy Farms</h4>\n                <p className=\"text-sm text-muted-foreground\">On-farm milk testing for herd management and payment systems</p>\n              </div>\n              <div className=\"text-center\">\n                <h4 className=\"font-semibold text-foreground mb-2\">Processing Plants</h4>\n                <p className=\"text-sm text-muted-foreground\">Incoming milk quality control and batch monitoring</p>\n              </div>\n              <div className=\"text-center\">\n                <h4 className=\"font-semibold text-foreground mb-2\">Laboratories</h4>\n                <p className=\"text-sm text-muted-foreground\">Reference testing and calibration services</p>\n              </div>\n              <div className=\"text-center\">\n                <h4 className=\"font-semibold text-foreground mb-2\">Collection Centers</h4>\n                <p className=\"text-sm text-muted-foreground\">Rapid screening and farmer payment calculation</p>\n              </div>\n            </div>\n          </div>\n\n          {/* Product Comparison */}\n          <div className=\"mb-20\">\n            <h2 className=\"text-3xl font-bold text-foreground mb-12 text-center\">Choose Your Model</h2>\n            <div className=\"grid md:grid-cols-3 gap-8\">\n              <GlassCard className=\"p-8 relative\">\n                <div className=\"text-center mb-6\">\n                  <h3 className=\"text-2xl font-bold text-foreground mb-2\">Basic</h3>\n                  <p className=\"text-sm text-muted-foreground mb-4\">Perfect for small farms</p>\n                  <div className=\"text-3xl font-bold text-primary\">From $8,500</div>\n                </div>\n                <ul className=\"space-y-3 mb-6\">\n                  <li className=\"flex items-start gap-2\">\n                    <CheckCircle className=\"w-5 h-5 text-primary flex-shrink-0 mt-0.5\" />\n                    <span className=\"text-sm text-foreground\">Fat & SNF analysis</span>\n                  </li>\n                  <li className=\"flex items-start gap-2\">\n                    <CheckCircle className=\"w-5 h-5 text-primary flex-shrink-0 mt-0.5\" />\n                    <span className=\"text-sm text-foreground\">60 samples/hour</span>\n                  </li>\n                  <li className=\"flex items-start gap-2\">\n                    <CheckCircle className=\"w-5 h-5 text-primary flex-shrink-0 mt-0.5\" />\n                    <span className=\"text-sm text-foreground\">Basic calibration</span>\n                  </li>\n                  <li className=\"flex items-start gap-2\">\n                    <CheckCircle className=\"w-5 h-5 text-primary flex-shrink-0 mt-0.5\" />\n                    <span className=\"text-sm text-foreground\">Manual data entry</span>\n                  </li>\n                  <li className=\"flex items-start gap-2\">\n                    <CheckCircle className=\"w-5 h-5 text-primary flex-shrink-0 mt-0.5\" />\n                    <span className=\"text-sm text-foreground\">1 year warranty</span>\n                  </li>\n                </ul>\n                <Link href=\"/contact\">\n                  <Button className=\"w-full\" variant=\"outline\" data-testid=\"button-quote-basic\">Get Quote</Button>\n                </Link>\n              </GlassCard>\n\n              <GlassCard className=\"p-8 relative border-2 border-primary\">\n                <div className=\"absolute -top-4 left-1/2 transform -translate-x-1/2 bg-primary text-primary-foreground px-4 py-1 rounded-full text-sm font-semibold\">\n                  Most Popular\n                </div>\n                <div className=\"text-center mb-6\">\n                  <h3 className=\"text-2xl font-bold text-foreground mb-2\">Professional</h3>\n                  <p className=\"text-sm text-muted-foreground mb-4\">Ideal for collection centers</p>\n                  <div className=\"text-3xl font-bold text-primary\">From $15,000</div>\n                </div>\n                <ul className=\"space-y-3 mb-6\">\n                  <li className=\"flex items-start gap-2\">\n                    <CheckCircle className=\"w-5 h-5 text-primary flex-shrink-0 mt-0.5\" />\n                    <span className=\"text-sm text-foreground\">Fat, Protein, Lactose & SNF</span>\n                  </li>\n                  <li className=\"flex items-start gap-2\">\n                    <CheckCircle className=\"w-5 h-5 text-primary flex-shrink-0 mt-0.5\" />\n                    <span className=\"text-sm text-foreground\">100 samples/hour</span>\n                  </li>\n                  <li className=\"flex items-start gap-2\">\n                    <CheckCircle className=\"w-5 h-5 text-primary flex-shrink-0 mt-0.5\" />\n                    <span className=\"text-sm text-foreground\">Auto calibration & cleaning</span>\n                  </li>\n                  <li className=\"flex items-start gap-2\">\n                    <CheckCircle className=\"w-5 h-5 text-primary flex-shrink-0 mt-0.5\" />\n                    <span className=\"text-sm text-foreground\">Cloud connectivity</span>\n                  </li>\n                  <li className=\"flex items-start gap-2\">\n                    <CheckCircle className=\"w-5 h-5 text-primary flex-shrink-0 mt-0.5\" />\n                    <span className=\"text-sm text-foreground\">2 years warranty + support</span>\n                  </li>\n                </ul>\n                <Link href=\"/contact\">\n                  <Button className=\"w-full bg-primary text-primary-foreground hover:bg-primary/90\" data-testid=\"button-quote-professional\">Get Quote</Button>\n                </Link>\n              </GlassCard>\n\n              <GlassCard className=\"p-8 relative\">\n                <div className=\"text-center mb-6\">\n                  <h3 className=\"text-2xl font-bold text-foreground mb-2\">Enterprise</h3>\n                  <p className=\"text-sm text-muted-foreground mb-4\">For processing plants</p>\n                  <div className=\"text-3xl font-bold text-primary\">From $25,000</div>\n                </div>\n                <ul className=\"space-y-3 mb-6\">\n                  <li className=\"flex items-start gap-2\">\n                    <CheckCircle className=\"w-5 h-5 text-primary flex-shrink-0 mt-0.5\" />\n                    <span className=\"text-sm text-foreground\">Full composition analysis</span>\n                  </li>\n                  <li className=\"flex items-start gap-2\">\n                    <CheckCircle className=\"w-5 h-5 text-primary flex-shrink-0 mt-0.5\" />\n                    <span className=\"text-sm text-foreground\">200+ samples/hour</span>\n                  </li>\n                  <li className=\"flex items-start gap-2\">\n                    <CheckCircle className=\"w-5 h-5 text-primary flex-shrink-0 mt-0.5\" />\n                    <span className=\"text-sm text-foreground\">Advanced auto calibration</span>\n                  </li>\n                  <li className=\"flex items-start gap-2\">\n                    <CheckCircle className=\"w-5 h-5 text-primary flex-shrink-0 mt-0.5\" />\n                    <span className=\"text-sm text-foreground\">Full API integration</span>\n                  </li>\n                  <li className=\"flex items-start gap-2\">\n                    <CheckCircle className=\"w-5 h-5 text-primary flex-shrink-0 mt-0.5\" />\n                    <span className=\"text-sm text-foreground\">3 years warranty + priority support</span>\n                  </li>\n                </ul>\n                <Link href=\"/contact\">\n                  <Button className=\"w-full\" variant=\"outline\" data-testid=\"button-quote-enterprise\">Get Quote</Button>\n                </Link>\n              </GlassCard>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Testimonials Section */}\n      <section className=\"py-20 bg-muted/30\">\n        <div className=\"container mx-auto px-4 lg:px-8\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"text-3xl lg:text-4xl font-bold text-foreground mb-4\">\n              What Our Customers Say\n            </h2>\n            <p className=\"text-lg text-muted-foreground max-w-2xl mx-auto\">\n              Trusted by dairy farms and processing plants worldwide\n            </p>\n          </div>\n\n          <div className=\"grid md:grid-cols-3 gap-8\">\n            <GlassCard className=\"p-8\">\n              <div className=\"flex items-center gap-1 mb-4\">\n                {[...Array(5)].map((_, i) => (\n                  <Star key={i} className=\"w-5 h-5 fill-primary text-primary\" />\n                ))}\n              </div>\n              <Quote className=\"w-10 h-10 text-primary/30 mb-4\" />\n              <p className=\"text-foreground mb-6 leading-relaxed\">\n                \"The accuracy and speed of this milk analyzer have transformed our collection process. We can now test 100+ samples per hour with consistent results. Best investment we've made!\"\n              </p>\n              <div className=\"flex items-center gap-3\">\n                <div className=\"w-12 h-12 bg-primary/10 rounded-full flex items-center justify-center\">\n                  <span className=\"text-primary font-bold\">RK</span>\n                </div>\n                <div>\n                  <div className=\"font-semibold text-foreground\">Rajesh Kumar</div>\n                  <div className=\"text-sm text-muted-foreground\">Collection Center Manager</div>\n                </div>\n              </div>\n            </GlassCard>\n\n            <GlassCard className=\"p-8\">\n              <div className=\"flex items-center gap-1 mb-4\">\n                {[...Array(5)].map((_, i) => (\n                  <Star key={i} className=\"w-5 h-5 fill-primary text-primary\" />\n                ))}\n              </div>\n              <Quote className=\"w-10 h-10 text-primary/30 mb-4\" />\n              <p className=\"text-foreground mb-6 leading-relaxed\">\n                \"Auto calibration and cleaning features save us hours every week. The cloud connectivity allows us to monitor quality from anywhere. Highly recommend for dairy processing plants.\"\n              </p>\n              <div className=\"flex items-center gap-3\">\n                <div className=\"w-12 h-12 bg-primary/10 rounded-full flex items-center justify-center\">\n                  <span className=\"text-primary font-bold\">SP</span>\n                </div>\n                <div>\n                  <div className=\"font-semibold text-foreground\">Suresh Patil</div>\n                  <div className=\"text-sm text-muted-foreground\">Quality Control Head, Dairy Plant</div>\n                </div>\n              </div>\n            </GlassCard>\n\n            <GlassCard className=\"p-8\">\n              <div className=\"flex items-center gap-1 mb-4\">\n                {[...Array(5)].map((_, i) => (\n                  <Star key={i} className=\"w-5 h-5 fill-primary text-primary\" />\n                ))}\n              </div>\n              <Quote className=\"w-10 h-10 text-primary/30 mb-4\" />\n              <p className=\"text-foreground mb-6 leading-relaxed\">\n                \"Exceptional accuracy and reliability. The ±0.02% precision for fat content gives us confidence in our quality testing. Support team is also very responsive and helpful.\"\n              </p>\n              <div className=\"flex items-center gap-3\">\n                <div className=\"w-12 h-12 bg-primary/10 rounded-full flex items-center justify-center\">\n                  <span className=\"text-primary font-bold\">MD</span>\n                </div>\n                <div>\n                  <div className=\"font-semibold text-foreground\">Meena Desai</div>\n                  <div className=\"text-sm text-muted-foreground\">Laboratory Manager</div>\n                </div>\n              </div>\n            </GlassCard>\n          </div>\n        </div>\n      </section>\n\n      {/* CTA Section */}\n      <section className=\"py-20 bg-primary/10\">\n        <div className=\"container mx-auto px-4 lg:px-8\">\n          <GlassCard className=\"p-12 text-center max-w-4xl mx-auto\">\n            <Beaker className=\"w-16 h-16 text-primary mx-auto mb-6\" />\n            <h2 className=\"text-3xl lg:text-4xl font-bold text-foreground mb-4\">\n              Ready to Upgrade Your Milk Testing?\n            </h2>\n            <p className=\"text-lg text-muted-foreground mb-8 max-w-2xl mx-auto\">\n              Get precise milk analysis with our advanced analyzer systems. Contact us for a demo and pricing.\n            </p>\n            <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n              <Link href=\"/contact\">\n                <Button size=\"lg\" className=\"bg-primary text-primary-foreground hover:bg-primary/90\" data-testid=\"button-milk-analyzer-contact\">\n                  Request Demo\n                </Button>\n              </Link>\n              <a href=\"#\" onClick={(e) => {\n                e.preventDefault();\n                alert('Product specification sheet will be available for download soon. Please contact us for detailed specifications.');\n              }} data-testid=\"button-download-brochure\">\n                <Button size=\"lg\" variant=\"outline\">\n                  <Download className=\"w-4 h-4 mr-2\" />\n                  Download Brochure\n                </Button>\n              </a>\n            </div>\n          </GlassCard>\n        </div>\n      </section>\n\n      <Footer />\n    </div>\n  );\n};\n\nexport default MilkAnalyzer;\n","size_bytes":21029}},"version":1}